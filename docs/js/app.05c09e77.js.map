{"version":3,"file":"js/app.05c09e77.js","mappings":"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","sources":["webpack://blah/./src/App.vue","webpack://blah/src/App.vue","webpack://blah/./src/App.vue?b495","webpack://blah/./src/App.vue?0e40","webpack://blah/./src/plugins/vuetify.js","webpack://blah/./src/main.js","webpack://blah/webpack/bootstrap","webpack://blah/webpack/runtime/chunk loaded","webpack://blah/webpack/runtime/compat get default export","webpack://blah/webpack/runtime/define property getters","webpack://blah/webpack/runtime/global","webpack://blah/webpack/runtime/hasOwnProperty shorthand","webpack://blah/webpack/runtime/make namespace object","webpack://blah/webpack/runtime/jsonp chunk loading","webpack://blah/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{staticStyle:{\"background-image\":\"url('./bg_dark.png')\",\"height\":\"100%\",\"background-position\":\"center\",\"background-repeat\":\"no-repeat\",\"background-size\":\"cover\"}},[_c('v-app-bar',{attrs:{\"collapse\":true,\"dense\":\"\",\"app\":\"\",\"color\":\"dark-grey\",\"dark\":\"\"}},[_c('span',[_vm._v(_vm._s(_vm.version_loaded))]),_c('v-menu',{attrs:{\"bottom\":\"\",\"right\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({attrs:{\"icon\":\"\",\"color\":\"light-green\"}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-dots-vertical\")])],1)]}}])},[_c('v-list',[_c('v-list-item',{on:{\"click\":function($event){return _vm.load_data('v0.11.7')}}},[_c('v-list-item-title',[_vm._v(\"v0.11.7\")])],1),_c('v-list-item',{on:{\"click\":function($event){return _vm.load_data('v0.11.5')}}},[_c('v-list-item-title',[_vm._v(\"v0.11.5\")])],1)],1)],1)],1),_c('v-main',[_c('v-container',[_c('div',{staticClass:\"d-flex justify-space-around\"},[_c('v-img',{attrs:{\"src\":\"title_logo.png\",\"max-height\":\"150\",\"max-width\":\"250\"}})],1),_c('br'),_c('v-card',{staticStyle:{\"opacity\":\"0.90\"}},[(_vm.loading)?_c('v-progress-linear',{attrs:{\"indeterminate\":\"\",\"color\":\"yellow darken-2\"}}):_vm._e(),_c('v-tabs',{attrs:{\"background-color\":\"blue-grey darken-4\",\"center-active\":\"\",\"dark\":\"\"},model:{value:(_vm.selected_tab),callback:function ($$v) {_vm.selected_tab=$$v},expression:\"selected_tab\"}},_vm._l((_vm.tabs),function(tab){return _c('v-tab',{key:tab},[_vm._v(\" \"+_vm._s(tab)+\" \")])}),1),_c('v-tabs-items',{attrs:{\"theme--dark\":\"\"},model:{value:(_vm.selected_tab),callback:function ($$v) {_vm.selected_tab=$$v},expression:\"selected_tab\"}},_vm._l((_vm.tabs),function(tab){return _c('v-tab-item',{key:tab},[_c('div',{staticStyle:{\"overflow-y\":\"auto\"}},[(tab == 'Artifacts')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.artifact_search),callback:function ($$v) {_vm.artifact_search=$$v},expression:\"artifact_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.artifact_headers,\"items\":_vm.artifacts,\"search\":_vm.artifact_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Bugs')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.bug_search),callback:function ($$v) {_vm.bug_search=$$v},expression:\"bug_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.bug_headers,\"items\":_vm.bugs,\"search\":_vm.bug_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Cooking')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.cooking_search),callback:function ($$v) {_vm.cooking_search=$$v},expression:\"cooking_search\"}})],1),_c('v-data-table',{staticClass:\"text-pre-wrap\",attrs:{\"dense\":\"\",\"headers\":_vm.cooking_headers,\"items\":_vm.cooking,\"search\":_vm.cooking_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Fish')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.fish_search),callback:function ($$v) {_vm.fish_search=$$v},expression:\"fish_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.fish_headers,\"items\":_vm.fish,\"search\":_vm.fish_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Forage')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.forage_search),callback:function ($$v) {_vm.forage_search=$$v},expression:\"forage_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.forage_headers,\"items\":_vm.forage,\"search\":_vm.forage_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Harvest')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.crops_search),callback:function ($$v) {_vm.crops_search=$$v},expression:\"crops_search\"}})],1),_c('v-data-table',{staticClass:\"text-pre-wrap\",attrs:{\"dense\":\"\",\"headers\":_vm.crops_headers,\"items\":_vm.crops,\"search\":_vm.crops_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e()],1)])}),1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-app style=\r\n      \"background-image: url('./bg_dark.png');\r\n      height: 100%;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\"\r\n    >\r\n    <v-app-bar\r\n      :collapse=true\r\n      dense\r\n      app\r\n      color=\"dark-grey\"\r\n      dark\r\n    >\r\n      <span>{{version_loaded}}</span>\r\n      <v-menu\r\n        bottom\r\n        right\r\n      >\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n          <v-btn\r\n            icon\r\n            color=\"light-green\"\r\n            v-bind=\"attrs\"\r\n            v-on=\"on\"\r\n          >\r\n            <v-icon>mdi-dots-vertical</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <v-list>\r\n          <v-list-item @click=\"load_data('v0.11.7')\">\r\n            <v-list-item-title>v0.11.7</v-list-item-title>\r\n          </v-list-item>\r\n\r\n          <!-- <v-list-item @click=\"load_data('v.0.11.6')\">\r\n            <v-list-item-title>v.0.11.6</v-list-item-title>\r\n          </v-list-item> -->\r\n\r\n          <v-list-item @click=\"load_data('v0.11.5')\">\r\n            <v-list-item-title>v0.11.5</v-list-item-title>\r\n          </v-list-item>\r\n\r\n          <!-- <v-list-item @click=\"load_data('alpha')\">\r\n            <v-list-item-title>Alpha</v-list-item-title>\r\n          </v-list-item> -->\r\n        </v-list>\r\n      </v-menu>\r\n\r\n    </v-app-bar>\r\n\r\n    <v-main>\r\n      <v-container>\r\n        <div class=\"d-flex justify-space-around\">\r\n          <v-img src=\"title_logo.png\" max-height=\"150\" max-width=\"250\"></v-img>\r\n          <!--<h1 class=\"text-h2 font-weight-bold\">Aldarian Archive</h1>-->\r\n        </div>\r\n        <br />\r\n\r\n        <v-card style=\"opacity: 0.90\" >\r\n          <v-progress-linear v-if=\"loading\" indeterminate color=\"yellow darken-2\"></v-progress-linear>\r\n          <v-tabs v-model=\"selected_tab\" background-color=\"blue-grey darken-4\" center-active dark>\r\n            <v-tab v-for=\"tab in tabs\" :key=\"tab\">\r\n              {{ tab }}\r\n            </v-tab>\r\n          </v-tabs>\r\n\r\n          <v-tabs-items theme--dark v-model=\"selected_tab\">\r\n            <v-tab-item v-for=\"tab in tabs\" :key=\"tab\">\r\n              <div style=\"overflow-y: auto;\">\r\n                <!-- Artifacts -->\r\n                <v-card v-if=\"tab == 'Artifacts'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"artifact_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense :headers=\"artifact_headers\" :items=\"artifacts\" :search=\"artifact_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Bugs -->\r\n                <v-card v-if=\"tab == 'Bugs'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"bug_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense :headers=\"bug_headers\" :items=\"bugs\" :search=\"bug_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Cooking -->\r\n                <v-card v-if=\"tab == 'Cooking'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"cooking_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense class=\"text-pre-wrap\" :headers=\"cooking_headers\" :items=\"cooking\" :search=\"cooking_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Fish -->\r\n                <v-card v-if=\"tab == 'Fish'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"fish_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                <v-data-table dense :headers=\"fish_headers\" :items=\"fish\" :search=\"fish_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Forage -->\r\n                <v-card v-if=\"tab == 'Forage'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"forage_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                <v-data-table dense :headers=\"forage_headers\" :items=\"forage\" :search=\"forage_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Harvest -->\r\n                <v-card v-if=\"tab == 'Harvest'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"crops_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense class=\"text-pre-wrap\" :headers=\"crops_headers\" :items=\"crops\" :search=\"crops_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n              </div>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-card>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n\r\n  data: () => ({\r\n      lastLoadingPause: Date.now(),\r\n      loading: true,\r\n      version_loaded: \"v0.11.7\", // The version to load on startup\r\n      selected_tab: null,\r\n      tabs: [\r\n        \"Artifacts\",\r\n        //\"Blacksmithing\",\r\n        \"Bugs\",\r\n        \"Cooking\",\r\n        //\"Crafting\",\r\n        \"Fish\",\r\n        \"Forage\",\r\n        \"Harvest\",\r\n        //\"Locations\",\r\n        //\"NPCs\",\r\n        //\"Quests\",\r\n        // Schedules\r\n      ],\r\n\r\n      // fish_panels: [\r\n      //   \"Misc\",\r\n      //   \"Ocean\",\r\n      //   \"Pond\",\r\n      //   \"River\"\r\n      // ],\r\n\r\n      // Artifacts\r\n      artifact_search: \"\",\r\n      artifact_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Location\", value: \"location\" },\r\n        { text: \"Sources\", value: \"sources\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n        { text: \"Renown\", value: \"renown\" },\r\n      ],\r\n      artifacts: [],\r\n\r\n      // Bugs\r\n      bug_search: \"\",\r\n      bug_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Type\", value: \"type\" },\r\n        { text: \"Locations\", value: \"locations\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Hours\", value: \"hours\" },\r\n        { text: \"Weather\", value: \"weather\" },\r\n        { text: \"Hiding Spots\", value: \"liked_object_categories\" },\r\n        { text: \"Spawn\", value: \"spawn\" },\r\n        { text: \"Attraction\", value: \"attraction\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n      ],\r\n      bugs: [],\r\n\r\n      // Cooking\r\n      cooking_search: \"\",\r\n      cooking_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Stars\", value: \"stars\" },\r\n        { text: \"Cooking Lv\", value: \"crafting_level_requirement\" },\r\n        { text: \"Kitchen Lv\", value: \"kitchen_tier_requirement\" },\r\n        { text: \"Obtained By\", value: \"obtained_by\" },\r\n        { text: \"Obtained From\", value: \"obtained_from\" },\r\n        { text: \"Price\", value: \"recipe_price\" },\r\n        { text: \"Recipe\", value: \"recipe\" },\r\n        { text: \"Time\", value: \"time\" },\r\n      ],\r\n      cooking: [],\r\n\r\n      // Crops\r\n      crops_search: \"\",\r\n      crops_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Season\", value: \"seasons\" },\r\n        { text: \"Growth Time\", value: \"growth_time\" },\r\n        { text: \"Regrowth Time\", value: \"growth_time\" },\r\n        { text: \"Restoration\", value: \"restore\" },\r\n        { text: \"Sell Price\", value: \"sell_price\" },\r\n        { text: \"Purchase Price\", value: \"purchase_price\" },\r\n        { text: \"Seed\", value: \"seed_name\" },\r\n        { text: \"Seed Price\", value: \"seed_price\" },\r\n      ],\r\n      crops: [],\r\n\r\n      // Fish\r\n      fish_search: \"\",\r\n      fish_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Locations\", value: \"locations\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Weather\", value: \"weather\" },\r\n        { text: \"Diving\", value: \"diving\" },\r\n        { text: \"Size\", value: \"size\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n      ],\r\n      fish: [],\r\n\r\n      // Forage\r\n      forage_search: \"\",\r\n      forage_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Source (Bush/Tree)\", value: \"source\" },\r\n        { text: \"Restoration\", value: \"restore\" },\r\n        { text: \"Sell Price\", value: \"sell_price\" },\r\n        { text: \"Purchase Price\", value: \"purchase_price\" },\r\n      ],\r\n      forage: [],\r\n    }),\r\n\r\n    methods: {\r\n      pauseLoading: function() {\r\n        return new Promise(r => setTimeout(r));\r\n      },\r\n\r\n      loadingPauseCheck: async function() {\r\n        if(Date.now() - 30 > this.lastLoadingPause) {\r\n          this.lastLoadingPause = Date.now();\r\n          await this.pauseLoading();\r\n        }\r\n      },\r\n\r\n      clear_data: function() {\r\n        this.artifacts = [];\r\n        this.artifacts_dict = {};\r\n        this.bugs = [];\r\n        this.bugs_dict = {};\r\n        this.cooking = [];\r\n        this.cooking_dict = {};\r\n        this.crops = [];\r\n        this.crops_dict = {};\r\n        this.fish = [];\r\n        this.forage = [];\r\n        this.forage_dict = {};\r\n      },\r\n\r\n      load_data: function(version) {\r\n        this.clear_data();\r\n        this.loading = true;\r\n        this.version_loaded = version;\r\n        console.log(\"Loaded Data: \" + version);\r\n        if(version === 'v0.11.7') {\r\n          this.parse_localization(require('@/assets/data/v0.11.7/localization.json'));\r\n          this.parse_fiddle(require('@/assets/data/v0.11.7/__fiddle__.json'));\r\n\r\n        }\r\n        if(version === 'v0.11.5') {\r\n          this.parse_localization(require('@/assets/data/v0.11.5/localization.json'));\r\n          this.parse_fiddle(require('@/assets/data/v0.11.5/__fiddle__.json'));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * \r\n       * @param hours_array Array[int] of two numbers representing a time range (hours of the day) for something.\r\n       */\r\n      parse_hours_range: function(hours_array) {\r\n        let start_time = \"6:00AM\";\r\n        if(hours_array[0] > 6 && hours_array[0] < 12) {\r\n          start_time = hours_array[0] + \":00AM\"\r\n        }\r\n        else if(hours_array[0] == 12) {\r\n          start_time = hours_array[0] + \":00PM\"\r\n        }\r\n        else if(hours_array[0] > 12 && hours_array[0] < 24) {\r\n          start_time = (hours_array[0] - 12) + \":00PM\"\r\n        }\r\n        else if(hours_array[0] == 24) {\r\n          start_time = hours_array[0] + \":00AM\"\r\n        }\r\n        else if(hours_array[0] > 24) {\r\n          start_time = (hours_array[0] - 24) + \":00AM\"\r\n        }\r\n\r\n        let end_time = \"6:00AM\";\r\n        if(hours_array[1] > 6 && hours_array[1] < 12) {\r\n          end_time = hours_array[1] + \":00AM\"\r\n        }\r\n        else if(hours_array[1] == 12) {\r\n          end_time = hours_array[1] + \":00PM\"\r\n        }\r\n        else if(hours_array[1] > 12 && hours_array[1] < 24) {\r\n          end_time = (hours_array[1] - 12) + \":00PM\"\r\n        }\r\n        else if(hours_array[1] == 24) {\r\n          end_time = hours_array[1] + \":00AM\"\r\n        }\r\n        else if(hours_array[1] > 24) {\r\n          end_time = (hours_array[1] - 24) + \":00AM\"\r\n        }\r\n        \r\n        return start_time + \" to \" + end_time;\r\n      },\r\n\r\n      parse_localization: function(json) {\r\n        this.localizations_eng = json[\"eng\"];\r\n      },\r\n\r\n      find_localization_string: function(pattern) {\r\n        for(let l in this.localizations_eng) {\r\n          if(l.match(pattern)) {\r\n            return l;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      parse_fiddle: async function(json) {\r\n        // Artifact Data\r\n        var data_artifacts = json[\"artifacts\"];\r\n\r\n        // Bugs Data\r\n        var data_bugs = json[\"bugs\"];\r\n\r\n        // Dungeons Data\r\n        var data_dungeons = json[\"dungeons\"]\r\n\r\n        // Fish Data\r\n        var data_fish = json[\"fish\"];\r\n        var data_fishing = json[\"fishing\"];\r\n\r\n        // Items Data\r\n        var items_other_artifacts = json[\"items\"][\"other\"][\"artifacts\"];\r\n        var items_other_bugs = json[\"items\"][\"other\"][\"bugs\"];\r\n        var items_other_crops_and_forage = json[\"items\"][\"other\"][\"crops_and_forage\"];\r\n        var items_fish = json[\"items\"][\"fish\"];\r\n        var items_mines = json[\"items\"][\"mines\"];\r\n        var items_other_cooked_dishes = json[\"items\"][\"other\"][\"cooked_dishes\"];\r\n\r\n        // Letters Data\r\n        var data_letters = json[\"letters\"];\r\n\r\n        // Misc Data\r\n        var data_misc = json[\"misc\"];\r\n\r\n        // Museum Archaeology Data\r\n        var data_museum_wings = json[\"museum_wings\"];\r\n        \r\n        // Object Prototypes Data\r\n        var object_prototypes = json[\"object_prototypes\"];\r\n\r\n        // Quests Data\r\n        var data_quests = json[\"quests\"];\r\n\r\n        // Stores Data\r\n        var data_stores = json[\"stores\"];\r\n\r\n        // Wishing Well Data\r\n        var data_wishing_well = json[\"wishing_well\"];\r\n\r\n        // Chicken Statue Data\r\n        var data_chicken_statue = json[\"chicken_statue\"];\r\n\r\n        // Restoration Data\r\n        var data_restoration = json[\"restoration\"];\r\n\r\n        // Forageables Data\r\n        var data_forageables = json[\"forageables\"];\r\n\r\n        // PARSE FISH\r\n        this.fish = [];\r\n\r\n        // Extract all fish from the items/mines dictionary.\r\n        for(let mines_location in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let m in items_mines[mines_location]) {\r\n            if(items_mines[mines_location][m][\"tags\"] !== undefined) {\r\n              if(items_mines[mines_location][m][\"tags\"].includes(\"fishable\")) { \r\n                if(items_mines[mines_location][m][\"value\"] !== undefined) {\r\n                  this.fish.push({\r\n                    \"key\": m, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                    \"value\": items_mines[mines_location][m][\"value\"][\"bin\"],\r\n                    \"locations\": mines_location\r\n                  });\r\n                }\r\n                else {\r\n                  this.fish.push({\r\n                    \"key\": m, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                    \"value\": \"None\",\r\n                    \"locations\": mines_location\r\n                  });  \r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract all fish from the items/fish dictionary.\r\n        for(let fish_location in items_fish) {\r\n          await this.loadingPauseCheck();\r\n          for(let f in items_fish[fish_location]) {\r\n            if(items_fish[fish_location][f][\"tags\"] !== undefined) {\r\n              if(items_fish[fish_location][f][\"tags\"].includes(\"fishable\")) {\r\n                if(items_fish[fish_location][f][\"value\"] !== undefined) {\r\n                  this.fish.push({\r\n                    \"key\": f, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_fish[fish_location][f][\"name\"]],\r\n                    \"value\": items_fish[fish_location][f][\"value\"][\"bin\"]\r\n                  });\r\n                }\r\n                else {\r\n                  this.fish.push({\r\n                    \"key\": f, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_fish[fish_location][f][\"name\"]],\r\n                    \"value\": \"None\"\r\n                  });  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional fish data from the fish dictionary.\r\n        for(let i = 0; i < this.fish.length; i++) {\r\n          await this.loadingPauseCheck();\r\n          if(this.fish[i][\"key\"] in data_fish) {\r\n            if(data_fish[this.fish[i][\"key\"]][\"seasons\"] !== undefined) {\r\n              this.fish[i][\"seasons\"] = data_fish[this.fish[i][\"key\"]][\"seasons\"].join(\", \");\r\n            }\r\n            else {\r\n              this.fish[i][\"seasons\"] = \"spring, summer, fall, winter\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"water_type\"] !== undefined) {\r\n              if(Array.isArray(data_fish[this.fish[i][\"key\"]][\"water_type\"])) {\r\n                this.fish[i][\"locations\"] = data_fish[this.fish[i][\"key\"]][\"water_type\"].join(\", \");\r\n              }\r\n              else {\r\n                this.fish[i][\"locations\"] = data_fish[this.fish[i][\"key\"]][\"water_type\"];\r\n              }\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"size\"] !== undefined) {\r\n              this.fish[i][\"size\"] = data_fish[this.fish[i][\"key\"]][\"size\"];\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"rarity\"] !== undefined) {\r\n              this.fish[i][\"rarity\"] = data_fish[this.fish[i][\"key\"]][\"rarity\"];\r\n            }\r\n            else {\r\n              this.fish[i][\"rarity\"] = \"common\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"weather\"] !== undefined) {\r\n              if(Array.isArray(data_fish[this.fish[i][\"key\"]][\"weather\"])) {\r\n                this.fish[i][\"weather\"] = data_fish[this.fish[i][\"key\"]][\"weather\"].join(\", \");\r\n              }\r\n              else {\r\n                this.fish[i][\"weather\"] = data_fish[this.fish[i][\"key\"]][\"weather\"];\r\n              }\r\n            }\r\n            else {\r\n              this.fish[i][\"weather\"] = \"calm, special, inclement, heavy_inclement\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"retrieval\"] !== undefined) {\r\n              if(data_fish[this.fish[i][\"key\"]][\"retrieval\"].includes(\"divespot\")) {\r\n                this.fish[i][\"diving\"] = \"yes\";\r\n              }\r\n              else {\r\n                this.fish[i][\"diving\"] = \"no\";\r\n              }\r\n            }\r\n            else {\r\n              this.fish[i][\"diving\"] = \"no\";\r\n            }\r\n\r\n          }\r\n          // It's a from a dive spot or other forage.\r\n          else {\r\n            console.log(\"This should not execute!\");\r\n          }\r\n        }\r\n\r\n        // PARSE ARTIFACTS\r\n        this.artifacts = [];\r\n        this.artifacts_dict = {}\r\n\r\n        // Create artifact location lookup.\r\n        var artifact_location_lookup_dict = {\r\n          // aldrian is in the /artifacts/location dictionary\r\n          // caldosian is in the /artifacts/location dictionary\r\n          // alda is in the /artifacts/location dictionary\r\n          // ancient is in the /artifacts/location dictionary\r\n          // prehistoric is in the /artifacts/location dictionary\r\n          \"oopart\": \"dig_spot (Well Placed Perk)\",\r\n          \"aquatic\": \"fishing (Aquatic Antiquities Perk)\",\r\n          \"sunken\": \"diving (Sunken Secrets Perk)\",\r\n          //\"dungeon\": \"mines (Any Biome)\", // Confirm this is correct\r\n          \"upper_mines_artifacts\": \"upper_mines\",\r\n          \"tide_caverns\": \"tide_caverns\",\r\n          \"deep_earth\": \"deep_earth\"\r\n        };\r\n        for(let location in data_artifacts[\"locations\"]) {\r\n          artifact_location_lookup_dict[data_artifacts[\"locations\"][location]] = location;\r\n        }\r\n        artifact_location_lookup_dict[\"mine\"] = \"mines (Any Biome)\";\r\n        console.log(artifact_location_lookup_dict); // TODO: Figure out how to look up perk requirements\r\n\r\n        // Extract all artifacts from the items/mines dictionary.\r\n        for(let mines_location in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let m in items_mines[mines_location]) {\r\n            if(items_mines[mines_location][m][\"tags\"] !== undefined) {\r\n              if(items_mines[mines_location][m][\"tags\"].includes(\"archaeology\")) {\r\n                this.artifacts_dict[m] = {\r\n                  \"key\": m,\r\n                  \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                  \"location\": mines_location,\r\n                  \"value\": items_mines[mines_location][m][\"value\"][\"bin\"],\r\n                  \"renown\": items_mines[mines_location][m][\"value\"][\"renown\"]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract all artifacts from the items/other/artifacts dictionary.\r\n        for(let artifact in items_other_artifacts) {\r\n          await this.loadingPauseCheck();\r\n          if(items_other_artifacts[artifact][\"tags\"] !== undefined) {\r\n            if(items_other_artifacts[artifact][\"tags\"].includes(\"archaeology\")) {\r\n              this.artifacts_dict[artifact] = {\r\n                \"key\": artifact,\r\n                \"name\": this.localizations_eng[items_other_artifacts[artifact][\"name\"]],\r\n                \"value\": items_other_artifacts[artifact][\"value\"][\"bin\"],\r\n                \"renown\": items_other_artifacts[artifact][\"value\"][\"renown\"]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the object_prototypes/rock dictionary.\r\n        for(let node in object_prototypes[\"rock\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"rock\"][node][\"drops\"] !== undefined) {\r\n            for(let drop in object_prototypes[\"rock\"][node][\"drops\"]) {\r\n              if(this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]] !== undefined) {\r\n                if(this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"] !== undefined) {\r\n                  this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"].push(node);\r\n                }\r\n                else {\r\n                  this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"] = [node];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the artifacts/loot dictionary.\r\n        for(let artifact in data_artifacts[\"loot\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[artifact] !== undefined) {\r\n            this.artifacts_dict[artifact][\"rarity\"] = data_artifacts[\"loot\"][artifact];\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the museum_wings/archaeology dictionary.\r\n        for(let set in data_museum_wings[\"archaeology\"][\"sets\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let item in data_museum_wings[\"archaeology\"][\"sets\"][set][\"items\"]) {\r\n            let item_name = data_museum_wings[\"archaeology\"][\"sets\"][set][\"items\"][item];\r\n            if(this.artifacts_dict[item_name] !== undefined) {\r\n              this.artifacts_dict[item_name][\"location\"] = artifact_location_lookup_dict[set];\r\n              if(this.artifacts_dict[item_name][\"sources\"] !== undefined) {\r\n                this.artifacts_dict[item_name][\"sources\"].push(\"dig_spot\");\r\n              }\r\n              else {\r\n                this.artifacts_dict[item_name][\"sources\"] = [\"dig_spot\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the dungeons/dungeond/biomes dictionary.\r\n        var object_to_biome_dict = {};\r\n        for(let biome in data_dungeons[\"dungeons\"][\"biomes\"]) {\r\n          await this.loadingPauseCheck();\r\n          let biome_name = data_dungeons[\"dungeons\"][\"biomes\"][biome][\"artifact_set\"];\r\n          if(biome_name === \"upper_mines_artifacts\") {\r\n            biome_name = \"upper_mines\";\r\n          }\r\n\r\n          for(let i in data_dungeons[\"dungeons\"][\"biomes\"][biome][\"votes\"][\"ore_rock\"]) {\r\n            let ore = data_dungeons[\"dungeons\"][\"biomes\"][biome][\"votes\"][\"ore_rock\"][i][\"object\"];\r\n            object_to_biome_dict[ore] = biome_name;\r\n          }          \r\n        }\r\n\r\n        // Note: Anything mapping to \"mine\" isn't obtaineable yet. Make that clear!\r\n        for(let o in object_to_biome_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(object_to_biome_dict[o] === \"mine\") {\r\n            object_to_biome_dict[o] = \"unobtainable\";\r\n          }\r\n        }\r\n\r\n        // Set location based on sources (for nodes and rocks).\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          for(let s in this.artifacts_dict[a][\"sources\"]) {\r\n            let source = this.artifacts_dict[a][\"sources\"][s];\r\n            if(object_to_biome_dict[source] !== undefined) {\r\n              this.artifacts_dict[a][\"location\"] = object_to_biome_dict[source];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Anything still without a source is unobtainable.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[a][\"sources\"] === undefined) {\r\n            this.artifacts_dict[a][\"sources\"] = ['none'];\r\n          }\r\n        }\r\n\r\n        // Anything still without a location is unobtainable.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[a][\"location\"] === undefined) {\r\n            this.artifacts_dict[a][\"location\"] = \"unobtainable\";\r\n          }\r\n        }\r\n\r\n        // Convert the artifacts dict to an array for the table.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          this.artifacts_dict[a][\"sources\"] = this.artifacts_dict[a][\"sources\"].join(\", \");\r\n          this.artifacts.push(this.artifacts_dict[a]);\r\n        }\r\n\r\n\r\n        // PARSE BUGS\r\n        this.bugs = [];\r\n        this.bugs_dict = {};\r\n\r\n        // Extract data from bugs dictionary\r\n        for(let b in data_bugs) {\r\n          await this.loadingPauseCheck();\r\n          if(b !== \"default\") {\r\n            this.bugs_dict[b] = {\r\n              \"key\": b, // string\r\n              \"type\": data_bugs[b][\"type\"], // string\r\n              \"seasons\": data_bugs[b][\"seasons\"], // array[string]\r\n              \"hours\": data_bugs[b][\"hours\"], // array[int]\r\n              \"weather\": data_bugs[b][\"weather\"], // array[string]\r\n              \"liked_object_categories\": data_bugs[b][\"liked_object_categories\"], // array[string]\r\n              \"rarity\": data_bugs[b][\"rarity\"], // string\r\n              \"spawn\": data_bugs[b][\"spawn\"], // array[string]\r\n              \"locations\": data_bugs[b][\"locations\"], // array[string]\r\n              \"attraction\": data_bugs[b][\"attraction\"], // string\r\n              \"has_light\": data_bugs[b][\"has_light\"], // boolean\r\n              \"dungeon_biome\": data_bugs[b][\"dungeon_biome\"], // string\r\n            };\r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/bugs dictionary.\r\n        for(let b in items_other_bugs) {\r\n          await this.loadingPauseCheck();\r\n          if(this.bugs_dict[b] === undefined) {\r\n            this.bugs_dict[b] = {\r\n              \"name\": this.localizations_eng[items_other_bugs[b][\"name\"]],\r\n              \"tags\": items_other_bugs[b][\"tags\"],\r\n              \"value\": items_other_bugs[b][\"value\"][\"bin\"]\r\n            }\r\n            // Cross-reference fish dictionary for more data\r\n            if(data_fish[b] !== undefined) {\r\n              this.bugs_dict[b][\"seasons\"] = data_fish[b][\"seasons\"];\r\n              this.bugs_dict[b][\"rarity\"] = data_fish[b][\"rarity\"];\r\n              this.bugs_dict[b][\"liked_object_categories\"] = data_fish[b][\"retrieval\"];\r\n            }\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"name\"] = this.localizations_eng[items_other_bugs[b][\"name\"]];\r\n            this.bugs_dict[b][\"tags\"] = items_other_bugs[b][\"tags\"];\r\n            this.bugs_dict[b][\"value\"] = items_other_bugs[b][\"value\"][\"bin\"];\r\n          }\r\n        }\r\n\r\n        // Extract data from items/mines\r\n        for(let l in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let x in items_mines[l]) {\r\n            if(this.bugs_dict[x] !== undefined) {\r\n              this.bugs_dict[x][\"name\"] = this.localizations_eng[items_mines[l][x][\"name\"]];\r\n              this.bugs_dict[x][\"value\"] = items_mines[l][x][\"value\"][\"bin\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Convert the bugs dict to an array for the table.\r\n        for(let b in this.bugs_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.bugs_dict[b][\"locations\"] === undefined) {\r\n            this.bugs_dict[b][\"locations\"] = \"overworld\";\r\n          }\r\n          if(this.bugs_dict[b][\"seasons\"] !== undefined && Array.isArray(this.bugs_dict[b][\"seasons\"])) {\r\n            this.bugs_dict[b][\"seasons\"] = this.bugs_dict[b][\"seasons\"].join(\", \");\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"seasons\"] = \"spring, summer, fall, winter\";\r\n          }\r\n          if(this.bugs_dict[b][\"hours\"] !== undefined && Array.isArray(this.bugs_dict[b][\"hours\"])) {\r\n            this.bugs_dict[b][\"hours\"] = this.parse_hours_range(this.bugs_dict[b][\"hours\"]);\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"hours\"] = \"6:00AM to 2:00AM\";\r\n          }\r\n          if(this.bugs_dict[b][\"weather\"] !== undefined && Array.isArray(this.bugs_dict[b][\"weather\"])) {\r\n            this.bugs_dict[b][\"weather\"] = this.bugs_dict[b][\"weather\"].join(\", \");\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"weather\"] = \"calm, special, inclement, heavy_inclement\";\r\n          }\r\n          if(this.bugs_dict[b][\"liked_object_categories\"] !== undefined && Array.isArray(this.bugs_dict[b][\"liked_object_categories\"])) {\r\n            this.bugs_dict[b][\"liked_object_categories\"] = this.bugs_dict[b][\"liked_object_categories\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"spawn\"] !== undefined && Array.isArray(this.bugs_dict[b][\"spawn\"])) {\r\n            this.bugs_dict[b][\"spawn\"] = this.bugs_dict[b][\"spawn\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"locations\"] !== undefined && Array.isArray(this.bugs_dict[b][\"locations\"])) {\r\n            this.bugs_dict[b][\"locations\"] = this.bugs_dict[b][\"locations\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"dungeon_biome\"] !== undefined) {\r\n            if(this.bugs_dict[b][\"dungeon_biome\"] == \"upper\") {\r\n              this.bugs_dict[b][\"locations\"] = \"upper_mines\";\r\n            }\r\n            else {\r\n              this.bugs_dict[b][\"locations\"] = this.bugs_dict[b][\"dungeon_biome\"];\r\n            }\r\n            \r\n          }\r\n          this.bugs.push(this.bugs_dict[b]);\r\n        }\r\n\r\n        // COOKED DISHES\r\n        this.cooking = [];\r\n        this.cooking_dict = {};\r\n\r\n        // Extract data from the items/other/cooked_dishes dict.\r\n        for(let c in items_other_cooked_dishes) {\r\n          await this.loadingPauseCheck();\r\n          this.cooking_dict[c] = {\r\n            \"key\": c,\r\n            \"name\": this.localizations_eng[items_other_cooked_dishes[c][\"name\"]],\r\n            \"stars\": items_other_cooked_dishes[c][\"stars\"],\r\n            \"crafting_level_requirement\": items_other_cooked_dishes[c][\"crafting_level_requirement\"],\r\n            \"kitchen_tier_requirement\": items_other_cooked_dishes[c][\"kitchen_tier_requirement\"],\r\n            \"recipe\": items_other_cooked_dishes[c][\"recipe\"]\r\n            // NOTE: The value data here is the price of the actual item, NOT the recipe.\r\n          }\r\n\r\n          if(items_other_cooked_dishes[c][\"recipe_is_default\"] !== undefined && items_other_cooked_dishes[c][\"recipe_is_default\"] === true) { // You start with this recipe.\r\n            this.cooking_dict[c][\"obtained_by\"] = \"default\";\r\n            this.cooking_dict[c][\"obtained_from\"] = \"game start\";\r\n          }\r\n          else {\r\n            // Extract recipe prices from misc/cooking_recipe_star_prices\r\n            if(this.cooking_dict[c][\"stars\"] !== undefined) { // If the cooking dish has no stars it can't be purchased.\r\n              this.cooking_dict[c][\"recipe_price\"] = data_misc[\"cooking_recipe_star_prices\"][this.cooking_dict[c][\"stars\"]-1];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe purchase location from stores dict.\r\n        for(let s in data_stores) {\r\n          await this.loadingPauseCheck();\r\n          let store_name = this.localizations_eng[data_stores[s][\"name\"]];\r\n          for(let c in data_stores[s][\"categories\"]) {\r\n            // Constant Stock (so far only Terithia's shop sells constant recipes)\r\n            if(data_stores[s][\"categories\"][c][\"constant_stock\"] !== undefined) {\r\n              for(let i in data_stores[s][\"categories\"][c][\"constant_stock\"]) {\r\n                let stock_item = data_stores[s][\"categories\"][c][\"constant_stock\"][i];\r\n                if(typeof stock_item === 'object' && stock_item[\"recipe_scroll\"] !== undefined) {\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"constant_stock\"][i][\"recipe_scroll\"]\r\n                  if(this.cooking_dict[recipe_name] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            // Random Stock (inn and darcey)\r\n            if(data_stores[s][\"categories\"][c][\"random_stock\"] !== undefined) {\r\n              for(let i in data_stores[s][\"categories\"][c][\"random_stock\"]) {\r\n                let stock_item = data_stores[s][\"categories\"][c][\"random_stock\"][i];\r\n                if(typeof stock_item === 'object' && stock_item[\"item\"] !== undefined && stock_item[\"include_recipe\"] === true) { // darcy's shop\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"random_stock\"][i][\"item\"];\r\n                  if(this.cooking_dict[recipe_name] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                }\r\n                else if(typeof stock_item === 'object' && stock_item[\"recipe_scroll\"] !== undefined) { // inn\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"random_stock\"][i][\"recipe_scroll\"];\r\n                  if(stock_item[\"building_fixed\"] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                  else {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name + \" (upgraded)\";\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from fishing/chest_tables dict.\r\n        for(let c in data_fishing[\"chest_tables\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_fishing[\"chest_tables\"][c][\"items\"]) {\r\n            if(data_fishing[\"chest_tables\"][c][\"items\"][i][\"kind\"] === \"recipe\") {\r\n              let recipe_name = data_fishing[\"chest_tables\"][c][\"items\"][i][\"value\"];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"fishing\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = c + \" treasure box\";\r\n                delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Extract recipe locations from wishing_well dict.\r\n        for(let rarity in data_wishing_well) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_wishing_well[rarity][\"small_roll\"]) {\r\n            if(data_wishing_well[rarity][\"small_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_wishing_well[rarity][\"small_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"wishing_well\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n          for(let i in data_wishing_well[rarity][\"large_roll\"]) {\r\n            if(data_wishing_well[rarity][\"large_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_wishing_well[rarity][\"large_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"wishing_well\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from chicken_statue dict.\r\n        // TODO: Refactor this and wishing_well common code to a method\r\n        for(let rarity in data_chicken_statue) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_chicken_statue[rarity][\"small_roll\"]) {\r\n            if(data_chicken_statue[rarity][\"small_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_chicken_statue[rarity][\"small_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"chicken_statue\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n          for(let i in data_chicken_statue[rarity][\"large_roll\"]) {\r\n            if(data_chicken_statue[rarity][\"large_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_chicken_statue[rarity][\"large_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"chicken_statue\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from letters. \r\n        for(let l in data_letters) {\r\n          await this.loadingPauseCheck();\r\n          if(data_letters[l][\"items\"] !== undefined) {\r\n            for(let i in data_letters[l][\"items\"]) {\r\n              if(data_letters[l][\"items\"][i][\"recipe_scroll\"] !== undefined) {\r\n                let recipe_name = data_letters[l][\"items\"][i][\"recipe_scroll\"];\r\n                if(data_letters[l][\"ari_has_sold\"] !== undefined) {\r\n                  let localization_string = \"items/other/crops_and_forage/\" + data_letters[l][\"ari_has_sold\"] + \"/name\";\r\n                  let item_name = this.localizations_eng[localization_string];\r\n                  this.cooking_dict[recipe_name][\"obtained_by\"] = \"shipping (\" + item_name + \")\";\r\n                  this.cooking_dict[recipe_name][\"obtained_from\"] = \"letter/mail\";\r\n                  delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n                }\r\n                if(data_letters[l][\"ari_has_donated\"] !== undefined) {\r\n                  let localization_string_regex = \"^[a-z_/]+(\" + data_letters[l][\"ari_has_donated\"] + \")[/](name)$\";\r\n                  let item_name = this.find_localization_string(localization_string_regex)\r\n                  if(item_name !== false) {\r\n                    item_name = this.localizations_eng[item_name];\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"museum_donation (\" + item_name + \")\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = \"letter/mail\";\r\n                    delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from quests/story_quests dictionary.\r\n        for(let q in data_quests[\"story_quests\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_quests[\"story_quests\"][q][\"rewards\"]) {\r\n            if(data_quests[\"story_quests\"][q][\"rewards\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_quests[\"story_quests\"][q][\"rewards\"][i][\"recipe_scroll\"];\r\n              let quest_name = this.localizations_eng[data_quests[\"story_quests\"][q][\"name\"]];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"quest\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = quest_name;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from quests/fetch_quests dictionary.\r\n        for(let q in data_quests[\"fetch_quests\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_quests[\"fetch_quests\"][q][\"rewards\"]) {\r\n            if(data_quests[\"fetch_quests\"][q][\"rewards\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_quests[\"fetch_quests\"][q][\"rewards\"][i][\"recipe_scroll\"];\r\n              let quest_name = this.localizations_eng[data_quests[\"fetch_quests\"][q][\"name\"]];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"quest\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = quest_name;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from mines treasure chests\r\n        for(let b in data_dungeons[\"dungeons\"][\"biomes\"]) {\r\n          await this.loadingPauseCheck();\r\n          let biome_name = data_dungeons[\"dungeons\"][\"biomes\"][b][\"artifact_set\"];\r\n          if(biome_name === \"upper_mines_artifacts\") {\r\n            biome_name = \"upper_mines\";\r\n          }\r\n          for(let i in data_dungeons[\"dungeons\"][\"biomes\"][b][\"taste_maker\"]) {\r\n            let recipe_name = data_dungeons[\"dungeons\"][\"biomes\"][b][\"taste_maker\"][i];\r\n            if(this.cooking_dict[recipe_name] !== undefined) {\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"mines (treasure chest)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = biome_name;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Cleanup and build the list.\r\n        for(let x in this.cooking_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Remove the price for any recipe not marked purchaseable.\r\n          if(this.cooking_dict[x][\"obtained_by\"] === undefined || this.cooking_dict[x][\"obtained_by\"] !== \"purchase\") {\r\n            delete this.cooking_dict[x][\"recipe_price\"];\r\n          }\r\n\r\n          // Remove anything without a recipe.\r\n          if(this.cooking_dict[x][\"recipe\"] === undefined) {\r\n            console.log(\"Missing recipe for: \" + x);\r\n            delete this.cooking_dict[x];\r\n          }\r\n          else {\r\n            // Mark unobtainable recipes.\r\n            if(this.cooking_dict[x][\"obtained_by\"] === undefined) {\r\n              this.cooking_dict[x][\"obtained_by\"] = \"unobtainable\";\r\n              this.cooking_dict[x][\"obtained_from\"] = \"unobtainable\";\r\n            }\r\n            // Format the recipe string.\r\n            let recipe = \"\";\r\n            for(let i in this.cooking_dict[x][\"recipe\"]) {\r\n              if(this.cooking_dict[x][\"recipe\"][i][\"item\"] !== undefined) {\r\n                let localization_string_regex = \"^(items)[/](?!furniture)[a-z_/]+(\\\\b\" + this.cooking_dict[x][\"recipe\"][i][\"item\"] + \")[/](name)$\";\r\n                let item_name = this.find_localization_string(localization_string_regex)\r\n                if(item_name !== false) {\r\n                  item_name = this.localizations_eng[item_name];\r\n                }\r\n                else {\r\n                  item_name = this.cooking_dict[x][\"recipe\"][i][\"item\"];\r\n                }\r\n                recipe += item_name + \": \" + this.cooking_dict[x][\"recipe\"][i][\"count\"] + \"\\n\";\r\n              }\r\n              // Extract the time.\r\n              if(this.cooking_dict[x][\"recipe\"][i][\"hours\"] !== undefined || this.cooking_dict[x][\"recipe\"][i][\"minutes\"] !== undefined) {\r\n                this.cooking_dict[x][\"time\"] = \"Hours: \" + this.cooking_dict[x][\"recipe\"][i][\"hours\"] + \"\\nMinutes: \" + this.cooking_dict[x][\"recipe\"][i][\"minutes\"];\r\n              }\r\n            }\r\n            this.cooking_dict[x][\"recipe\"] = recipe;\r\n            this.cooking.push(this.cooking_dict[x]);\r\n          }\r\n        }\r\n\r\n        // PARSE HARVEST (GROWABLES)\r\n        this.crops = [];\r\n        this.crops_dict = {};\r\n        items_other_crops_and_forage;\r\n\r\n        // Extract data from object_prototypes/crop dictionary.\r\n        for(let c in object_prototypes[\"crop\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"crop\"][c][\"day_to_stage\"] !== undefined && c !== \"default\") {\r\n            this.crops_dict[c] = {\r\n              \"key\": c,\r\n              \"growth_time\": object_prototypes[\"crop\"][c][\"day_to_stage\"].length - 1\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"seasons\"] !== undefined) {\r\n              this.crops_dict[c][\"seasons\"] = object_prototypes[\"crop\"][c][\"seasons\"];\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"regrow_days\"] !== undefined) {\r\n              this.crops_dict[c][\"regrow_days\"] = object_prototypes[\"crop\"][c][\"regrow_days\"];\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"currency\"] !== undefined) {\r\n              this.crops_dict[c][\"currency\"] = object_prototypes[\"crop\"][c][\"currency\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/crops_and_forage dictionary.\r\n        for(let c in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(this.crops_dict[c] !== undefined) {\r\n            let name = items_other_crops_and_forage[c][\"name\"];\r\n            this.crops_dict[c][\"name\"] = this.localizations_eng[name];\r\n            this.crops_dict[c][\"restore\"] = items_other_crops_and_forage[c][\"restore\"];\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"bin\"] !== undefined) {\r\n              this.crops_dict[c][\"sell_price\"] = items_other_crops_and_forage[c][\"value\"][\"bin\"];\r\n            }\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n              this.crops_dict[c][\"purchase_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n            }          \r\n          }\r\n          else if(c === \"rice_stalk\") {\r\n            let name = items_other_crops_and_forage[c][\"name\"];\r\n            this.crops_dict[\"rice\"][\"name\"] = this.localizations_eng[name];\r\n            this.crops_dict[\"rice\"][\"restore\"] = items_other_crops_and_forage[c][\"restore\"];\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"bin\"] !== undefined) {\r\n              this.crops_dict[\"rice\"][\"sell_price\"] = items_other_crops_and_forage[c][\"value\"][\"bin\"];\r\n            }\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n              this.crops_dict[\"rice\"][\"purchase_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n            }    \r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/crops_and_forage dictionary (again).\r\n        for(let c in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(items_other_crops_and_forage[c][\"tags\"] !== undefined) {\r\n            if(items_other_crops_and_forage[c][\"tags\"].includes(\"seed\")) {\r\n              let crop_name = items_other_crops_and_forage[c][\"crop_object\"];\r\n              if(this.crops_dict[crop_name] !== undefined) {\r\n                this.crops_dict[crop_name][\"seed\"] = c;\r\n                this.crops_dict[crop_name][\"seed_name\"] = this.localizations_eng[items_other_crops_and_forage[c][\"name\"]];\r\n                if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n                  this.crops_dict[crop_name][\"seed_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Cleanup.\r\n        for(let c in this.crops_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Remove regrow duration from plantable forage\r\n          if(this.crops_dict[c][\"restore\"] !== undefined && typeof this.crops_dict[c][\"restore\"] === \"string\") {\r\n            if(this.crops_dict[c][\"restore\"].includes(\"forage\")) {\r\n              if(this.crops_dict[c][\"regrow_days\"] !== undefined) {\r\n                delete this.crops_dict[c][\"regrow_days\"];\r\n              }\r\n            }\r\n          }\r\n          if(this.crops_dict[c][\"seed_price\"] === undefined) {\r\n            this.crops_dict[c][\"seed_price\"] = \"unpurchasable\";\r\n          }\r\n          // Inedible\r\n          if(this.crops_dict[c][\"restore\"] === undefined) {\r\n            this.crops_dict[c][\"restore\"] = \"inedible\";\r\n          }\r\n          // Restoration lookup/conversion.\r\n          else if(this.crops_dict[c][\"restore\"] !== undefined) {\r\n            let restoration_name = this.crops_dict[c][\"restore\"];\r\n            if(data_restoration[\"vars\"][restoration_name] !== undefined) {\r\n              this.crops_dict[c][\"restore\"] = data_restoration[\"vars\"][restoration_name] + \" HP/STA\";\r\n            }\r\n          }\r\n          this.crops.push(this.crops_dict[c]);\r\n        }\r\n\r\n        // PARSE FORAGE\r\n        this.forage = [];\r\n        this.forage_dict = {};\r\n        // 1. Internal name, season, and rarity are specified in forageables dictionary.\r\n        for(let t in data_forageables[\"tables\"]) { // key (normal, beach)\r\n          await this.loadingPauseCheck();\r\n          let seasons = [\"spring\", \"summer\", \"fall\", \"winter\"];\r\n          for(let s in seasons) {\r\n            for(let r in data_forageables[\"tables\"][t][seasons[s]]) { // key (rarity)\r\n              for(let i in data_forageables[\"tables\"][t][seasons[s]][r]) { // array index\r\n                let name = data_forageables[\"tables\"][t][seasons[s]][r][i];\r\n                this.forage_dict[name] = {\r\n                \"key\": name,\r\n                \"rarity\": r,\r\n                \"seasons\": seasons[s]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 2. Additional data is specified in object_prototypes/bush dictionary.\r\n        for(let b in object_prototypes[\"bush\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(b !== \"default\" && b !== \"bush\") {\r\n            console.log(\"Bush: \" + b);\r\n            let name = object_prototypes[\"bush\"][b][\"harvest\"];\r\n            console.log(\"Name: \" + name);\r\n            this.forage_dict[name] = {\r\n              \"key\": name,\r\n              \"source\": b,\r\n              \"seasons\": object_prototypes[\"bush\"][b][\"seasons\"],\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. Even more data is specified in object_prototypes/tree dictionary.\r\n        for(let t in object_prototypes[\"tree\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"tree\"][t][\"fruit_data\"] !== undefined) {\r\n            console.log(\"Tree: \" + t);\r\n            let name = object_prototypes[\"tree\"][t][\"fruit_data\"][\"harvest\"];\r\n            console.log(\"Name: \" + name);\r\n            this.forage_dict[name] = {\r\n              \"key\": name,\r\n              \"source\": t,\r\n              \"seasons\": object_prototypes[\"tree\"][t][\"fruit_data\"][\"seasons\"]\r\n            }\r\n          }\r\n        }\r\n\r\n        // 4. Actual name and Value (bin/store) are specified in items/other/crops_and_forage dictionary.\r\n        for(let f in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[f] !== undefined) {\r\n            this.forage_dict[f][\"name\"] = this.localizations_eng[items_other_crops_and_forage[f][\"name\"]];\r\n            if(items_other_crops_and_forage[f][\"restore\"] !== undefined) {\r\n              this.forage_dict[f][\"restore\"] = items_other_crops_and_forage[f][\"restore\"];\r\n            }\r\n            if(items_other_crops_and_forage[f][\"value\"] !== undefined) {\r\n              if(items_other_crops_and_forage[f][\"value\"][\"bin\"] !== undefined) {\r\n                this.forage_dict[f][\"sell_price\"] = items_other_crops_and_forage[f][\"value\"][\"bin\"]\r\n              }\r\n              if(items_other_crops_and_forage[f][\"value\"][\"store\"] !== undefined) {\r\n                this.forage_dict[f][\"purchase_price\"] = items_other_crops_and_forage[f][\"value\"][\"store\"]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 5. Extract data from items/fish/misc dictionary.\r\n        for(let f in items_fish[\"misc\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[f] !== undefined) {\r\n            this.forage_dict[f][\"name\"] = this.localizations_eng[items_fish[\"misc\"][f][\"name\"]];\r\n            if(items_fish[\"misc\"][f][\"value\"] !== undefined) {\r\n              if(items_fish[\"misc\"][f][\"value\"][\"bin\"] !== undefined) {\r\n                this.forage_dict[f][\"sell_price\"] = items_fish[\"misc\"][f][\"value\"][\"bin\"];\r\n              }\r\n              if(items_fish[\"misc\"][f][\"value\"][\"store\"] !== undefined) {\r\n                this.forage_dict[f][\"purchase_price\"] = items_fish[\"misc\"][f][\"value\"][\"store\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 6. Extract data from items/mines dictionary.\r\n        for(let m in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let item in items_mines[m]) {\r\n            if(this.forage_dict[item] !== undefined) {\r\n              this.forage_dict[item][\"name\"] = this.localizations_eng[items_mines[m][item][\"name\"]];\r\n              this.forage_dict[item][\"restore\"] = items_mines[m][item][\"restore\"];\r\n              if(items_mines[m][item][\"value\"] !== undefined) {\r\n                if(items_mines[m][item][\"value\"][\"bin\"] !== undefined) {\r\n                  this.forage_dict[item][\"sell_price\"] = items_mines[m][item][\"value\"][\"bin\"];\r\n                }\r\n                if(items_mines[m][item][\"value\"][\"store\"] !== undefined) {\r\n                  this.forage_dict[item][\"purchase_price\"] = items_mines[m][item][\"value\"][\"store\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 7. Additional data is specified in object_prototypes/crop dictionary.\r\n        for(let c in object_prototypes[\"crop\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[c] !== undefined) {\r\n            this.forage_dict[c][\"seasons\"] = object_prototypes[\"crop\"][c][\"seasons\"]\r\n          }\r\n        }\r\n\r\n        // 8. Cleanup\r\n        for(let f in this.forage_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Seasons\r\n          if(typeof this.forage_dict[f][\"seasons\"] === 'object') {\r\n            this.forage_dict[f][\"seasons\"] = this.forage_dict[f][\"seasons\"].join(\", \");\r\n          }\r\n          // Inedible\r\n          if(this.forage_dict[f][\"restore\"] === undefined) {\r\n            this.forage_dict[f][\"restore\"] = \"inedible\";\r\n            console.log(this.forage_dict[f]);\r\n          }\r\n          // Restoration lookup/conversion.\r\n          else if(this.forage_dict[f][\"restore\"] !== undefined) {\r\n            let restoration_name = this.forage_dict[f][\"restore\"];\r\n            if(data_restoration[\"vars\"][restoration_name] !== undefined) {\r\n              this.forage_dict[f][\"restore\"] = data_restoration[\"vars\"][restoration_name] + \" HP/STA\";\r\n            }\r\n            else {\r\n              this.forage_dict[f][\"restore\"] = this.forage_dict[f][\"restore\"] + \" HP/STA\";\r\n            }\r\n          }\r\n          this.forage.push(this.forage_dict[f]);\r\n        }\r\n\r\n        \r\n        // Done loading data.\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.load_data(this.version_loaded);\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=044e0402\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport Vuetify from 'vuetify/lib/framework';\r\n\r\nVue.use(Vuetify);\r\n\r\nexport default new Vuetify({\r\n    theme: { dark: true },\r\n});\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  vuetify,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblah\"] = self[\"webpackChunkblah\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3379); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["scopedSlots","_vm","fn","attrs","_c","$event","on","load_data","staticClass","staticStyle","loading","model","callback","selected_tab","tabs","$$v","key","tab","value","artifact_search","expression","bug_search","cooking_search","fish_search","forage_search","crops_search","staticRenderFns","render","name","data","lastLoadingPause","Date","now","version_loaded","artifact_headers","text","artifacts","bug_headers","bugs","cooking_headers","cooking","crops_headers","crops","fish_headers","fish","forage_headers","forage","methods","pauseLoading","Promise","r","setTimeout","loadingPauseCheck","clear_data","artifacts_dict","bugs_dict","cooking_dict","crops_dict","forage_dict","version","console","log","parse_localization","require","parse_fiddle","parse_hours_range","hours_array","start_time","end_time","json","localizations_eng","find_localization_string","pattern","l","match","data_artifacts","data_bugs","data_dungeons","data_fish","data_fishing","items_other_artifacts","items_other_bugs","items_other_crops_and_forage","items_fish","items_mines","items_other_cooked_dishes","data_letters","data_misc","data_museum_wings","object_prototypes","data_quests","data_stores","data_wishing_well","data_chicken_statue","data_restoration","data_forageables","mines_location","m","undefined","includes","push","fish_location","f","i","length","join","Array","isArray","artifact_location_lookup_dict","location","artifact","node","drop","set","item","item_name","object_to_biome_dict","biome","biome_name","ore","o","a","s","source","b","x","c","store_name","stock_item","recipe_name","rarity","localization_string","localization_string_regex","q","quest_name","recipe","crop_name","restoration_name","t","seasons","mounted","component","Vue","use","Vuetify","theme","dark","config","productionTip","vuetify","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}