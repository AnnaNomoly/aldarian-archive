{"version":3,"file":"js/app.9c9cbfda.js","mappings":"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","sources":["webpack://blah/./src/App.vue","webpack://blah/src/App.vue","webpack://blah/./src/App.vue?b495","webpack://blah/./src/App.vue?0e40","webpack://blah/./src/plugins/vuetify.js","webpack://blah/./src/main.js","webpack://blah/webpack/bootstrap","webpack://blah/webpack/runtime/chunk loaded","webpack://blah/webpack/runtime/compat get default export","webpack://blah/webpack/runtime/define property getters","webpack://blah/webpack/runtime/global","webpack://blah/webpack/runtime/hasOwnProperty shorthand","webpack://blah/webpack/runtime/make namespace object","webpack://blah/webpack/runtime/jsonp chunk loading","webpack://blah/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{staticStyle:{\"background-image\":\"url('https://raw.githubusercontent.com/AnnaNomoly/aldarian-archive/refs/heads/assets/public/bg_dark.png')\",\"height\":\"100%\",\"background-position\":\"center\",\"background-repeat\":\"no-repeat\",\"background-size\":\"cover\"}},[_c('v-app-bar',{attrs:{\"collapse\":true,\"dense\":\"\",\"app\":\"\",\"color\":\"dark-grey\",\"dark\":\"\"}},[_c('span',[_vm._v(_vm._s(_vm.version_loaded))]),_c('v-menu',{attrs:{\"bottom\":\"\",\"right\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({attrs:{\"icon\":\"\",\"color\":\"light-green\"}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-dots-vertical\")])],1)]}}])},[_c('v-list',_vm._l((_vm.versions),function(version){return _c('v-list-item',{key:version,on:{\"click\":function($event){return _vm.load_data(version)}}},[_c('v-list-item-title',[_vm._v(_vm._s(version))])],1)}),1)],1)],1),_c('v-main',[_c('v-container',[_c('div',{staticClass:\"d-flex justify-space-around\"},[_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'title_logo.png',\"max-height\":\"150\",\"max-width\":\"250\"}})],1),_c('br'),_c('v-card',{staticStyle:{\"opacity\":\"0.90\"}},[(_vm.isLoading())?_c('v-progress-linear',{attrs:{\"indeterminate\":\"\",\"color\":\"yellow darken-2\"}}):_vm._e(),_c('v-tabs',{attrs:{\"background-color\":\"blue-grey darken-4\",\"center-active\":\"\",\"dark\":\"\"},model:{value:(_vm.selected_tab),callback:function ($$v) {_vm.selected_tab=$$v},expression:\"selected_tab\"}},_vm._l((_vm.tabs),function(tab){return _c('v-tab',{key:tab},[_vm._v(\" \"+_vm._s(tab)+\" \")])}),1),_c('v-tabs-items',{attrs:{\"theme--dark\":\"\"},model:{value:(_vm.selected_tab),callback:function ($$v) {_vm.selected_tab=$$v},expression:\"selected_tab\"}},_vm._l((_vm.tabs),function(tab){return _c('v-tab-item',{key:tab},[_c('div',{staticStyle:{\"overflow-y\":\"auto\"}},[(tab == 'Artifacts')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-data-table',{attrs:{\"dense\":\"\",\"hide-default-footer\":\"\",\"headers\":_vm.artifact_headers,\"items\":_vm.artifacts,\"search\":_vm.artifact_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}},scopedSlots:_vm._u([{key:\"top\",fn:function({ pagination, options, updateOptions }){return [_c('v-container',[_c('v-row',{staticClass:\"no-gutters\"},[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.artifact_search),callback:function ($$v) {_vm.artifact_search=$$v},expression:\"artifact_search\"}}),_c('v-data-footer',{staticStyle:{\"border-width\":\"0\"},attrs:{\"pagination\":pagination,\"options\":options,\"items-per-page-options\":[10, 15, 20, 25, -1]},on:{\"update:options\":updateOptions}})],1)],1)]}}],null,true)})],1):_vm._e(),(tab == 'Bugs')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-data-table',{attrs:{\"dense\":\"\",\"hide-default-footer\":\"\",\"headers\":_vm.bug_headers,\"items\":_vm.bugs,\"search\":_vm.bug_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}},scopedSlots:_vm._u([{key:\"top\",fn:function({ pagination, options, updateOptions }){return [_c('v-container',[_c('v-row',{staticClass:\"no-gutters\"},[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.bug_search),callback:function ($$v) {_vm.bug_search=$$v},expression:\"bug_search\"}}),_c('v-data-footer',{staticStyle:{\"border-width\":\"0\"},attrs:{\"pagination\":pagination,\"options\":options,\"items-per-page-options\":[10, 15, 20, 25, -1]},on:{\"update:options\":updateOptions}})],1)],1)]}}],null,true)})],1):_vm._e(),(tab == 'Cooking')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-data-table',{staticClass:\"text-pre-wrap\",attrs:{\"dense\":\"\",\"hide-default-footer\":\"\",\"headers\":_vm.cooking_headers,\"items\":_vm.cooking,\"search\":_vm.cooking_search,\"sort-by\":['name'],\"items-per-page\":10,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}},scopedSlots:_vm._u([{key:\"top\",fn:function({ pagination, options, updateOptions }){return [_c('v-container',[_c('v-row',{staticClass:\"no-gutters\"},[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.cooking_search),callback:function ($$v) {_vm.cooking_search=$$v},expression:\"cooking_search\"}}),_c('v-data-footer',{staticStyle:{\"border-width\":\"0\"},attrs:{\"pagination\":pagination,\"options\":options,\"items-per-page-options\":[10, 15, 20, 25, -1]},on:{\"update:options\":updateOptions}})],1)],1)]}}],null,true)})],1):_vm._e(),(tab == 'Fish')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-data-table',{attrs:{\"dense\":\"\",\"hide-default-footer\":\"\",\"headers\":_vm.fish_headers,\"items\":_vm.fish,\"search\":_vm.fish_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}},scopedSlots:_vm._u([{key:\"top\",fn:function({ pagination, options, updateOptions }){return [_c('v-container',[_c('v-row',{staticClass:\"no-gutters\"},[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.fish_search),callback:function ($$v) {_vm.fish_search=$$v},expression:\"fish_search\"}}),_c('v-data-footer',{staticStyle:{\"border-width\":\"0\"},attrs:{\"pagination\":pagination,\"options\":options,\"items-per-page-options\":[10, 15, 20, 25, -1]},on:{\"update:options\":updateOptions}})],1)],1)]}}],null,true)})],1):_vm._e(),(tab == 'Forage')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-data-table',{attrs:{\"dense\":\"\",\"hide-default-footer\":\"\",\"headers\":_vm.forage_headers,\"items\":_vm.forage,\"search\":_vm.forage_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}},scopedSlots:_vm._u([{key:\"top\",fn:function({ pagination, options, updateOptions }){return [_c('v-container',[_c('v-row',{staticClass:\"no-gutters\"},[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.forage_search),callback:function ($$v) {_vm.forage_search=$$v},expression:\"forage_search\"}}),_c('v-data-footer',{staticStyle:{\"border-width\":\"0\"},attrs:{\"pagination\":pagination,\"options\":options,\"items-per-page-options\":[10, 15, 20, 25, -1]},on:{\"update:options\":updateOptions}})],1)],1)]}}],null,true)})],1):_vm._e(),(tab == 'Harvest')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-data-table',{staticClass:\"text-pre-wrap\",attrs:{\"dense\":\"\",\"hide-default-footer\":\"\",\"headers\":_vm.crops_headers,\"items\":_vm.crops,\"search\":_vm.crops_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}},scopedSlots:_vm._u([{key:\"top\",fn:function({ pagination, options, updateOptions }){return [_c('v-container',[_c('v-row',{staticClass:\"no-gutters\"},[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.crops_search),callback:function ($$v) {_vm.crops_search=$$v},expression:\"crops_search\"}}),_c('v-data-footer',{staticStyle:{\"border-width\":\"0\"},attrs:{\"pagination\":pagination,\"options\":options,\"items-per-page-options\":[10, 15, 20, 25, -1]},on:{\"update:options\":updateOptions}})],1)],1)]}}],null,true)})],1):_vm._e(),(tab == 'Schedules')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-expansion-panels',{model:{value:(_vm.character_panel),callback:function ($$v) {_vm.character_panel=$$v},expression:\"character_panel\"}},_vm._l((_vm.characters),function(character_name){return _c('v-expansion-panel',{key:character_name},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/npc/spr_ui_generic_icon_npc_' + character_name.toLowerCase() + '_0.png',\"max-height\":\"20\",\"max-width\":\"24\"}}),_vm._v(\"   \"+_vm._s(character_name)+\" \")],1),_c('v-expansion-panel-content',[(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-expansion-panels',{model:{value:(_vm.season_panel),callback:function ($$v) {_vm.season_panel=$$v},expression:\"season_panel\"}},_vm._l((_vm.seasons),function(season){return _c('v-expansion-panel',{key:season},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[(season == 'Rainy')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/weather/spr_ui_hud_info_backplate_weather_icon_rainy_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Spring')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_spring_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Summer')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_summer_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Fall')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_autumn_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Winter')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_winter_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),_vm._v(\"   \"+_vm._s(season)+\" \")],1),_c('v-expansion-panel-content',[(season == 'Rainy')?_c('div',_vm._l((_vm.schedules[character_name.toLowerCase()][season.toLowerCase()]),function(x){return _c('div',{key:x},[(x['extra_conditions'] !== '')?_c('span',[_vm._v(\" Extra Conditions: \"),_c('br'),_c('span',{staticClass:\"text-pre-wrap\"},[_vm._v(_vm._s(x[\"extra_conditions\"]))])]):_vm._e(),(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.schedule_headers,\"items\":x['itinerary'],\"search\":_vm.schedule_search,\"sort-by\":['time'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}}):_vm._e()],1)}),0):_c('div',[(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-expansion-panels',{model:{value:(_vm.day_panel),callback:function ($$v) {_vm.day_panel=$$v},expression:\"day_panel\"}},_vm._l((_vm.days),function(day){return _c('v-expansion-panel',{key:day},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[_vm._v(\" \"+_vm._s(day)+\" \")]),_c('v-expansion-panel-content',_vm._l((_vm.schedules[character_name.toLowerCase()][season.toLowerCase()][day.toLocaleLowerCase()]),function(y){return _c('div',{key:y},[(y['extra_conditions'] !== '')?_c('span',[_vm._v(\" Extra Conditions: \"),_c('br'),_c('span',{staticClass:\"text-pre-wrap\"},[_vm._v(_vm._s(y[\"extra_conditions\"]))])]):_vm._e(),(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.schedule_headers,\"items\":y['itinerary'],\"search\":_vm.schedule_search,\"sort-by\":['time'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}}):_vm._e()],1)}),0)],1)}),1):_vm._e()],1)])],1)}),1):_vm._e()],1)],1)}),1):_vm._e()],1):_vm._e()],1)])}),1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-app style=\r\n      \"background-image: url('https://raw.githubusercontent.com/AnnaNomoly/aldarian-archive/refs/heads/assets/public/bg_dark.png');\r\n      height: 100%;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\"\r\n    >\r\n    <v-app-bar\r\n      :collapse=true\r\n      dense\r\n      app\r\n      color=\"dark-grey\"\r\n      dark\r\n    >\r\n      <span>{{version_loaded}}</span>\r\n      <v-menu\r\n        bottom\r\n        right\r\n      >\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n          <v-btn\r\n            icon\r\n            color=\"light-green\"\r\n            v-bind=\"attrs\"\r\n            v-on=\"on\"\r\n          >\r\n            <v-icon>mdi-dots-vertical</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <v-list>\r\n          <v-list-item v-for=\"version in versions\" :key=\"version\" @click=\"load_data(version)\">\r\n            <v-list-item-title>{{ version }}</v-list-item-title>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-menu>\r\n\r\n    </v-app-bar>\r\n\r\n    <v-main>\r\n      <v-container>\r\n        <div class=\"d-flex justify-space-around\">\r\n          <v-img :src=\"assets_base_url + 'title_logo.png'\" max-height=\"150\" max-width=\"250\"></v-img>\r\n          <!--<h1 class=\"text-h2 font-weight-bold\">Aldarian Archive</h1>-->\r\n        </div>\r\n        <br />\r\n\r\n        <v-card style=\"opacity: 0.90\" >\r\n          <v-progress-linear v-if=\"isLoading()\" indeterminate color=\"yellow darken-2\"></v-progress-linear>\r\n          <v-tabs v-model=\"selected_tab\" background-color=\"blue-grey darken-4\" center-active dark>\r\n            <v-tab v-for=\"tab in tabs\" :key=\"tab\">\r\n              {{ tab }}\r\n            </v-tab>\r\n          </v-tabs>\r\n\r\n          <v-tabs-items theme--dark v-model=\"selected_tab\">\r\n            <v-tab-item v-for=\"tab in tabs\" :key=\"tab\">\r\n              <div style=\"overflow-y: auto;\">\r\n                <!-- Artifacts -->\r\n                <v-card v-if=\"tab == 'Artifacts'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-data-table dense hide-default-footer :headers=\"artifact_headers\" :items=\"artifacts\" :search=\"artifact_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\">\r\n                    <template v-slot:top=\"{ pagination, options, updateOptions }\">\r\n                      <v-container>\r\n                        <v-row class=\"no-gutters\">\r\n                          <v-text-field v-model=\"artifact_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                          <v-data-footer :pagination=\"pagination\" :options=\"options\" @update:options=\"updateOptions\" :items-per-page-options=\"[10, 15, 20, 25, -1]\" style=\"border-width: 0\"/>\r\n                        </v-row>\r\n                      </v-container>\r\n                    </template>\r\n                  </v-data-table>\r\n                </v-card>\r\n                <!-- Bugs -->\r\n                <v-card v-if=\"tab == 'Bugs'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-data-table dense hide-default-footer :headers=\"bug_headers\" :items=\"bugs\" :search=\"bug_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\">\r\n                    <template v-slot:top=\"{ pagination, options, updateOptions }\">\r\n                      <v-container>\r\n                        <v-row class=\"no-gutters\">\r\n                          <v-text-field v-model=\"bug_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                          <v-data-footer :pagination=\"pagination\" :options=\"options\" @update:options=\"updateOptions\" :items-per-page-options=\"[10, 15, 20, 25, -1]\" style=\"border-width: 0\"/>\r\n                        </v-row>\r\n                      </v-container>\r\n                    </template>\r\n                  </v-data-table>\r\n                </v-card>\r\n                <!-- Cooking -->\r\n                <v-card v-if=\"tab == 'Cooking'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-data-table dense hide-default-footer class=\"text-pre-wrap\" :headers=\"cooking_headers\" :items=\"cooking\" :search=\"cooking_search\" :sort-by=\"['name']\" :items-per-page=\"10\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\">\r\n                    <template v-slot:top=\"{ pagination, options, updateOptions }\">\r\n                      <v-container>\r\n                        <v-row class=\"no-gutters\">\r\n                          <v-text-field v-model=\"cooking_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                          <v-data-footer :pagination=\"pagination\" :options=\"options\" @update:options=\"updateOptions\" :items-per-page-options=\"[10, 15, 20, 25, -1]\" style=\"border-width: 0\"/>\r\n                        </v-row>\r\n                      </v-container>\r\n                    </template>\r\n                  </v-data-table>\r\n                </v-card>\r\n                <!-- Fish -->\r\n                <v-card v-if=\"tab == 'Fish'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-data-table dense hide-default-footer :headers=\"fish_headers\" :items=\"fish\" :search=\"fish_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\">\r\n                    <template v-slot:top=\"{ pagination, options, updateOptions }\">\r\n                      <v-container>\r\n                        <v-row class=\"no-gutters\">\r\n                          <v-text-field v-model=\"fish_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                          <v-data-footer :pagination=\"pagination\" :options=\"options\" @update:options=\"updateOptions\" :items-per-page-options=\"[10, 15, 20, 25, -1]\" style=\"border-width: 0\"/>\r\n                        </v-row>\r\n                      </v-container>\r\n                    </template>\r\n                  </v-data-table>\r\n                </v-card>\r\n                <!-- Forage -->\r\n                <v-card v-if=\"tab == 'Forage'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-data-table dense hide-default-footer :headers=\"forage_headers\" :items=\"forage\" :search=\"forage_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\">\r\n                    <template v-slot:top=\"{ pagination, options, updateOptions }\">\r\n                      <v-container>\r\n                        <v-row class=\"no-gutters\">\r\n                          <v-text-field v-model=\"forage_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                          <v-data-footer :pagination=\"pagination\" :options=\"options\" @update:options=\"updateOptions\" :items-per-page-options=\"[10, 15, 20, 25, -1]\" style=\"border-width: 0\"/>\r\n                        </v-row>\r\n                      </v-container>\r\n                    </template>\r\n                  </v-data-table>\r\n                </v-card>\r\n                <!-- Harvest -->\r\n                <v-card v-if=\"tab == 'Harvest'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-data-table dense hide-default-footer class=\"text-pre-wrap\" :headers=\"crops_headers\" :items=\"crops\" :search=\"crops_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\">\r\n                    <template v-slot:top=\"{ pagination, options, updateOptions }\">\r\n                      <v-container>\r\n                        <v-row class=\"no-gutters\">\r\n                          <v-text-field v-model=\"crops_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                          <v-data-footer :pagination=\"pagination\" :options=\"options\" @update:options=\"updateOptions\" :items-per-page-options=\"[10, 15, 20, 25, -1]\" style=\"border-width: 0\"/>\r\n                        </v-row>\r\n                      </v-container>\r\n                    </template>\r\n                  </v-data-table>\r\n                </v-card>\r\n                <!-- Schedules -->\r\n                <v-card v-if=\"tab == 'Schedules'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <!-- Characters -->\r\n                  <v-expansion-panels v-if=\"schedules !== undefined && schedules.length !== 0\" v-model=\"character_panel\">\r\n                    <v-expansion-panel v-for=\"character_name in characters\" :key=\"character_name\">\r\n                      <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n                        <v-img :src=\"assets_base_url + 'sprites/icons/npc/spr_ui_generic_icon_npc_' + character_name.toLowerCase() + '_0.png'\" max-height=\"20\" max-width=\"24\" />\r\n                        &nbsp; {{ character_name }}\r\n                      </v-expansion-panel-header>\r\n                      <v-expansion-panel-content>\r\n                        <!-- Seasons -->\r\n                        <v-expansion-panels v-if=\"schedules !== undefined && schedules.length !== 0\" v-model=\"season_panel\">\r\n                          <v-expansion-panel v-for=\"season in seasons\" :key=\"season\">\r\n                            <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n                              <v-img v-if=\"season == 'Rainy'\" :src=\"assets_base_url + 'sprites/icons/weather/spr_ui_hud_info_backplate_weather_icon_rainy_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Spring'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_spring_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Summer'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_summer_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Fall'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_autumn_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Winter'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_winter_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              &nbsp; {{ season }}\r\n                            </v-expansion-panel-header>\r\n                            <v-expansion-panel-content>\r\n                              <!-- Days -->\r\n                              <div v-if=\"season == 'Rainy'\">\r\n                                <!-- Rainy Day -->\r\n                                <div v-for=\"x in schedules[character_name.toLowerCase()][season.toLowerCase()]\" :key=\"x\">\r\n                                  <span v-if=\"x['extra_conditions'] !== ''\">\r\n                                    Extra Conditions: <br />\r\n                                    <span class=\"text-pre-wrap\">{{ x[\"extra_conditions\"] }}</span>\r\n                                  </span>\r\n                                  <v-data-table v-if=\"schedules !== undefined && schedules.length !== 0\" dense :headers=\"schedule_headers\" :items=\"x['itinerary']\" :search=\"schedule_search\" :sort-by=\"['time']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                                </div>\r\n                              </div>\r\n                              <div v-else>\r\n                                <!-- Standard Days -->\r\n                                <v-expansion-panels v-if=\"schedules !== undefined && schedules.length !== 0\" v-model=\"day_panel\">\r\n                                  <v-expansion-panel v-for=\"day in days\" :key=\"day\">\r\n                                    <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n                                      {{ day }}\r\n                                    </v-expansion-panel-header>\r\n                                    <v-expansion-panel-content>\r\n                                      <div v-for=\"y in schedules[character_name.toLowerCase()][season.toLowerCase()][day.toLocaleLowerCase()]\" :key=\"y\">\r\n                                        <span v-if=\"y['extra_conditions'] !== ''\">\r\n                                          Extra Conditions: <br />\r\n                                          <span class=\"text-pre-wrap\">{{ y[\"extra_conditions\"] }}</span>\r\n                                        </span>\r\n                                        <v-data-table v-if=\"schedules !== undefined && schedules.length !== 0\" dense :headers=\"schedule_headers\" :items=\"y['itinerary']\" :search=\"schedule_search\" :sort-by=\"['time']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                                      </div>\r\n                                    </v-expansion-panel-content>\r\n                                  </v-expansion-panel>\r\n                                </v-expansion-panels>\r\n                              </div>\r\n                            </v-expansion-panel-content>\r\n                          </v-expansion-panel>\r\n                        </v-expansion-panels>\r\n                      </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                  </v-expansion-panels>\r\n                </v-card>\r\n              </div>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-card>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n\r\n  data: () => ({\r\n      assets_base_url: \"https://raw.githubusercontent.com/AnnaNomoly/aldarian-archive/refs/heads/assets/public/\",\r\n      cache_id: \"234c9e05-f0a5-4fb4-bba0-1397abfb9dfd\",\r\n      lastLoadingPause: Date.now(),\r\n      loading_fiddle: true,\r\n      loading_t2_output: true,\r\n      versions: [],\r\n      version_loaded: \"\",\r\n      cache: {}, // Local Storage\r\n      selected_tab: null,\r\n      tabs: [\r\n        \"Artifacts\",\r\n        //\"Blacksmithing\",\r\n        \"Bugs\",\r\n        \"Cooking\",\r\n        //\"Crafting\",\r\n        \"Fish\",\r\n        \"Forage\",\r\n        \"Harvest\",\r\n        //\"Locations\",\r\n        //\"NPCs\",\r\n        //\"Quests\",\r\n        \"Schedules\"\r\n      ],\r\n\r\n      // fish_panels: [\r\n      //   \"Misc\",\r\n      //   \"Ocean\",\r\n      //   \"Pond\",\r\n      //   \"River\"\r\n      // ],\r\n\r\n      // Artifacts\r\n      artifact_search: \"\",\r\n      artifact_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Location\", value: \"location\" },\r\n        { text: \"Sources\", value: \"sources\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n        { text: \"Renown\", value: \"renown\" },\r\n      ],\r\n      artifacts: [],\r\n\r\n      // Bugs\r\n      bug_search: \"\",\r\n      bug_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Type\", value: \"type\" },\r\n        { text: \"Locations\", value: \"locations\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Hours\", value: \"hours\" },\r\n        { text: \"Weather\", value: \"weather\" },\r\n        { text: \"Hiding Spots\", value: \"liked_object_categories\" },\r\n        { text: \"Spawn\", value: \"spawn\" },\r\n        { text: \"Attraction\", value: \"attraction\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n      ],\r\n      bugs: [],\r\n\r\n      // Characters\r\n      characters: [\"Adeline\",\"Balor\",\"Celine\",\"Darcy\",\"Dell\",\"Eiland\",\"Elsie\",\"Errol\",\"Hayden\",\"Hemlock\",\"Holt\",\"Juniper\",\"Josephine\",\"Landen\",\"Louis\",\"Luc\",\"Maple\",\"March\",\"Merri\",\"Nora\",\"Olric\",\"Reina\",\"Ryis\",\"Terithia\",\"Valen\",\"Vera\"],\r\n      character_panel: null,\r\n\r\n      // Cooking\r\n      cooking_search: \"\",\r\n      cooking_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Stars\", value: \"stars\" },\r\n        { text: \"Cooking Lv\", value: \"crafting_level_requirement\" },\r\n        { text: \"Kitchen Lv\", value: \"kitchen_tier_requirement\" },\r\n        { text: \"Obtained By\", value: \"obtained_by\" },\r\n        { text: \"Obtained From\", value: \"obtained_from\" },\r\n        { text: \"Price\", value: \"recipe_price\" },\r\n        { text: \"Recipe\", value: \"recipe\" },\r\n        { text: \"Time\", value: \"time\" },\r\n      ],\r\n      cooking: [],\r\n\r\n      // Crops\r\n      crops_search: \"\",\r\n      crops_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Season\", value: \"seasons\" },\r\n        { text: \"Growth Time\", value: \"growth_time\" },\r\n        { text: \"Regrowth Time\", value: \"regrow_days\" },\r\n        { text: \"Restoration\", value: \"restore\" },\r\n        { text: \"Sell Price\", value: \"sell_price\" },\r\n        { text: \"Purchase Price\", value: \"purchase_price\" },\r\n        { text: \"Seed\", value: \"seed_name\" },\r\n        { text: \"Seed Price\", value: \"seed_price\" },\r\n      ],\r\n      crops: [],\r\n\r\n      // Fish\r\n      fish_search: \"\",\r\n      fish_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Locations\", value: \"locations\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Weather\", value: \"weather\" },\r\n        { text: \"Diving\", value: \"diving\" },\r\n        { text: \"Size\", value: \"size\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n      ],\r\n      fish: [],\r\n\r\n      // Forage\r\n      forage_search: \"\",\r\n      forage_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Source (Bush/Tree)\", value: \"source\" },\r\n        { text: \"Restoration\", value: \"restore\" },\r\n        { text: \"Sell Price\", value: \"sell_price\" },\r\n        { text: \"Purchase Price\", value: \"purchase_price\" },\r\n      ],\r\n      forage: [],\r\n\r\n      // Schedules\r\n      day_panel: null,\r\n      season_panel: null,\r\n      seasons: [\"Rainy\", \"Spring\", \"Summer\", \"Fall\", \"Winter\"],\r\n      days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n      schedules: {},\r\n      schedule_search: \"\",\r\n      schedule_headers: [\r\n        { text: \"Departure Time\", value: \"time\" },\r\n        { text: \"Destination (Location)\", value: \"destination_location\" },\r\n        { text: \"Destination (Point)\", value: \"destination_point\" },\r\n      ],\r\n    }),\r\n\r\n    methods: {\r\n      load_manifest: function() {\r\n        console.log(\"Loading manifest...\");\r\n        let manifest = this.load_file(this.assets_base_url + \"data/manifest.json\");\r\n        this.version_loaded = manifest[\"current\"];\r\n        this.versions = manifest[\"versions\"];\r\n        console.log(manifest);\r\n      },\r\n\r\n      load_from_local_storage: function(version) {\r\n        if(localStorage.getItem(\"cache_id\") !== null && localStorage.getItem(\"cache_id\") !== undefined) {\r\n          let local_cache_id = localStorage.getItem(\"cache_id\");\r\n          if(this.cache_id === local_cache_id) {\r\n            if(localStorage.getItem(version) !== null && localStorage.getItem(version) !== undefined) {\r\n              console.log(\"Loading Local Storage: \" + version);\r\n              let version_cache = JSON.parse(localStorage.getItem(version));\r\n              this.artifacts = version_cache[\"artifacts\"];\r\n              this.bugs = version_cache[\"bugs\"];\r\n              this.cooking = version_cache[\"cooking\"];\r\n              this.crops = version_cache[\"crops\"];\r\n              this.fish = version_cache[\"fish\"];\r\n              this.forage = version_cache[\"forage\"];\r\n              // this.localizations_eng = version_cache[\"localizations_eng\"];\r\n              this.schedules = version_cache[\"schedules\"];\r\n              return true;\r\n            }\r\n          }\r\n          else {\r\n            localStorage.removeItem(\"cache_id\");\r\n            localStorage.removeItem(version);\r\n            console.log(\"The cache was built by an outdated app version!\");\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      save_to_local_storage: function(version) {\r\n        localStorage.setItem(\"cache_id\", this.cache_id);\r\n        localStorage.setItem(version, JSON.stringify({\r\n          \"artifacts\": this.artifacts,\r\n          \"bugs\": this.bugs,\r\n          \"cooking\": this.cooking,\r\n          \"crops\": this.crops,\r\n          \"fish\": this.fish,\r\n          \"forage\": this.forage,\r\n          // \"localizations_eng\": this.localizations_eng,\r\n          \"schedules\": this.schedules\r\n        }));\r\n      },\r\n\r\n      isLoading: function() {\r\n        return this.loading_fiddle || this.loading_t2_output;\r\n      },\r\n\r\n      pauseLoading: function() {\r\n        return new Promise(r => setTimeout(r));\r\n      },\r\n\r\n      loadingPauseCheck: async function() {\r\n        if(Date.now() - 30 > this.lastLoadingPause) {\r\n          this.lastLoadingPause = Date.now();\r\n          await this.pauseLoading();\r\n        }\r\n      },\r\n\r\n      load_file: function(url) {\r\n        var request = new XMLHttpRequest();\r\n        request.open(\"GET\", url, false);\r\n        request.send(null)\r\n        return JSON.parse(request.responseText);\r\n      },\r\n\r\n      clear_data: function() {\r\n        this.artifacts = [];\r\n        this.artifacts_dict = {};\r\n        this.bugs = [];\r\n        this.bugs_dict = {};\r\n        this.cooking = [];\r\n        this.cooking_dict = {};\r\n        this.crops = [];\r\n        this.crops_dict = {};\r\n        this.fish = [];\r\n        this.forage = [];\r\n        this.forage_dict = {};\r\n        this.schedules = [];\r\n        this.schedules_dict = {};\r\n      },\r\n\r\n      load_data: function(version) {\r\n        console.log(\"Loading Raw Data: \" + version);\r\n\r\n        this.clear_data();\r\n        this.loading_fiddle = true;\r\n        this.loading_t2_output = true;\r\n        this.version_loaded = version;\r\n\r\n        let local_storage_loaded = this.load_from_local_storage(this.version_loaded);\r\n        if(local_storage_loaded === true) {\r\n          console.log(\"Successfully loaded from Local Storage!\");\r\n          this.loading_fiddle = false;\r\n          this.loading_t2_output = false;\r\n        }\r\n        else {\r\n          this.parse_localization(this.load_file(this.assets_base_url + \"data/\" + version + \"/localization.json\"));\r\n          this.parse_fiddle(this.load_file(this.assets_base_url + \"data/\" + version + \"/fiddle.json\"));\r\n          this.parse_t2_output(this.load_file(this.assets_base_url + \"data/\" + version + \"/t2_output.json\"));\r\n        }\r\n      },\r\n\r\n      convert_time: function(time) {\r\n        // Check correct time format and split into components\r\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) { // If time format correct\r\n          time = time.slice (1);  // Remove full string match value\r\n          time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n          time[0] = +time[0] % 12 || 12; // Adjust hours\r\n        }\r\n        return time.join (''); // return adjusted time or original string\r\n      },\r\n\r\n      pad: function(num, size) {\r\n        num = num.toString();\r\n        while (num.length < size) num = \"0\" + num;\r\n        return num;\r\n      },\r\n\r\n      /**\r\n       * \r\n       * @param hours_array Array[int] of two numbers representing a time range (hours of the day) for something.\r\n       */\r\n      parse_hours_range: function(hours_array) {\r\n        let start_time = \"6:00AM\";\r\n        if(hours_array[0] > 6 && hours_array[0] < 12) {\r\n          start_time = hours_array[0] + \":00AM\"\r\n        }\r\n        else if(hours_array[0] == 12) {\r\n          start_time = hours_array[0] + \":00PM\"\r\n        }\r\n        else if(hours_array[0] > 12 && hours_array[0] < 24) {\r\n          start_time = (hours_array[0] - 12) + \":00PM\"\r\n        }\r\n        else if(hours_array[0] == 24) {\r\n          start_time = hours_array[0] + \":00AM\"\r\n        }\r\n        else if(hours_array[0] > 24) {\r\n          start_time = (hours_array[0] - 24) + \":00AM\"\r\n        }\r\n\r\n        let end_time = \"6:00AM\";\r\n        if(hours_array[1] > 6 && hours_array[1] < 12) {\r\n          end_time = hours_array[1] + \":00AM\"\r\n        }\r\n        else if(hours_array[1] == 12) {\r\n          end_time = hours_array[1] + \":00PM\"\r\n        }\r\n        else if(hours_array[1] > 12 && hours_array[1] < 24) {\r\n          end_time = (hours_array[1] - 12) + \":00PM\"\r\n        }\r\n        else if(hours_array[1] == 24) {\r\n          end_time = hours_array[1] + \":00AM\"\r\n        }\r\n        else if(hours_array[1] > 24) {\r\n          end_time = (hours_array[1] - 24) + \":00AM\"\r\n        }\r\n        \r\n        return start_time + \" to \" + end_time;\r\n      },\r\n\r\n      parse_localization: function(json) {\r\n        this.localizations_eng = json[\"eng\"];\r\n      },\r\n\r\n      find_localization_string: function(pattern) {\r\n        for(let l in this.localizations_eng) {\r\n          if(l.match(pattern)) {\r\n            return l;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      parse_fiddle: async function(json) {\r\n        let _version = \"\" + this.version_loaded;\r\n\r\n        // Artifact Data\r\n        var data_artifacts = json[\"artifacts\"];\r\n\r\n        // Bugs Data\r\n        var data_bugs = json[\"bugs\"];\r\n\r\n        // Dungeons Data\r\n        var data_dungeons = json[\"dungeons\"]\r\n\r\n        // Fish Data\r\n        var data_fish = json[\"fish\"];\r\n        var data_fishing = json[\"fishing\"];\r\n\r\n        // Items Data\r\n        var items_other_artifacts = json[\"items\"][\"other\"][\"artifacts\"];\r\n        var items_other_bugs = json[\"items\"][\"other\"][\"bugs\"];\r\n        var items_other_crops_and_forage = json[\"items\"][\"other\"][\"crops_and_forage\"];\r\n        var items_fish = json[\"items\"][\"fish\"];\r\n        var items_mines = json[\"items\"][\"mines\"];\r\n        var items_other_cooked_dishes = json[\"items\"][\"other\"][\"cooked_dishes\"];\r\n\r\n        // Letters Data\r\n        var data_letters = json[\"letters\"];\r\n\r\n        // Misc Data\r\n        var data_misc = json[\"misc\"];\r\n\r\n        // Museum Archaeology Data\r\n        var data_museum_wings = json[\"museum_wings\"];\r\n        \r\n        // Object Prototypes Data\r\n        var object_prototypes = json[\"object_prototypes\"];\r\n\r\n        // Quests Data\r\n        var data_quests = json[\"quests\"];\r\n\r\n        // Stores Data\r\n        var data_stores = json[\"stores\"];\r\n\r\n        // Wishing Well Data\r\n        var data_wishing_well = json[\"wishing_well\"];\r\n\r\n        // Chicken Statue Data\r\n        var data_chicken_statue = json[\"chicken_statue\"];\r\n\r\n        // Restoration Data\r\n        var data_restoration = json[\"restoration\"];\r\n\r\n        // Forageables Data\r\n        var data_forageables = json[\"forageables\"];\r\n\r\n        // PARSE FISH\r\n        this.fish = [];\r\n\r\n        // Extract all fish from the items/mines dictionary.\r\n        for(let mines_location in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let m in items_mines[mines_location]) {\r\n            if(items_mines[mines_location][m][\"tags\"] !== undefined) {\r\n              if(items_mines[mines_location][m][\"tags\"].includes(\"fishable\")) { \r\n                if(items_mines[mines_location][m][\"value\"] !== undefined) {\r\n                  this.fish.push({\r\n                    \"key\": m, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                    \"value\": items_mines[mines_location][m][\"value\"][\"bin\"],\r\n                    \"locations\": mines_location\r\n                  });\r\n                }\r\n                else {\r\n                  this.fish.push({\r\n                    \"key\": m, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                    \"value\": \"None\",\r\n                    \"locations\": mines_location\r\n                  });  \r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract all fish from the items/fish dictionary.\r\n        for(let fish_location in items_fish) {\r\n          await this.loadingPauseCheck();\r\n          for(let f in items_fish[fish_location]) {\r\n            if(items_fish[fish_location][f][\"tags\"] !== undefined) {\r\n              if(items_fish[fish_location][f][\"tags\"].includes(\"fishable\")) {\r\n                if(items_fish[fish_location][f][\"value\"] !== undefined) {\r\n                  this.fish.push({\r\n                    \"key\": f, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_fish[fish_location][f][\"name\"]],\r\n                    \"value\": items_fish[fish_location][f][\"value\"][\"bin\"]\r\n                  });\r\n                }\r\n                else {\r\n                  this.fish.push({\r\n                    \"key\": f, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_fish[fish_location][f][\"name\"]],\r\n                    \"value\": \"None\"\r\n                  });  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional fish data from the fish dictionary.\r\n        for(let i = 0; i < this.fish.length; i++) {\r\n          await this.loadingPauseCheck();\r\n          if(this.fish[i][\"key\"] in data_fish) {\r\n            if(data_fish[this.fish[i][\"key\"]][\"seasons\"] !== undefined) {\r\n              this.fish[i][\"seasons\"] = data_fish[this.fish[i][\"key\"]][\"seasons\"].join(\", \");\r\n            }\r\n            else {\r\n              this.fish[i][\"seasons\"] = \"spring, summer, fall, winter\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"water_type\"] !== undefined) {\r\n              if(Array.isArray(data_fish[this.fish[i][\"key\"]][\"water_type\"])) {\r\n                this.fish[i][\"locations\"] = data_fish[this.fish[i][\"key\"]][\"water_type\"].join(\", \");\r\n              }\r\n              else {\r\n                this.fish[i][\"locations\"] = data_fish[this.fish[i][\"key\"]][\"water_type\"];\r\n              }\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"size\"] !== undefined) {\r\n              this.fish[i][\"size\"] = data_fish[this.fish[i][\"key\"]][\"size\"];\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"rarity\"] !== undefined) {\r\n              this.fish[i][\"rarity\"] = data_fish[this.fish[i][\"key\"]][\"rarity\"];\r\n            }\r\n            else {\r\n              this.fish[i][\"rarity\"] = \"common\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"weather\"] !== undefined) {\r\n              if(Array.isArray(data_fish[this.fish[i][\"key\"]][\"weather\"])) {\r\n                this.fish[i][\"weather\"] = data_fish[this.fish[i][\"key\"]][\"weather\"].join(\", \");\r\n              }\r\n              else {\r\n                this.fish[i][\"weather\"] = data_fish[this.fish[i][\"key\"]][\"weather\"];\r\n              }\r\n            }\r\n            else {\r\n              this.fish[i][\"weather\"] = \"calm, special, inclement, heavy_inclement\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"retrieval\"] !== undefined) {\r\n              if(data_fish[this.fish[i][\"key\"]][\"retrieval\"].includes(\"divespot\")) {\r\n                this.fish[i][\"diving\"] = \"yes\";\r\n              }\r\n              else {\r\n                this.fish[i][\"diving\"] = \"no\";\r\n              }\r\n            }\r\n            else {\r\n              this.fish[i][\"diving\"] = \"no\";\r\n            }\r\n\r\n          }\r\n          // It's a from a dive spot or other forage.\r\n          else {\r\n            console.log(\"This should not execute!\");\r\n          }\r\n        }\r\n\r\n        // PARSE ARTIFACTS\r\n        this.artifacts = [];\r\n        this.artifacts_dict = {}\r\n\r\n        // Create artifact location lookup.\r\n        var artifact_location_lookup_dict = {\r\n          // aldrian is in the /artifacts/location dictionary\r\n          // caldosian is in the /artifacts/location dictionary\r\n          // alda is in the /artifacts/location dictionary\r\n          // ancient is in the /artifacts/location dictionary\r\n          // prehistoric is in the /artifacts/location dictionary\r\n          \"oopart\": \"dig_spot (Well Placed Perk)\",\r\n          \"aquatic\": \"fishing (Aquatic Antiquities Perk)\",\r\n          \"sunken\": \"diving (Sunken Secrets Perk)\",\r\n          //\"dungeon\": \"mines (Any Biome)\", // Confirm this is correct\r\n          \"upper_mines_artifacts\": \"upper_mines\",\r\n          \"tide_caverns\": \"tide_caverns\",\r\n          \"deep_earth\": \"deep_earth\"\r\n        };\r\n        for(let location in data_artifacts[\"locations\"]) {\r\n          artifact_location_lookup_dict[data_artifacts[\"locations\"][location]] = location;\r\n        }\r\n        artifact_location_lookup_dict[\"mine\"] = \"mines (Any Biome)\";\r\n\r\n        // Extract all artifacts from the items/mines dictionary.\r\n        for(let mines_location in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let m in items_mines[mines_location]) {\r\n            if(items_mines[mines_location][m][\"tags\"] !== undefined) {\r\n              if(items_mines[mines_location][m][\"tags\"].includes(\"archaeology\")) {\r\n                this.artifacts_dict[m] = {\r\n                  \"key\": m,\r\n                  \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                  \"location\": mines_location,\r\n                  \"value\": items_mines[mines_location][m][\"value\"][\"bin\"],\r\n                  \"renown\": items_mines[mines_location][m][\"value\"][\"renown\"]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract all artifacts from the items/other/artifacts dictionary.\r\n        for(let artifact in items_other_artifacts) {\r\n          await this.loadingPauseCheck();\r\n          if(items_other_artifacts[artifact][\"tags\"] !== undefined) {\r\n            if(items_other_artifacts[artifact][\"tags\"].includes(\"archaeology\")) {\r\n              this.artifacts_dict[artifact] = {\r\n                \"key\": artifact,\r\n                \"name\": this.localizations_eng[items_other_artifacts[artifact][\"name\"]],\r\n                \"value\": items_other_artifacts[artifact][\"value\"][\"bin\"],\r\n                \"renown\": items_other_artifacts[artifact][\"value\"][\"renown\"]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the object_prototypes/rock dictionary.\r\n        for(let node in object_prototypes[\"rock\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"rock\"][node][\"drops\"] !== undefined) {\r\n            for(let drop in object_prototypes[\"rock\"][node][\"drops\"]) {\r\n              if(this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]] !== undefined) {\r\n                if(this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"] !== undefined) {\r\n                  this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"].push(node);\r\n                }\r\n                else {\r\n                  this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"] = [node];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the artifacts/loot dictionary.\r\n        for(let artifact in data_artifacts[\"loot\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[artifact] !== undefined) {\r\n            this.artifacts_dict[artifact][\"rarity\"] = data_artifacts[\"loot\"][artifact];\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the museum_wings/archaeology dictionary.\r\n        for(let set in data_museum_wings[\"archaeology\"][\"sets\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let item in data_museum_wings[\"archaeology\"][\"sets\"][set][\"items\"]) {\r\n            let item_name = data_museum_wings[\"archaeology\"][\"sets\"][set][\"items\"][item];\r\n            if(this.artifacts_dict[item_name] !== undefined) {\r\n              this.artifacts_dict[item_name][\"location\"] = artifact_location_lookup_dict[set];\r\n              if(this.artifacts_dict[item_name][\"sources\"] !== undefined) {\r\n                this.artifacts_dict[item_name][\"sources\"].push(\"dig_spot\");\r\n              }\r\n              else {\r\n                this.artifacts_dict[item_name][\"sources\"] = [\"dig_spot\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the dungeons/dungeond/biomes dictionary.\r\n        var object_to_biome_dict = {};\r\n        for(let biome in data_dungeons[\"dungeons\"][\"biomes\"]) {\r\n          await this.loadingPauseCheck();\r\n          let biome_name = data_dungeons[\"dungeons\"][\"biomes\"][biome][\"artifact_set\"];\r\n          if(biome_name === \"upper_mines_artifacts\") {\r\n            biome_name = \"upper_mines\";\r\n          }\r\n\r\n          for(let i in data_dungeons[\"dungeons\"][\"biomes\"][biome][\"votes\"][\"ore_rock\"]) {\r\n            let ore = data_dungeons[\"dungeons\"][\"biomes\"][biome][\"votes\"][\"ore_rock\"][i][\"object\"];\r\n            object_to_biome_dict[ore] = biome_name;\r\n          }          \r\n        }\r\n\r\n        // Note: Anything mapping to \"mine\" isn't obtaineable yet. Make that clear!\r\n        for(let o in object_to_biome_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(object_to_biome_dict[o] === \"mine\") {\r\n            object_to_biome_dict[o] = \"unobtainable\";\r\n          }\r\n        }\r\n\r\n        // Set location based on sources (for nodes and rocks).\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          for(let s in this.artifacts_dict[a][\"sources\"]) {\r\n            let source = this.artifacts_dict[a][\"sources\"][s];\r\n            if(object_to_biome_dict[source] !== undefined) {\r\n              this.artifacts_dict[a][\"location\"] = object_to_biome_dict[source];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Anything still without a source is unobtainable.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[a][\"sources\"] === undefined) {\r\n            this.artifacts_dict[a][\"sources\"] = ['none'];\r\n          }\r\n        }\r\n\r\n        // Anything still without a location is unobtainable.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[a][\"location\"] === undefined) {\r\n            this.artifacts_dict[a][\"location\"] = \"unobtainable\";\r\n          }\r\n        }\r\n\r\n        // Convert the artifacts dict to an array for the table.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          this.artifacts_dict[a][\"sources\"] = this.artifacts_dict[a][\"sources\"].join(\", \");\r\n          this.artifacts.push(this.artifacts_dict[a]);\r\n        }\r\n\r\n\r\n        // PARSE BUGS\r\n        this.bugs = [];\r\n        this.bugs_dict = {};\r\n\r\n        // Extract data from bugs dictionary\r\n        for(let b in data_bugs) {\r\n          await this.loadingPauseCheck();\r\n          if(b !== \"default\") {\r\n            this.bugs_dict[b] = {\r\n              \"key\": b, // string\r\n              \"type\": data_bugs[b][\"type\"], // string\r\n              \"seasons\": data_bugs[b][\"seasons\"], // array[string]\r\n              \"hours\": data_bugs[b][\"hours\"], // array[int]\r\n              \"weather\": data_bugs[b][\"weather\"], // array[string]\r\n              \"liked_object_categories\": data_bugs[b][\"liked_object_categories\"], // array[string]\r\n              \"rarity\": data_bugs[b][\"rarity\"], // string\r\n              \"spawn\": data_bugs[b][\"spawn\"], // array[string]\r\n              \"locations\": data_bugs[b][\"locations\"], // array[string]\r\n              \"attraction\": data_bugs[b][\"attraction\"], // string\r\n              \"has_light\": data_bugs[b][\"has_light\"], // boolean\r\n              \"dungeon_biome\": data_bugs[b][\"dungeon_biome\"], // string\r\n            };\r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/bugs dictionary.\r\n        for(let b in items_other_bugs) {\r\n          await this.loadingPauseCheck();\r\n          if(this.bugs_dict[b] === undefined) {\r\n            this.bugs_dict[b] = {\r\n              \"name\": this.localizations_eng[items_other_bugs[b][\"name\"]],\r\n              \"tags\": items_other_bugs[b][\"tags\"],\r\n              \"value\": items_other_bugs[b][\"value\"][\"bin\"]\r\n            }\r\n            // Cross-reference fish dictionary for more data\r\n            if(data_fish[b] !== undefined) {\r\n              this.bugs_dict[b][\"seasons\"] = data_fish[b][\"seasons\"];\r\n              this.bugs_dict[b][\"rarity\"] = data_fish[b][\"rarity\"];\r\n              this.bugs_dict[b][\"liked_object_categories\"] = data_fish[b][\"retrieval\"];\r\n            }\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"name\"] = this.localizations_eng[items_other_bugs[b][\"name\"]];\r\n            this.bugs_dict[b][\"tags\"] = items_other_bugs[b][\"tags\"];\r\n            this.bugs_dict[b][\"value\"] = items_other_bugs[b][\"value\"][\"bin\"];\r\n          }\r\n        }\r\n\r\n        // Extract data from items/mines\r\n        for(let l in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let x in items_mines[l]) {\r\n            if(this.bugs_dict[x] !== undefined) {\r\n              this.bugs_dict[x][\"name\"] = this.localizations_eng[items_mines[l][x][\"name\"]];\r\n              this.bugs_dict[x][\"value\"] = items_mines[l][x][\"value\"][\"bin\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Convert the bugs dict to an array for the table.\r\n        for(let b in this.bugs_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.bugs_dict[b][\"locations\"] === undefined) {\r\n            this.bugs_dict[b][\"locations\"] = \"overworld\";\r\n          }\r\n          if(this.bugs_dict[b][\"seasons\"] !== undefined && Array.isArray(this.bugs_dict[b][\"seasons\"])) {\r\n            this.bugs_dict[b][\"seasons\"] = this.bugs_dict[b][\"seasons\"].join(\", \");\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"seasons\"] = \"spring, summer, fall, winter\";\r\n          }\r\n          if(this.bugs_dict[b][\"hours\"] !== undefined && Array.isArray(this.bugs_dict[b][\"hours\"])) {\r\n            this.bugs_dict[b][\"hours\"] = this.parse_hours_range(this.bugs_dict[b][\"hours\"]);\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"hours\"] = \"6:00AM to 2:00AM\";\r\n          }\r\n          if(this.bugs_dict[b][\"weather\"] !== undefined && Array.isArray(this.bugs_dict[b][\"weather\"])) {\r\n            this.bugs_dict[b][\"weather\"] = this.bugs_dict[b][\"weather\"].join(\", \");\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"weather\"] = \"calm, special, inclement, heavy_inclement\";\r\n          }\r\n          if(this.bugs_dict[b][\"liked_object_categories\"] !== undefined && Array.isArray(this.bugs_dict[b][\"liked_object_categories\"])) {\r\n            this.bugs_dict[b][\"liked_object_categories\"] = this.bugs_dict[b][\"liked_object_categories\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"spawn\"] !== undefined && Array.isArray(this.bugs_dict[b][\"spawn\"])) {\r\n            this.bugs_dict[b][\"spawn\"] = this.bugs_dict[b][\"spawn\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"locations\"] !== undefined && Array.isArray(this.bugs_dict[b][\"locations\"])) {\r\n            this.bugs_dict[b][\"locations\"] = this.bugs_dict[b][\"locations\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"dungeon_biome\"] !== undefined) {\r\n            if(this.bugs_dict[b][\"dungeon_biome\"] == \"upper\") {\r\n              this.bugs_dict[b][\"locations\"] = \"upper_mines\";\r\n            }\r\n            else {\r\n              this.bugs_dict[b][\"locations\"] = this.bugs_dict[b][\"dungeon_biome\"];\r\n            }\r\n            \r\n          }\r\n          this.bugs.push(this.bugs_dict[b]);\r\n        }\r\n\r\n        // COOKED DISHES\r\n        this.cooking = [];\r\n        this.cooking_dict = {};\r\n\r\n        // Extract data from the items/other/cooked_dishes dict.\r\n        for(let c in items_other_cooked_dishes) {\r\n          await this.loadingPauseCheck();\r\n          this.cooking_dict[c] = {\r\n            \"key\": c,\r\n            \"name\": this.localizations_eng[items_other_cooked_dishes[c][\"name\"]],\r\n            \"stars\": items_other_cooked_dishes[c][\"stars\"],\r\n            \"crafting_level_requirement\": items_other_cooked_dishes[c][\"crafting_level_requirement\"],\r\n            \"kitchen_tier_requirement\": items_other_cooked_dishes[c][\"kitchen_tier_requirement\"],\r\n            \"recipe\": items_other_cooked_dishes[c][\"recipe\"]\r\n            // NOTE: The value data here is the price of the actual item, NOT the recipe.\r\n          }\r\n\r\n          if(items_other_cooked_dishes[c][\"recipe_is_default\"] !== undefined && items_other_cooked_dishes[c][\"recipe_is_default\"] === true) { // You start with this recipe.\r\n            this.cooking_dict[c][\"obtained_by\"] = \"default\";\r\n            this.cooking_dict[c][\"obtained_from\"] = \"game start\";\r\n          }\r\n          else {\r\n            // Extract recipe prices from misc/cooking_recipe_star_prices\r\n            if(this.cooking_dict[c][\"stars\"] !== undefined) { // If the cooking dish has no stars it can't be purchased.\r\n              this.cooking_dict[c][\"recipe_price\"] = data_misc[\"cooking_recipe_star_prices\"][this.cooking_dict[c][\"stars\"]-1];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe purchase location from stores dict.\r\n        for(let s in data_stores) {\r\n          await this.loadingPauseCheck();\r\n          let store_name = this.localizations_eng[data_stores[s][\"name\"]];\r\n          for(let c in data_stores[s][\"categories\"]) {\r\n            // Constant Stock (so far only Terithia's shop sells constant recipes)\r\n            if(data_stores[s][\"categories\"][c][\"constant_stock\"] !== undefined) {\r\n              for(let i in data_stores[s][\"categories\"][c][\"constant_stock\"]) {\r\n                let stock_item = data_stores[s][\"categories\"][c][\"constant_stock\"][i];\r\n                if(typeof stock_item === 'object' && stock_item[\"recipe_scroll\"] !== undefined) {\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"constant_stock\"][i][\"recipe_scroll\"]\r\n                  if(this.cooking_dict[recipe_name] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            // Random Stock (inn and darcey)\r\n            if(data_stores[s][\"categories\"][c][\"random_stock\"] !== undefined) {\r\n              for(let i in data_stores[s][\"categories\"][c][\"random_stock\"]) {\r\n                let stock_item = data_stores[s][\"categories\"][c][\"random_stock\"][i];\r\n                if(typeof stock_item === 'object' && stock_item[\"item\"] !== undefined && stock_item[\"include_recipe\"] === true) { // darcy's shop\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"random_stock\"][i][\"item\"];\r\n                  if(this.cooking_dict[recipe_name] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                }\r\n                else if(typeof stock_item === 'object' && stock_item[\"recipe_scroll\"] !== undefined) { // inn\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"random_stock\"][i][\"recipe_scroll\"];\r\n                  if(stock_item[\"building_fixed\"] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                  else {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name + \" (upgraded)\";\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from fishing/chest_tables dict.\r\n        for(let c in data_fishing[\"chest_tables\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_fishing[\"chest_tables\"][c][\"items\"]) {\r\n            if(data_fishing[\"chest_tables\"][c][\"items\"][i][\"kind\"] === \"recipe\") {\r\n              let recipe_name = data_fishing[\"chest_tables\"][c][\"items\"][i][\"value\"];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"fishing\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = c + \" treasure box\";\r\n                delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Extract recipe locations from wishing_well dict.\r\n        for(let rarity in data_wishing_well) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_wishing_well[rarity][\"small_roll\"]) {\r\n            if(data_wishing_well[rarity][\"small_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_wishing_well[rarity][\"small_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"wishing_well\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n          for(let i in data_wishing_well[rarity][\"large_roll\"]) {\r\n            if(data_wishing_well[rarity][\"large_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_wishing_well[rarity][\"large_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"wishing_well\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from chicken_statue dict.\r\n        // TODO: Refactor this and wishing_well common code to a method\r\n        for(let rarity in data_chicken_statue) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_chicken_statue[rarity][\"small_roll\"]) {\r\n            if(data_chicken_statue[rarity][\"small_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_chicken_statue[rarity][\"small_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"chicken_statue\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n          for(let i in data_chicken_statue[rarity][\"large_roll\"]) {\r\n            if(data_chicken_statue[rarity][\"large_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_chicken_statue[rarity][\"large_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"chicken_statue\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from letters. \r\n        for(let l in data_letters) {\r\n          await this.loadingPauseCheck();\r\n          if(data_letters[l][\"items\"] !== undefined) {\r\n            for(let i in data_letters[l][\"items\"]) {\r\n              if(data_letters[l][\"items\"][i][\"recipe_scroll\"] !== undefined) {\r\n                let recipe_name = data_letters[l][\"items\"][i][\"recipe_scroll\"];\r\n                if(data_letters[l][\"ari_has_sold\"] !== undefined) {\r\n                  let localization_string = \"items/other/crops_and_forage/\" + data_letters[l][\"ari_has_sold\"] + \"/name\";\r\n                  let item_name = this.localizations_eng[localization_string];\r\n                  this.cooking_dict[recipe_name][\"obtained_by\"] = \"shipping (\" + item_name + \")\";\r\n                  this.cooking_dict[recipe_name][\"obtained_from\"] = \"letter/mail\";\r\n                  delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n                }\r\n                if(data_letters[l][\"ari_has_donated\"] !== undefined) {\r\n                  let localization_string_regex = \"^[a-z_/]+(\" + data_letters[l][\"ari_has_donated\"] + \")[/](name)$\";\r\n                  let item_name = this.find_localization_string(localization_string_regex)\r\n                  if(item_name !== false) {\r\n                    item_name = this.localizations_eng[item_name];\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"museum_donation (\" + item_name + \")\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = \"letter/mail\";\r\n                    delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from quests/story_quests dictionary.\r\n        for(let q in data_quests[\"story_quests\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_quests[\"story_quests\"][q][\"rewards\"]) {\r\n            if(data_quests[\"story_quests\"][q][\"rewards\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_quests[\"story_quests\"][q][\"rewards\"][i][\"recipe_scroll\"];\r\n              let quest_name = this.localizations_eng[data_quests[\"story_quests\"][q][\"name\"]];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"quest\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = quest_name;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from quests/fetch_quests dictionary.\r\n        for(let q in data_quests[\"fetch_quests\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_quests[\"fetch_quests\"][q][\"rewards\"]) {\r\n            if(data_quests[\"fetch_quests\"][q][\"rewards\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_quests[\"fetch_quests\"][q][\"rewards\"][i][\"recipe_scroll\"];\r\n              let quest_name = this.localizations_eng[data_quests[\"fetch_quests\"][q][\"name\"]];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"quest\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = quest_name;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from mines treasure chests\r\n        for(let b in data_dungeons[\"dungeons\"][\"biomes\"]) {\r\n          await this.loadingPauseCheck();\r\n          let biome_name = data_dungeons[\"dungeons\"][\"biomes\"][b][\"artifact_set\"];\r\n          if(biome_name === \"upper_mines_artifacts\") {\r\n            biome_name = \"upper_mines\";\r\n          }\r\n          for(let i in data_dungeons[\"dungeons\"][\"biomes\"][b][\"taste_maker\"]) {\r\n            let recipe_name = data_dungeons[\"dungeons\"][\"biomes\"][b][\"taste_maker\"][i];\r\n            if(this.cooking_dict[recipe_name] !== undefined) {\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"mines (treasure chest)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = biome_name;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Cleanup and build the list.\r\n        for(let x in this.cooking_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Remove the price for any recipe not marked purchaseable.\r\n          if(this.cooking_dict[x][\"obtained_by\"] === undefined || this.cooking_dict[x][\"obtained_by\"] !== \"purchase\") {\r\n            delete this.cooking_dict[x][\"recipe_price\"];\r\n          }\r\n\r\n          // Remove anything without a recipe.\r\n          if(this.cooking_dict[x][\"recipe\"] === undefined) {\r\n            //console.log(\"Missing recipe for: \" + x); // TODO\r\n            delete this.cooking_dict[x];\r\n          }\r\n          else {\r\n            // Mark unobtainable recipes.\r\n            if(this.cooking_dict[x][\"obtained_by\"] === undefined) {\r\n              this.cooking_dict[x][\"obtained_by\"] = \"unobtainable\";\r\n              this.cooking_dict[x][\"obtained_from\"] = \"unobtainable\";\r\n            }\r\n            // Format the recipe string.\r\n            let recipe = \"\";\r\n            for(let i in this.cooking_dict[x][\"recipe\"]) {\r\n              if(this.cooking_dict[x][\"recipe\"][i][\"item\"] !== undefined) {\r\n                let localization_string_regex = \"^(items)[/](?!furniture)[a-z_/]+(\\\\b\" + this.cooking_dict[x][\"recipe\"][i][\"item\"] + \")[/](name)$\";\r\n                let item_name = this.find_localization_string(localization_string_regex)\r\n                if(item_name !== false) {\r\n                  item_name = this.localizations_eng[item_name];\r\n                }\r\n                else {\r\n                  item_name = this.cooking_dict[x][\"recipe\"][i][\"item\"];\r\n                }\r\n                recipe += item_name + \": \" + this.cooking_dict[x][\"recipe\"][i][\"count\"] + \"\\n\";\r\n              }\r\n              // Extract the time.\r\n              if(this.cooking_dict[x][\"recipe\"][i][\"hours\"] !== undefined || this.cooking_dict[x][\"recipe\"][i][\"minutes\"] !== undefined) {\r\n                this.cooking_dict[x][\"time\"] = \"Hours: \" + this.cooking_dict[x][\"recipe\"][i][\"hours\"] + \"\\nMinutes: \" + this.cooking_dict[x][\"recipe\"][i][\"minutes\"];\r\n              }\r\n            }\r\n            this.cooking_dict[x][\"recipe\"] = recipe;\r\n            this.cooking.push(this.cooking_dict[x]);\r\n          }\r\n        }\r\n\r\n        // PARSE HARVEST (GROWABLES)\r\n        this.crops = [];\r\n        this.crops_dict = {};\r\n        items_other_crops_and_forage;\r\n\r\n        // Extract data from object_prototypes/crop dictionary.\r\n        for(let c in object_prototypes[\"crop\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"crop\"][c][\"day_to_stage\"] !== undefined && c !== \"default\") {\r\n            this.crops_dict[c] = {\r\n              \"key\": c,\r\n              \"growth_time\": object_prototypes[\"crop\"][c][\"day_to_stage\"].length - 1\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"seasons\"] !== undefined) {\r\n              this.crops_dict[c][\"seasons\"] = object_prototypes[\"crop\"][c][\"seasons\"];\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"regrow_days\"] !== undefined) {\r\n              this.crops_dict[c][\"regrow_days\"] = object_prototypes[\"crop\"][c][\"regrow_days\"];\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"currency\"] !== undefined) {\r\n              this.crops_dict[c][\"currency\"] = object_prototypes[\"crop\"][c][\"currency\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/crops_and_forage dictionary.\r\n        for(let c in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(this.crops_dict[c] !== undefined) {\r\n            let name = items_other_crops_and_forage[c][\"name\"];\r\n            this.crops_dict[c][\"name\"] = this.localizations_eng[name];\r\n            this.crops_dict[c][\"restore\"] = items_other_crops_and_forage[c][\"restore\"];\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"bin\"] !== undefined) {\r\n              this.crops_dict[c][\"sell_price\"] = items_other_crops_and_forage[c][\"value\"][\"bin\"];\r\n            }\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n              this.crops_dict[c][\"purchase_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n            }          \r\n          }\r\n          else if(c === \"rice_stalk\") {\r\n            let name = items_other_crops_and_forage[c][\"name\"];\r\n            this.crops_dict[\"rice\"][\"name\"] = this.localizations_eng[name];\r\n            this.crops_dict[\"rice\"][\"restore\"] = items_other_crops_and_forage[c][\"restore\"];\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"bin\"] !== undefined) {\r\n              this.crops_dict[\"rice\"][\"sell_price\"] = items_other_crops_and_forage[c][\"value\"][\"bin\"];\r\n            }\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n              this.crops_dict[\"rice\"][\"purchase_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n            }    \r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/crops_and_forage dictionary (again).\r\n        for(let c in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(items_other_crops_and_forage[c][\"tags\"] !== undefined) {\r\n            if(items_other_crops_and_forage[c][\"tags\"].includes(\"seed\")) {\r\n              let crop_name = items_other_crops_and_forage[c][\"crop_object\"];\r\n              if(this.crops_dict[crop_name] !== undefined) {\r\n                this.crops_dict[crop_name][\"seed\"] = c;\r\n                this.crops_dict[crop_name][\"seed_name\"] = this.localizations_eng[items_other_crops_and_forage[c][\"name\"]];\r\n                if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n                  this.crops_dict[crop_name][\"seed_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Cleanup.\r\n        for(let c in this.crops_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Remove regrow duration from plantable forage\r\n          if(this.crops_dict[c][\"restore\"] !== undefined && typeof this.crops_dict[c][\"restore\"] === \"string\") {\r\n            if(this.crops_dict[c][\"restore\"].includes(\"forage\")) {\r\n              if(this.crops_dict[c][\"regrow_days\"] !== undefined) {\r\n                delete this.crops_dict[c][\"regrow_days\"];\r\n              }\r\n            }\r\n          }\r\n          if(this.crops_dict[c][\"seed_price\"] === undefined) {\r\n            this.crops_dict[c][\"seed_price\"] = \"unpurchasable\";\r\n          }\r\n          // Inedible\r\n          if(this.crops_dict[c][\"restore\"] === undefined) {\r\n            this.crops_dict[c][\"restore\"] = \"inedible\";\r\n          }\r\n          // Restoration lookup/conversion.\r\n          else if(this.crops_dict[c][\"restore\"] !== undefined) {\r\n            let restoration_name = this.crops_dict[c][\"restore\"];\r\n            if(data_restoration[\"vars\"][restoration_name] !== undefined) {\r\n              this.crops_dict[c][\"restore\"] = data_restoration[\"vars\"][restoration_name] + \" HP/STA\";\r\n            }\r\n          }\r\n          this.crops.push(this.crops_dict[c]);\r\n        }\r\n\r\n        // PARSE FORAGE\r\n        this.forage = [];\r\n        this.forage_dict = {};\r\n        // 1. Internal name, season, and rarity are specified in forageables dictionary.\r\n        for(let t in data_forageables[\"tables\"]) { // key (normal, beach)\r\n          await this.loadingPauseCheck();\r\n          let seasons = [\"spring\", \"summer\", \"fall\", \"winter\"];\r\n          for(let s in seasons) {\r\n            for(let r in data_forageables[\"tables\"][t][seasons[s]]) { // key (rarity)\r\n              for(let i in data_forageables[\"tables\"][t][seasons[s]][r]) { // array index\r\n                let name = data_forageables[\"tables\"][t][seasons[s]][r][i];\r\n                this.forage_dict[name] = {\r\n                \"key\": name,\r\n                \"rarity\": r,\r\n                \"seasons\": seasons[s]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 2. Additional data is specified in object_prototypes/bush dictionary.\r\n        for(let b in object_prototypes[\"bush\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(b !== \"default\" && b !== \"bush\") {\r\n            let name = object_prototypes[\"bush\"][b][\"harvest\"];\r\n            this.forage_dict[name] = {\r\n              \"key\": name,\r\n              \"source\": b,\r\n              \"seasons\": object_prototypes[\"bush\"][b][\"seasons\"],\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. Even more data is specified in object_prototypes/tree dictionary.\r\n        for(let t in object_prototypes[\"tree\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"tree\"][t][\"fruit_data\"] !== undefined) {\r\n            let name = object_prototypes[\"tree\"][t][\"fruit_data\"][\"harvest\"];\r\n            this.forage_dict[name] = {\r\n              \"key\": name,\r\n              \"source\": t,\r\n              \"seasons\": object_prototypes[\"tree\"][t][\"fruit_data\"][\"seasons\"]\r\n            }\r\n          }\r\n        }\r\n\r\n        // 4. Actual name and Value (bin/store) are specified in items/other/crops_and_forage dictionary.\r\n        for(let f in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[f] !== undefined) {\r\n            this.forage_dict[f][\"name\"] = this.localizations_eng[items_other_crops_and_forage[f][\"name\"]];\r\n            if(items_other_crops_and_forage[f][\"restore\"] !== undefined) {\r\n              this.forage_dict[f][\"restore\"] = items_other_crops_and_forage[f][\"restore\"];\r\n            }\r\n            if(items_other_crops_and_forage[f][\"value\"] !== undefined) {\r\n              if(items_other_crops_and_forage[f][\"value\"][\"bin\"] !== undefined) {\r\n                this.forage_dict[f][\"sell_price\"] = items_other_crops_and_forage[f][\"value\"][\"bin\"]\r\n              }\r\n              if(items_other_crops_and_forage[f][\"value\"][\"store\"] !== undefined) {\r\n                this.forage_dict[f][\"purchase_price\"] = items_other_crops_and_forage[f][\"value\"][\"store\"]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 5. Extract data from items/fish/misc dictionary.\r\n        for(let f in items_fish[\"misc\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[f] !== undefined) {\r\n            this.forage_dict[f][\"name\"] = this.localizations_eng[items_fish[\"misc\"][f][\"name\"]];\r\n            if(items_fish[\"misc\"][f][\"value\"] !== undefined) {\r\n              if(items_fish[\"misc\"][f][\"value\"][\"bin\"] !== undefined) {\r\n                this.forage_dict[f][\"sell_price\"] = items_fish[\"misc\"][f][\"value\"][\"bin\"];\r\n              }\r\n              if(items_fish[\"misc\"][f][\"value\"][\"store\"] !== undefined) {\r\n                this.forage_dict[f][\"purchase_price\"] = items_fish[\"misc\"][f][\"value\"][\"store\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 6. Extract data from items/mines dictionary.\r\n        for(let m in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let item in items_mines[m]) {\r\n            if(this.forage_dict[item] !== undefined) {\r\n              this.forage_dict[item][\"name\"] = this.localizations_eng[items_mines[m][item][\"name\"]];\r\n              this.forage_dict[item][\"restore\"] = items_mines[m][item][\"restore\"];\r\n              if(items_mines[m][item][\"value\"] !== undefined) {\r\n                if(items_mines[m][item][\"value\"][\"bin\"] !== undefined) {\r\n                  this.forage_dict[item][\"sell_price\"] = items_mines[m][item][\"value\"][\"bin\"];\r\n                }\r\n                if(items_mines[m][item][\"value\"][\"store\"] !== undefined) {\r\n                  this.forage_dict[item][\"purchase_price\"] = items_mines[m][item][\"value\"][\"store\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 7. Additional data is specified in object_prototypes/crop dictionary.\r\n        for(let c in object_prototypes[\"crop\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[c] !== undefined) {\r\n            this.forage_dict[c][\"seasons\"] = object_prototypes[\"crop\"][c][\"seasons\"]\r\n          }\r\n        }\r\n\r\n        // 8. Cleanup\r\n        for(let f in this.forage_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Seasons\r\n          if(typeof this.forage_dict[f][\"seasons\"] === 'object') {\r\n            this.forage_dict[f][\"seasons\"] = this.forage_dict[f][\"seasons\"].join(\", \");\r\n          }\r\n          // Inedible\r\n          if(this.forage_dict[f][\"restore\"] === undefined) {\r\n            this.forage_dict[f][\"restore\"] = \"inedible\";\r\n          }\r\n          // Restoration lookup/conversion.\r\n          else if(this.forage_dict[f][\"restore\"] !== undefined) {\r\n            let restoration_name = this.forage_dict[f][\"restore\"];\r\n            if(data_restoration[\"vars\"][restoration_name] !== undefined) {\r\n              this.forage_dict[f][\"restore\"] = data_restoration[\"vars\"][restoration_name] + \" HP/STA\";\r\n            }\r\n            else {\r\n              this.forage_dict[f][\"restore\"] = this.forage_dict[f][\"restore\"] + \" HP/STA\";\r\n            }\r\n          }\r\n          this.forage.push(this.forage_dict[f]);\r\n        }\r\n\r\n        // Done loading fiddle.\r\n        this.loading_fiddle = false;\r\n        this.save_to_local_storage(_version);\r\n      },\r\n\r\n      parse_costraint: function(constraint) {\r\n        if(typeof constraint === 'object' && constraint[\"WorldFactCheck\"] !== undefined) {\r\n          let priority_value = constraint[\"WorldFactCheck\"][\"priority_value\"]\r\n          let parameter_one = constraint[\"WorldFactCheck\"][\"name\"][0][\"Resolved\"][\"content\"]\r\n          let parameter_two = constraint[\"WorldFactCheck\"][\"value\"][0][\"Resolved\"][\"content\"]\r\n          let comparator = constraint[\"WorldFactCheck\"][\"comparator\"].toUpperCase();\r\n\r\n          if(parameter_one === \"weather\") {\r\n            if(parameter_two === \"pleasant\") {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"sunny\",\r\n                // \"weather\": \"sunny\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === \"rainy\") {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"rainy\",\r\n                // \"weather\": \"rainy\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === \"snowy\") {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"snowy\",\r\n                // \"weather\": \"snowy\",\r\n                \"priority\": priority_value\r\n              };\r\n            }            \r\n          }\r\n\r\n          if(parameter_one === \"season\") {\r\n            if(parameter_two === 0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"spring\",\r\n                // \"season\": \"spring\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 2419200) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"summer\",\r\n                // \"season\": \"summer\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 4838400) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"fall\",\r\n                // \"season\": \"fall\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 7257600) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"winter\",\r\n                // \"season\": \"winter\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n          }\r\n\r\n          if(parameter_one === \"day_of_the_week\") {\r\n            if(parameter_two === 0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"monday\",\r\n                // \"day_of_the_week\": \"monday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 86400) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"tuesday\",\r\n                // \"day_of_the_week\": \"tuesday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 172800) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"wednesday\",\r\n                // \"day_of_the_week\": \"wednesday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 259200) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"thursday\",\r\n                // \"day_of_the_week\": \"thursday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 345600) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"friday\",\r\n                // \"day_of_the_week\": \"friday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 432000) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"saturday\",\r\n                // \"day_of_the_week\": \"saturday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 518400) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"sunday\",\r\n                // \"day_of_the_week\": \"sunday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n          }\r\n\r\n          // Counter Constraints\r\n          if(\"summer_tuesday_progress\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Summer Tuesday\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(\"fnati\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Friday Night At The Inn (Regular)\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(\"drawing_fnati\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Friday Night At The Inn (Drawing)\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(\"dessert_fnati\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Friday Night At The Inn (Dessert)\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(parameter_one.indexOf(\"rain_counter\") !== -1) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Rainy Day\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n\r\n          // Quest Constraints\r\n          if(parameter_one.indexOf(\"quest\") !== -1) {\r\n            let quest_name = parameter_one.replace(\"quest_\",\"\").replace(\"_complete\",\"\");\r\n            if(parameter_two === 0.0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"quest\": {\r\n                  \"parameter_one\": quest_name,\r\n                  \"parameter_two\": \"incomplete\"\r\n                },\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 1.0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"quest\": {\r\n                  \"parameter_one\": quest_name,\r\n                  \"parameter_two\": \"complete\"\r\n                },\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n          }\r\n\r\n          // Festival Constraints\r\n          if(parameter_one.indexOf(\"festival_date\") !== -1) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"festival_date\": {\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            }\r\n          }\r\n        }\r\n\r\n        if(constraint[\"Any\"] !== undefined) {\r\n          let compound_constraint = [];\r\n          for(let i in constraint[\"Any\"][0]) {\r\n            compound_constraint.push(this.parse_costraint(constraint[\"Any\"][0][i]));\r\n          }\r\n          return compound_constraint;\r\n        }\r\n\r\n        return false;\r\n      },\r\n\r\n      parse_itinerary: function(itinerary) {\r\n        let parsed_itinerary = [];\r\n        for(let time in itinerary) {\r\n          let original_clock_time = new Date(time * 1000).toISOString().substring(11, 19);\r\n          let hours = Number(original_clock_time.split(\":\")[0]);\r\n          let minutes = Number(original_clock_time.split(\":\")[1]);\r\n          let seconds = original_clock_time.split(\":\")[2];\r\n\r\n          if(minutes % 10 >= 5) {\r\n            minutes = (Math.floor(minutes / 10) + 1) * 10;\r\n            if(minutes == 60) {\r\n              minutes = 0;\r\n              hours++;\r\n            }\r\n          }\r\n          else {\r\n            minutes -= minutes % 10;\r\n          }\r\n\r\n          // Make 0AM - 6AM read as 24:00 - 30:00 in 24h time, indicating \"next day\"\r\n          if(hours <= 2) {\r\n            hours += 24;\r\n          }\r\n\r\n          hours = this.pad(hours, 2);\r\n          let modified_clock_time = this.pad(hours, 2) + \":\" + this.pad(minutes, 2) + \":\" + seconds;\r\n\r\n          parsed_itinerary.push({\r\n            \"time\": modified_clock_time,\r\n            \"destination_location\": itinerary[time][\"destination\"][\"location_id\"],\r\n            \"destination_point\": itinerary[time][\"destination\"][\"point_name\"]\r\n          })\r\n        }\r\n        return parsed_itinerary;\r\n      },\r\n\r\n      parse_t2_output: async function(json) {\r\n        var data_schedules = json[\"schedules\"];\r\n\r\n        // SCHEDULES\r\n        this.schedules = [];\r\n        this.schedules_dict = {};\r\n\r\n        var characters = [\r\n          \"adeline\",\r\n          \"balor\",\r\n          \"caldarus\",\r\n          \"celine\",\r\n          \"darcy\",\r\n          \"dell\",\r\n          \"dozy\",\r\n          \"eiland\",\r\n          \"elsie\",\r\n          \"errol\",\r\n          \"hayden\",\r\n          \"hemlock\",\r\n          \"henrietta\",\r\n          \"holt\",\r\n          \"juniper\",\r\n          \"josephine\",\r\n          \"landen\",\r\n          \"louis\",\r\n          \"luc\",\r\n          \"maple\",\r\n          \"march\",\r\n          \"merri\",\r\n          \"nora\",\r\n          \"olric\",\r\n          \"reina\",\r\n          \"ryis\",\r\n          \"seridia\",\r\n          \"stillwell\",\r\n          \"taliferro\",\r\n          \"terithia\",\r\n          \"valen\",\r\n          \"vera\",\r\n          \"wheedle\",\r\n          \"zorel\"\r\n        ]\r\n\r\n        for(let c in characters) {\r\n          await this.loadingPauseCheck();\r\n          this.schedules_dict[characters[c]] = {};\r\n          for(let s in data_schedules[characters[c]]) {\r\n            let parsed_constraints = {\r\n              \"and\": []\r\n            }\r\n            for(let i in data_schedules[characters[c]][s][\"requires\"]) {\r\n              let parsed_constraint = this.parse_costraint(data_schedules[characters[c]][s][\"requires\"][i]);\r\n              if(parsed_constraint !== false) {\r\n                if(Array.isArray(parsed_constraint)) {\r\n                  parsed_constraints[\"or\"] = parsed_constraint;\r\n                }\r\n                else {\r\n                  parsed_constraints[\"and\"].push(parsed_constraint);\r\n                }\r\n              }\r\n            }\r\n            \r\n            let season = null;\r\n            let weather = null;\r\n            let days_of_the_week = [];\r\n            let extra_conditions = [];\r\n            let extra_conditions_string = \"\";\r\n\r\n            if(parsed_constraints[\"and\"] !== undefined) {\r\n              for(let i in parsed_constraints[\"and\"]) {\r\n                // Day, Season, Weather\r\n                if(parsed_constraints[\"and\"][i][\"parameter_one\"] !== undefined) {\r\n                  if(parsed_constraints[\"and\"][i][\"parameter_one\"] === \"day_of_the_week\") {\r\n                    days_of_the_week.push(parsed_constraints[\"and\"][i][\"parameter_two\"]);\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"parameter_one\"] === \"weather\") {\r\n                    weather = parsed_constraints[\"and\"][i][\"parameter_two\"];\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"parameter_one\"] === \"season\") {\r\n                    season = parsed_constraints[\"and\"][i][\"parameter_two\"];\r\n                  }\r\n                }\r\n                // Counters, Quests, Festivals\r\n                else {\r\n                  if(parsed_constraints[\"and\"][i][\"counter\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"and\"][i];\r\n                    let condition_string = \"counter(\" + condition[\"counter\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"counter\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"quest\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"and\"][i];\r\n                    let condition_string = \"quest(\" + condition[\"quest\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"quest\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"festival_date\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"and\"][i];\r\n                    let condition_string = \"festival(\" + condition[\"festival_date\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"festival_date\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if(parsed_constraints[\"or\"] !== undefined) {\r\n              for(let i in parsed_constraints[\"or\"]) {\r\n                if(parsed_constraints[\"or\"][i][\"parameter_one\"] === \"day_of_the_week\") {\r\n                  days_of_the_week.push(parsed_constraints[\"or\"][i][\"parameter_two\"]);\r\n                }\r\n                else {\r\n                  // Add to extra conditions.\r\n                  if(parsed_constraints[\"or\"][i][\"counter\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"or\"][i];\r\n                    let condition_string = \"counter(\" + condition[\"counter\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"counter\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"or\"][i][\"quest\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"or\"][i];\r\n                    let condition_string = \"quest(\" + condition[\"quest\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"quest\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"or\"][i][\"festival_date\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"or\"][i];\r\n                    let condition_string = \"festival(\" + condition[\"festival_date\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"festival_date\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if(weather === \"snowy\") {\r\n                extra_conditions.push(\"season EQUAL winter\");\r\n            }\r\n\r\n            // Format the extra conditions.\r\n            for(let i in extra_conditions) {\r\n              if(i < extra_conditions.length - 1) {\r\n                extra_conditions_string += extra_conditions[i] + \".\\n\"\r\n              }\r\n              else {\r\n                extra_conditions_string += extra_conditions[i] + \".\";\r\n              }\r\n            }\r\n\r\n            if(season === null || season === undefined) {\r\n              if(weather !== \"rainy\") {\r\n                season = \"spring\";\r\n              }\r\n              else {\r\n                season = \"rainy\";\r\n              }\r\n            }\r\n            if(this.schedules_dict[characters[c]][season] === undefined) {\r\n              if(season !== \"rainy\") {\r\n                this.schedules_dict[characters[c]][season] = {}; // keys are days of week that map to lists of objects (itinerary+extra_conditions)\r\n              }\r\n              else {\r\n                this.schedules_dict[characters[c]][season] = []; // lists of objects (itinerary+extra_conditions)\r\n              }\r\n            }\r\n            \r\n            if(weather !== \"rainy\" && weather !== \"snowy\") {\r\n              for(let i in days_of_the_week) {\r\n                if(this.schedules_dict[characters[c]][season][days_of_the_week[i]] === undefined) {\r\n                  this.schedules_dict[characters[c]][season][days_of_the_week[i]] = [];\r\n                }\r\n\r\n                this.schedules_dict[characters[c]][season][days_of_the_week[i]].push({\r\n                  \"itinerary\": this.parse_itinerary(data_schedules[characters[c]][s][\"itinerary\"]), // Put the parsed itinerary here.\r\n                  \"extra_conditions\": extra_conditions_string\r\n                });\r\n              }\r\n            }\r\n            else {\r\n              this.schedules_dict[characters[c]][\"rainy\"].push({\r\n                \"itinerary\": this.parse_itinerary(data_schedules[characters[c]][s][\"itinerary\"]), // Put the parsed itinerary here.\r\n                \"extra_conditions\": extra_conditions_string\r\n              })\r\n            }\r\n          }\r\n        }\r\n\r\n        // Duplicate everyone's (except market day vendors and unimplemented characters) Friday schedule.\r\n        let ignore_these_characters = [\"caldarus\", \"darcy\", \"dozy\", \"henrietta\", \"louis\", \"merri\", \"seridia\", \"stillwell\", \"taliferro\", \"vera\", \"wheedle\", \"zorel\"];\r\n        for(let character_name in this.schedules_dict) {\r\n          if(!ignore_these_characters.includes(character_name)) {\r\n            for(let i in this.seasons) {\r\n              let season = this.seasons[i].toLowerCase();\r\n              if(season !== \"rainy\" && season !== \"spring\") {\r\n                if(this.schedules_dict[character_name][season][\"friday\"] === undefined) {\r\n                  this.schedules_dict[character_name][season][\"friday\"] = this.schedules_dict[character_name][\"spring\"][\"friday\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Done loading t2_output.\r\n        this.schedules = this.schedules_dict;\r\n        this.loading_t2_output = false;\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.load_manifest();\r\n      let local_storage_loaded = this.load_from_local_storage(this.version_loaded);\r\n      if(!local_storage_loaded) {\r\n        this.load_data(this.version_loaded);\r\n      }\r\n      else {\r\n        this.loading_fiddle = false;\r\n        this.loading_t2_output = false;\r\n      }\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1e419242\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport Vuetify from 'vuetify/lib/framework';\r\n\r\nVue.use(Vuetify);\r\n\r\nexport default new Vuetify({\r\n    theme: { dark: true },\r\n});\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  vuetify,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblah\"] = self[\"webpackChunkblah\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(482); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["attrs","_c","key","version","on","staticClass","staticStyle","isLoading","_vm","model","callback","$$v","selected_tab","expression","tabs","tab","artifacts","artifact_search","scopedSlots","fn","options","updateOptions","bug_headers","pagination","bug_search","cooking_search","fish_headers","fish_search","forage_headers","forage_search","crops_search","schedules","undefined","character_panel","characters","assets_base_url","value","season","x","_s","schedule_headers","schedule_search","day_panel","days","day","y","_e","staticRenderFns","name","data","cache_id","lastLoadingPause","Date","now","loading_fiddle","loading_t2_output","versions","version_loaded","cache","artifact_headers","text","bugs","cooking_headers","cooking","crops_headers","crops","fish","forage","season_panel","seasons","methods","load_manifest","console","log","manifest","load_file","load_from_local_storage","localStorage","getItem","local_cache_id","version_cache","JSON","parse","removeItem","save_to_local_storage","setItem","stringify","pauseLoading","Promise","r","setTimeout","loadingPauseCheck","url","request","XMLHttpRequest","open","send","responseText","clear_data","artifacts_dict","bugs_dict","cooking_dict","crops_dict","forage_dict","schedules_dict","load_data","local_storage_loaded","parse_localization","parse_fiddle","parse_t2_output","convert_time","time","toString","match","length","slice","join","pad","num","size","parse_hours_range","hours_array","start_time","end_time","json","localizations_eng","find_localization_string","pattern","l","_version","data_artifacts","data_bugs","data_dungeons","data_fish","data_fishing","items_other_artifacts","items_other_bugs","items_other_crops_and_forage","items_fish","items_mines","items_other_cooked_dishes","data_letters","data_misc","data_museum_wings","object_prototypes","data_quests","data_stores","data_wishing_well","data_chicken_statue","data_restoration","data_forageables","mines_location","m","includes","push","fish_location","f","i","Array","isArray","artifact_location_lookup_dict","location","artifact","node","drop","set","item","item_name","object_to_biome_dict","biome","biome_name","ore","o","a","s","source","b","c","store_name","stock_item","recipe_name","rarity","localization_string","localization_string_regex","q","quest_name","recipe","crop_name","restoration_name","t","parse_costraint","constraint","priority_value","parameter_one","parameter_two","comparator","toUpperCase","indexOf","replace","compound_constraint","parse_itinerary","itinerary","parsed_itinerary","original_clock_time","toISOString","substring","hours","Number","split","minutes","seconds","Math","floor","modified_clock_time","data_schedules","parsed_constraints","parsed_constraint","weather","days_of_the_week","extra_conditions","extra_conditions_string","condition","condition_string","ignore_these_characters","character_name","toLowerCase","mounted","component","render","Vue","use","Vuetify","theme","dark","config","productionTip","vuetify","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}