{"version":3,"file":"js/app.126be62d.js","mappings":"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","sources":["webpack://blah/./src/App.vue","webpack://blah/src/App.vue","webpack://blah/./src/App.vue?b495","webpack://blah/./src/App.vue?0e40","webpack://blah/./src/plugins/vuetify.js","webpack://blah/./src/main.js","webpack://blah/webpack/bootstrap","webpack://blah/webpack/runtime/chunk loaded","webpack://blah/webpack/runtime/compat get default export","webpack://blah/webpack/runtime/define property getters","webpack://blah/webpack/runtime/global","webpack://blah/webpack/runtime/hasOwnProperty shorthand","webpack://blah/webpack/runtime/make namespace object","webpack://blah/webpack/runtime/jsonp chunk loading","webpack://blah/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{staticStyle:{\"background-image\":\"url('https://raw.githubusercontent.com/AnnaNomoly/aldarian-archive/refs/heads/assets/public/bg_dark.png')\",\"height\":\"100%\",\"background-position\":\"center\",\"background-repeat\":\"no-repeat\",\"background-size\":\"cover\"}},[_c('v-app-bar',{attrs:{\"collapse\":true,\"dense\":\"\",\"app\":\"\",\"color\":\"dark-grey\",\"dark\":\"\"}},[_c('span',[_vm._v(_vm._s(_vm.version_loaded))]),_c('v-menu',{attrs:{\"bottom\":\"\",\"right\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({attrs:{\"icon\":\"\",\"color\":\"light-green\"}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-dots-vertical\")])],1)]}}])},[_c('v-list',_vm._l((_vm.versions),function(version){return _c('v-list-item',{key:version,on:{\"click\":function($event){return _vm.load_data(version)}}},[_c('v-list-item-title',[_vm._v(_vm._s(version))])],1)}),1)],1)],1),_c('v-main',[_c('v-container',[_c('div',{staticClass:\"d-flex justify-space-around\"},[_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'title_logo.png',\"max-height\":\"150\",\"max-width\":\"250\"}})],1),_c('br'),_c('v-card',{staticStyle:{\"opacity\":\"0.90\"}},[(_vm.isLoading())?_c('v-progress-linear',{attrs:{\"indeterminate\":\"\",\"color\":\"yellow darken-2\"}}):_vm._e(),_c('v-tabs',{attrs:{\"background-color\":\"blue-grey darken-4\",\"center-active\":\"\",\"dark\":\"\"},model:{value:(_vm.selected_tab),callback:function ($$v) {_vm.selected_tab=$$v},expression:\"selected_tab\"}},_vm._l((_vm.tabs),function(tab){return _c('v-tab',{key:tab},[_vm._v(\" \"+_vm._s(tab)+\" \")])}),1),_c('v-tabs-items',{attrs:{\"theme--dark\":\"\"},model:{value:(_vm.selected_tab),callback:function ($$v) {_vm.selected_tab=$$v},expression:\"selected_tab\"}},_vm._l((_vm.tabs),function(tab){return _c('v-tab-item',{key:tab},[_c('div',{staticStyle:{\"overflow-y\":\"auto\"}},[(tab == 'Artifacts')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.artifact_search),callback:function ($$v) {_vm.artifact_search=$$v},expression:\"artifact_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.artifact_headers,\"items\":_vm.artifacts,\"search\":_vm.artifact_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Bugs')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.bug_search),callback:function ($$v) {_vm.bug_search=$$v},expression:\"bug_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.bug_headers,\"items\":_vm.bugs,\"search\":_vm.bug_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Cooking')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.cooking_search),callback:function ($$v) {_vm.cooking_search=$$v},expression:\"cooking_search\"}})],1),_c('v-data-table',{staticClass:\"text-pre-wrap\",attrs:{\"dense\":\"\",\"headers\":_vm.cooking_headers,\"items\":_vm.cooking,\"search\":_vm.cooking_search,\"sort-by\":['name'],\"items-per-page\":10,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Fish')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.fish_search),callback:function ($$v) {_vm.fish_search=$$v},expression:\"fish_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.fish_headers,\"items\":_vm.fish,\"search\":_vm.fish_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Forage')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.forage_search),callback:function ($$v) {_vm.forage_search=$$v},expression:\"forage_search\"}})],1),_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.forage_headers,\"items\":_vm.forage,\"search\":_vm.forage_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Harvest')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.crops_search),callback:function ($$v) {_vm.crops_search=$$v},expression:\"crops_search\"}})],1),_c('v-data-table',{staticClass:\"text-pre-wrap\",attrs:{\"dense\":\"\",\"headers\":_vm.crops_headers,\"items\":_vm.crops,\"search\":_vm.crops_search,\"sort-by\":['name'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}})],1):_vm._e(),(tab == 'Schedules')?_c('v-card',{staticStyle:{\"opacity\":\"0.85\",\"overflow-y\":\"auto\",\"max-height\":\"80vh\"},attrs:{\"dark\":\"\"}},[(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-expansion-panels',{model:{value:(_vm.character_panel),callback:function ($$v) {_vm.character_panel=$$v},expression:\"character_panel\"}},_vm._l((_vm.characters),function(character_name){return _c('v-expansion-panel',{key:character_name},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/npc/spr_ui_generic_icon_npc_' + character_name.toLowerCase() + '_0.png',\"max-height\":\"20\",\"max-width\":\"24\"}}),_vm._v(\"   \"+_vm._s(character_name)+\" \")],1),_c('v-expansion-panel-content',[(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-expansion-panels',{model:{value:(_vm.season_panel),callback:function ($$v) {_vm.season_panel=$$v},expression:\"season_panel\"}},_vm._l((_vm.seasons),function(season){return _c('v-expansion-panel',{key:season},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[(season == 'Rainy')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/weather/spr_ui_hud_info_backplate_weather_icon_rainy_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Spring')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_spring_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Summer')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_summer_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Fall')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_autumn_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),(season == 'Winter')?_c('v-img',{attrs:{\"src\":_vm.assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_winter_0.png',\"max-height\":\"20\",\"max-width\":\"20\"}}):_vm._e(),_vm._v(\"   \"+_vm._s(season)+\" \")],1),_c('v-expansion-panel-content',[(season == 'Rainy')?_c('div',_vm._l((_vm.schedules[character_name.toLowerCase()][season.toLowerCase()]),function(x){return _c('div',{key:x},[(x['extra_conditions'] !== '')?_c('span',[_vm._v(\" Extra Conditions: \"),_c('br'),_c('span',{staticClass:\"text-pre-wrap\"},[_vm._v(_vm._s(x[\"extra_conditions\"]))])]):_vm._e(),(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.schedule_headers,\"items\":x['itinerary'],\"search\":_vm.schedule_search,\"sort-by\":['time'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}}):_vm._e()],1)}),0):_c('div',[(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-expansion-panels',{model:{value:(_vm.day_panel),callback:function ($$v) {_vm.day_panel=$$v},expression:\"day_panel\"}},_vm._l((_vm.days),function(day){return _c('v-expansion-panel',{key:day},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[_vm._v(\" \"+_vm._s(day)+\" \")]),_c('v-expansion-panel-content',_vm._l((_vm.schedules[character_name.toLowerCase()][season.toLowerCase()][day.toLocaleLowerCase()]),function(y){return _c('div',{key:y},[(y['extra_conditions'] !== '')?_c('span',[_vm._v(\" Extra Conditions: \"),_c('br'),_c('span',{staticClass:\"text-pre-wrap\"},[_vm._v(_vm._s(y[\"extra_conditions\"]))])]):_vm._e(),(_vm.schedules !== undefined && _vm.schedules.length !== 0)?_c('v-data-table',{attrs:{\"dense\":\"\",\"headers\":_vm.schedule_headers,\"items\":y['itinerary'],\"search\":_vm.schedule_search,\"sort-by\":['time'],\"items-per-page\":25,\"footer-props\":{'items-per-page-options': [10, 15, 20, 25, -1]}}}):_vm._e()],1)}),0)],1)}),1):_vm._e()],1)])],1)}),1):_vm._e()],1)],1)}),1):_vm._e()],1):_vm._e()],1)])}),1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-app style=\r\n      \"background-image: url('https://raw.githubusercontent.com/AnnaNomoly/aldarian-archive/refs/heads/assets/public/bg_dark.png');\r\n      height: 100%;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\"\r\n    >\r\n    <v-app-bar\r\n      :collapse=true\r\n      dense\r\n      app\r\n      color=\"dark-grey\"\r\n      dark\r\n    >\r\n      <span>{{version_loaded}}</span>\r\n      <v-menu\r\n        bottom\r\n        right\r\n      >\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n          <v-btn\r\n            icon\r\n            color=\"light-green\"\r\n            v-bind=\"attrs\"\r\n            v-on=\"on\"\r\n          >\r\n            <v-icon>mdi-dots-vertical</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <v-list>\r\n          <v-list-item v-for=\"version in versions\" :key=\"version\" @click=\"load_data(version)\">\r\n            <v-list-item-title>{{ version }}</v-list-item-title>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-menu>\r\n\r\n    </v-app-bar>\r\n\r\n    <v-main>\r\n      <v-container>\r\n        <div class=\"d-flex justify-space-around\">\r\n          <v-img :src=\"assets_base_url + 'title_logo.png'\" max-height=\"150\" max-width=\"250\"></v-img>\r\n          <!--<h1 class=\"text-h2 font-weight-bold\">Aldarian Archive</h1>-->\r\n        </div>\r\n        <br />\r\n\r\n        <v-card style=\"opacity: 0.90\" >\r\n          <v-progress-linear v-if=\"isLoading()\" indeterminate color=\"yellow darken-2\"></v-progress-linear>\r\n          <v-tabs v-model=\"selected_tab\" background-color=\"blue-grey darken-4\" center-active dark>\r\n            <v-tab v-for=\"tab in tabs\" :key=\"tab\">\r\n              {{ tab }}\r\n            </v-tab>\r\n          </v-tabs>\r\n\r\n          <v-tabs-items theme--dark v-model=\"selected_tab\">\r\n            <v-tab-item v-for=\"tab in tabs\" :key=\"tab\">\r\n              <div style=\"overflow-y: auto;\">\r\n                <!-- Artifacts -->\r\n                <v-card v-if=\"tab == 'Artifacts'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"artifact_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense :headers=\"artifact_headers\" :items=\"artifacts\" :search=\"artifact_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Bugs -->\r\n                <v-card v-if=\"tab == 'Bugs'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"bug_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense :headers=\"bug_headers\" :items=\"bugs\" :search=\"bug_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Cooking -->\r\n                <v-card v-if=\"tab == 'Cooking'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"cooking_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense class=\"text-pre-wrap\" :headers=\"cooking_headers\" :items=\"cooking\" :search=\"cooking_search\" :sort-by=\"['name']\" :items-per-page=\"10\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Fish -->\r\n                <v-card v-if=\"tab == 'Fish'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"fish_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                <v-data-table dense :headers=\"fish_headers\" :items=\"fish\" :search=\"fish_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Forage -->\r\n                <v-card v-if=\"tab == 'Forage'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"forage_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                <v-data-table dense :headers=\"forage_headers\" :items=\"forage\" :search=\"forage_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Harvest -->\r\n                <v-card v-if=\"tab == 'Harvest'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <v-card-title>\r\n                    <v-text-field v-model=\"crops_search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />\r\n                  </v-card-title>\r\n                  <v-data-table dense class=\"text-pre-wrap\" :headers=\"crops_headers\" :items=\"crops\" :search=\"crops_search\" :sort-by=\"['name']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                </v-card>\r\n                <!-- Schedules -->\r\n                <v-card v-if=\"tab == 'Schedules'\" dark style=\"opacity: 0.85; overflow-y: auto; max-height: 80vh\">\r\n                  <!-- Characters -->\r\n                  <v-expansion-panels v-if=\"schedules !== undefined && schedules.length !== 0\" v-model=\"character_panel\">\r\n                    <v-expansion-panel v-for=\"character_name in characters\" :key=\"character_name\">\r\n                      <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n                        <v-img :src=\"assets_base_url + 'sprites/icons/npc/spr_ui_generic_icon_npc_' + character_name.toLowerCase() + '_0.png'\" max-height=\"20\" max-width=\"24\" />\r\n                        &nbsp; {{ character_name }}\r\n                      </v-expansion-panel-header>\r\n                      <v-expansion-panel-content>\r\n                        <!-- Seasons -->\r\n                        <v-expansion-panels v-if=\"schedules !== undefined && schedules.length !== 0\" v-model=\"season_panel\">\r\n                          <v-expansion-panel v-for=\"season in seasons\" :key=\"season\">\r\n                            <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n                              <v-img v-if=\"season == 'Rainy'\" :src=\"assets_base_url + 'sprites/icons/weather/spr_ui_hud_info_backplate_weather_icon_rainy_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Spring'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_spring_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Summer'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_summer_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Fall'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_autumn_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              <v-img v-if=\"season == 'Winter'\" :src=\"assets_base_url + 'sprites/icons/season/spr_ui_hud_info_backplate_season_icon_winter_0.png'\" max-height=\"20\" max-width=\"20\" />\r\n                              &nbsp; {{ season }}\r\n                            </v-expansion-panel-header>\r\n                            <v-expansion-panel-content>\r\n                              <!-- Days -->\r\n                              <div v-if=\"season == 'Rainy'\">\r\n                                <!-- Rainy Day -->\r\n                                <div v-for=\"x in schedules[character_name.toLowerCase()][season.toLowerCase()]\" :key=\"x\">\r\n                                  <span v-if=\"x['extra_conditions'] !== ''\">\r\n                                    Extra Conditions: <br />\r\n                                    <span class=\"text-pre-wrap\">{{ x[\"extra_conditions\"] }}</span>\r\n                                  </span>\r\n                                  <v-data-table v-if=\"schedules !== undefined && schedules.length !== 0\" dense :headers=\"schedule_headers\" :items=\"x['itinerary']\" :search=\"schedule_search\" :sort-by=\"['time']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                                </div>\r\n                              </div>\r\n                              <div v-else>\r\n                                <!-- Standard Days -->\r\n                                <v-expansion-panels v-if=\"schedules !== undefined && schedules.length !== 0\" v-model=\"day_panel\">\r\n                                  <v-expansion-panel v-for=\"day in days\" :key=\"day\">\r\n                                    <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n                                      {{ day }}\r\n                                    </v-expansion-panel-header>\r\n                                    <v-expansion-panel-content>\r\n                                      <div v-for=\"y in schedules[character_name.toLowerCase()][season.toLowerCase()][day.toLocaleLowerCase()]\" :key=\"y\">\r\n                                        <span v-if=\"y['extra_conditions'] !== ''\">\r\n                                          Extra Conditions: <br />\r\n                                          <span class=\"text-pre-wrap\">{{ y[\"extra_conditions\"] }}</span>\r\n                                        </span>\r\n                                        <v-data-table v-if=\"schedules !== undefined && schedules.length !== 0\" dense :headers=\"schedule_headers\" :items=\"y['itinerary']\" :search=\"schedule_search\" :sort-by=\"['time']\" :items-per-page=\"25\" :footer-props=\"{'items-per-page-options': [10, 15, 20, 25, -1]}\"></v-data-table>\r\n                                      </div>\r\n                                    </v-expansion-panel-content>\r\n                                  </v-expansion-panel>\r\n                                </v-expansion-panels>\r\n                              </div>\r\n                            </v-expansion-panel-content>\r\n                          </v-expansion-panel>\r\n                        </v-expansion-panels>\r\n                      </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                  </v-expansion-panels>\r\n                </v-card>\r\n              </div>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-card>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n\r\n  data: () => ({\r\n      assets_base_url: \"https://raw.githubusercontent.com/AnnaNomoly/aldarian-archive/refs/heads/assets/public/\",\r\n      cache_id: \"234c9e05-f0a5-4fb4-bba0-1397abfb9dfd\",\r\n      lastLoadingPause: Date.now(),\r\n      loading_fiddle: true,\r\n      loading_t2_output: true,\r\n      versions: [],\r\n      version_loaded: \"\",\r\n      cache: {}, // Local Storage\r\n      selected_tab: null,\r\n      tabs: [\r\n        \"Artifacts\",\r\n        //\"Blacksmithing\",\r\n        \"Bugs\",\r\n        \"Cooking\",\r\n        //\"Crafting\",\r\n        \"Fish\",\r\n        \"Forage\",\r\n        \"Harvest\",\r\n        //\"Locations\",\r\n        //\"NPCs\",\r\n        //\"Quests\",\r\n        \"Schedules\"\r\n      ],\r\n\r\n      // fish_panels: [\r\n      //   \"Misc\",\r\n      //   \"Ocean\",\r\n      //   \"Pond\",\r\n      //   \"River\"\r\n      // ],\r\n\r\n      // Artifacts\r\n      artifact_search: \"\",\r\n      artifact_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Location\", value: \"location\" },\r\n        { text: \"Sources\", value: \"sources\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n        { text: \"Renown\", value: \"renown\" },\r\n      ],\r\n      artifacts: [],\r\n\r\n      // Bugs\r\n      bug_search: \"\",\r\n      bug_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Type\", value: \"type\" },\r\n        { text: \"Locations\", value: \"locations\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Hours\", value: \"hours\" },\r\n        { text: \"Weather\", value: \"weather\" },\r\n        { text: \"Hiding Spots\", value: \"liked_object_categories\" },\r\n        { text: \"Spawn\", value: \"spawn\" },\r\n        { text: \"Attraction\", value: \"attraction\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n      ],\r\n      bugs: [],\r\n\r\n      // Characters\r\n      characters: [\"Adeline\",\"Balor\",\"Celine\",\"Darcy\",\"Dell\",\"Eiland\",\"Elsie\",\"Errol\",\"Hayden\",\"Hemlock\",\"Holt\",\"Juniper\",\"Josephine\",\"Landen\",\"Louis\",\"Luc\",\"Maple\",\"March\",\"Merri\",\"Nora\",\"Olric\",\"Reina\",\"Ryis\",\"Terithia\",\"Valen\",\"Vera\"],\r\n      character_panel: null,\r\n\r\n      // Cooking\r\n      cooking_search: \"\",\r\n      cooking_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Stars\", value: \"stars\" },\r\n        { text: \"Cooking Lv\", value: \"crafting_level_requirement\" },\r\n        { text: \"Kitchen Lv\", value: \"kitchen_tier_requirement\" },\r\n        { text: \"Obtained By\", value: \"obtained_by\" },\r\n        { text: \"Obtained From\", value: \"obtained_from\" },\r\n        { text: \"Price\", value: \"recipe_price\" },\r\n        { text: \"Recipe\", value: \"recipe\" },\r\n        { text: \"Time\", value: \"time\" },\r\n      ],\r\n      cooking: [],\r\n\r\n      // Crops\r\n      crops_search: \"\",\r\n      crops_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Season\", value: \"seasons\" },\r\n        { text: \"Growth Time\", value: \"growth_time\" },\r\n        { text: \"Regrowth Time\", value: \"growth_time\" },\r\n        { text: \"Restoration\", value: \"restore\" },\r\n        { text: \"Sell Price\", value: \"sell_price\" },\r\n        { text: \"Purchase Price\", value: \"purchase_price\" },\r\n        { text: \"Seed\", value: \"seed_name\" },\r\n        { text: \"Seed Price\", value: \"seed_price\" },\r\n      ],\r\n      crops: [],\r\n\r\n      // Fish\r\n      fish_search: \"\",\r\n      fish_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Locations\", value: \"locations\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Weather\", value: \"weather\" },\r\n        { text: \"Diving\", value: \"diving\" },\r\n        { text: \"Size\", value: \"size\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Sell Price\", value: \"value\" },\r\n      ],\r\n      fish: [],\r\n\r\n      // Forage\r\n      forage_search: \"\",\r\n      forage_headers: [\r\n        { text: \"Name\", value: \"name\" },\r\n        { text: \"Seasons\", value: \"seasons\" },\r\n        { text: \"Rarity\", value: \"rarity\" },\r\n        { text: \"Source (Bush/Tree)\", value: \"source\" },\r\n        { text: \"Restoration\", value: \"restore\" },\r\n        { text: \"Sell Price\", value: \"sell_price\" },\r\n        { text: \"Purchase Price\", value: \"purchase_price\" },\r\n      ],\r\n      forage: [],\r\n\r\n      // Schedules\r\n      day_panel: null,\r\n      season_panel: null,\r\n      seasons: [\"Rainy\", \"Spring\", \"Summer\", \"Fall\", \"Winter\"],\r\n      days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n      schedules: {},\r\n      schedule_search: \"\",\r\n      schedule_headers: [\r\n        { text: \"Departure Time\", value: \"time\" },\r\n        { text: \"Destination (Location)\", value: \"destination_location\" },\r\n        { text: \"Destination (Point)\", value: \"destination_point\" },\r\n      ],\r\n    }),\r\n\r\n    methods: {\r\n      load_manifest: function() {\r\n        console.log(\"Loading manifest...\");\r\n        let manifest = this.load_file(this.assets_base_url + \"data/manifest.json\");\r\n        this.version_loaded = manifest[\"current\"];\r\n        this.versions = manifest[\"versions\"];\r\n        console.log(manifest);\r\n      },\r\n\r\n      load_from_local_storage: function(version) {\r\n        if(localStorage.getItem(\"cache_id\") !== null && localStorage.getItem(\"cache_id\") !== undefined) {\r\n          let local_cache_id = localStorage.getItem(\"cache_id\");\r\n          if(this.cache_id === local_cache_id) {\r\n            if(localStorage.getItem(version) !== null && localStorage.getItem(version) !== undefined) {\r\n              console.log(\"Loading Local Storage: \" + version);\r\n              let version_cache = JSON.parse(localStorage.getItem(version));\r\n              this.artifacts = version_cache[\"artifacts\"];\r\n              this.bugs = version_cache[\"bugs\"];\r\n              this.cooking = version_cache[\"cooking\"];\r\n              this.crops = version_cache[\"crops\"];\r\n              this.fish = version_cache[\"fish\"];\r\n              this.forage = version_cache[\"forage\"];\r\n              // this.localizations_eng = version_cache[\"localizations_eng\"];\r\n              this.schedules = version_cache[\"schedules\"];\r\n              return true;\r\n            }\r\n          }\r\n          else {\r\n            localStorage.removeItem(\"cache_id\");\r\n            localStorage.removeItem(version);\r\n            console.log(\"The cache was built by an outdated app version!\");\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      save_to_local_storage: function(version) {\r\n        localStorage.setItem(\"cache_id\", this.cache_id);\r\n        localStorage.setItem(version, JSON.stringify({\r\n          \"artifacts\": this.artifacts,\r\n          \"bugs\": this.bugs,\r\n          \"cooking\": this.cooking,\r\n          \"crops\": this.crops,\r\n          \"fish\": this.fish,\r\n          \"forage\": this.forage,\r\n          // \"localizations_eng\": this.localizations_eng,\r\n          \"schedules\": this.schedules\r\n        }));\r\n      },\r\n\r\n      isLoading: function() {\r\n        return this.loading_fiddle || this.loading_t2_output;\r\n      },\r\n\r\n      pauseLoading: function() {\r\n        return new Promise(r => setTimeout(r));\r\n      },\r\n\r\n      loadingPauseCheck: async function() {\r\n        if(Date.now() - 30 > this.lastLoadingPause) {\r\n          this.lastLoadingPause = Date.now();\r\n          await this.pauseLoading();\r\n        }\r\n      },\r\n\r\n      load_file: function(url) {\r\n        var request = new XMLHttpRequest();\r\n        request.open(\"GET\", url, false);\r\n        request.send(null)\r\n        return JSON.parse(request.responseText);\r\n      },\r\n\r\n      clear_data: function() {\r\n        this.artifacts = [];\r\n        this.artifacts_dict = {};\r\n        this.bugs = [];\r\n        this.bugs_dict = {};\r\n        this.cooking = [];\r\n        this.cooking_dict = {};\r\n        this.crops = [];\r\n        this.crops_dict = {};\r\n        this.fish = [];\r\n        this.forage = [];\r\n        this.forage_dict = {};\r\n        this.schedules = [];\r\n        this.schedules_dict = {};\r\n      },\r\n\r\n      load_data: function(version) {\r\n        console.log(\"Loading Raw Data: \" + version);\r\n\r\n        this.clear_data();\r\n        this.loading_fiddle = true;\r\n        this.loading_t2_output = true;\r\n        this.version_loaded = version;\r\n\r\n        let local_storage_loaded = this.load_from_local_storage(this.version_loaded);\r\n        if(local_storage_loaded === true) {\r\n          console.log(\"Successfully loaded from Local Storage!\");\r\n          this.loading_fiddle = false;\r\n          this.loading_t2_output = false;\r\n        }\r\n        else {\r\n          this.parse_localization(this.load_file(this.assets_base_url + \"data/\" + version + \"/localization.json\"));\r\n          this.parse_fiddle(this.load_file(this.assets_base_url + \"data/\" + version + \"/fiddle.json\"));\r\n          this.parse_t2_output(this.load_file(this.assets_base_url + \"data/\" + version + \"/t2_output.json\"));\r\n        }\r\n      },\r\n\r\n      convert_time: function(time) {\r\n        // Check correct time format and split into components\r\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) { // If time format correct\r\n          time = time.slice (1);  // Remove full string match value\r\n          time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n          time[0] = +time[0] % 12 || 12; // Adjust hours\r\n        }\r\n        return time.join (''); // return adjusted time or original string\r\n      },\r\n\r\n      pad: function(num, size) {\r\n        num = num.toString();\r\n        while (num.length < size) num = \"0\" + num;\r\n        return num;\r\n      },\r\n\r\n      /**\r\n       * \r\n       * @param hours_array Array[int] of two numbers representing a time range (hours of the day) for something.\r\n       */\r\n      parse_hours_range: function(hours_array) {\r\n        let start_time = \"6:00AM\";\r\n        if(hours_array[0] > 6 && hours_array[0] < 12) {\r\n          start_time = hours_array[0] + \":00AM\"\r\n        }\r\n        else if(hours_array[0] == 12) {\r\n          start_time = hours_array[0] + \":00PM\"\r\n        }\r\n        else if(hours_array[0] > 12 && hours_array[0] < 24) {\r\n          start_time = (hours_array[0] - 12) + \":00PM\"\r\n        }\r\n        else if(hours_array[0] == 24) {\r\n          start_time = hours_array[0] + \":00AM\"\r\n        }\r\n        else if(hours_array[0] > 24) {\r\n          start_time = (hours_array[0] - 24) + \":00AM\"\r\n        }\r\n\r\n        let end_time = \"6:00AM\";\r\n        if(hours_array[1] > 6 && hours_array[1] < 12) {\r\n          end_time = hours_array[1] + \":00AM\"\r\n        }\r\n        else if(hours_array[1] == 12) {\r\n          end_time = hours_array[1] + \":00PM\"\r\n        }\r\n        else if(hours_array[1] > 12 && hours_array[1] < 24) {\r\n          end_time = (hours_array[1] - 12) + \":00PM\"\r\n        }\r\n        else if(hours_array[1] == 24) {\r\n          end_time = hours_array[1] + \":00AM\"\r\n        }\r\n        else if(hours_array[1] > 24) {\r\n          end_time = (hours_array[1] - 24) + \":00AM\"\r\n        }\r\n        \r\n        return start_time + \" to \" + end_time;\r\n      },\r\n\r\n      parse_localization: function(json) {\r\n        this.localizations_eng = json[\"eng\"];\r\n      },\r\n\r\n      find_localization_string: function(pattern) {\r\n        for(let l in this.localizations_eng) {\r\n          if(l.match(pattern)) {\r\n            return l;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      parse_fiddle: async function(json) {\r\n        let _version = \"\" + this.version_loaded;\r\n\r\n        // Artifact Data\r\n        var data_artifacts = json[\"artifacts\"];\r\n\r\n        // Bugs Data\r\n        var data_bugs = json[\"bugs\"];\r\n\r\n        // Dungeons Data\r\n        var data_dungeons = json[\"dungeons\"]\r\n\r\n        // Fish Data\r\n        var data_fish = json[\"fish\"];\r\n        var data_fishing = json[\"fishing\"];\r\n\r\n        // Items Data\r\n        var items_other_artifacts = json[\"items\"][\"other\"][\"artifacts\"];\r\n        var items_other_bugs = json[\"items\"][\"other\"][\"bugs\"];\r\n        var items_other_crops_and_forage = json[\"items\"][\"other\"][\"crops_and_forage\"];\r\n        var items_fish = json[\"items\"][\"fish\"];\r\n        var items_mines = json[\"items\"][\"mines\"];\r\n        var items_other_cooked_dishes = json[\"items\"][\"other\"][\"cooked_dishes\"];\r\n\r\n        // Letters Data\r\n        var data_letters = json[\"letters\"];\r\n\r\n        // Misc Data\r\n        var data_misc = json[\"misc\"];\r\n\r\n        // Museum Archaeology Data\r\n        var data_museum_wings = json[\"museum_wings\"];\r\n        \r\n        // Object Prototypes Data\r\n        var object_prototypes = json[\"object_prototypes\"];\r\n\r\n        // Quests Data\r\n        var data_quests = json[\"quests\"];\r\n\r\n        // Stores Data\r\n        var data_stores = json[\"stores\"];\r\n\r\n        // Wishing Well Data\r\n        var data_wishing_well = json[\"wishing_well\"];\r\n\r\n        // Chicken Statue Data\r\n        var data_chicken_statue = json[\"chicken_statue\"];\r\n\r\n        // Restoration Data\r\n        var data_restoration = json[\"restoration\"];\r\n\r\n        // Forageables Data\r\n        var data_forageables = json[\"forageables\"];\r\n\r\n        // PARSE FISH\r\n        this.fish = [];\r\n\r\n        // Extract all fish from the items/mines dictionary.\r\n        for(let mines_location in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let m in items_mines[mines_location]) {\r\n            if(items_mines[mines_location][m][\"tags\"] !== undefined) {\r\n              if(items_mines[mines_location][m][\"tags\"].includes(\"fishable\")) { \r\n                if(items_mines[mines_location][m][\"value\"] !== undefined) {\r\n                  this.fish.push({\r\n                    \"key\": m, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                    \"value\": items_mines[mines_location][m][\"value\"][\"bin\"],\r\n                    \"locations\": mines_location\r\n                  });\r\n                }\r\n                else {\r\n                  this.fish.push({\r\n                    \"key\": m, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                    \"value\": \"None\",\r\n                    \"locations\": mines_location\r\n                  });  \r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract all fish from the items/fish dictionary.\r\n        for(let fish_location in items_fish) {\r\n          await this.loadingPauseCheck();\r\n          for(let f in items_fish[fish_location]) {\r\n            if(items_fish[fish_location][f][\"tags\"] !== undefined) {\r\n              if(items_fish[fish_location][f][\"tags\"].includes(\"fishable\")) {\r\n                if(items_fish[fish_location][f][\"value\"] !== undefined) {\r\n                  this.fish.push({\r\n                    \"key\": f, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_fish[fish_location][f][\"name\"]],\r\n                    \"value\": items_fish[fish_location][f][\"value\"][\"bin\"]\r\n                  });\r\n                }\r\n                else {\r\n                  this.fish.push({\r\n                    \"key\": f, // Game internal name, don't change and use for lookup\r\n                    \"name\": this.localizations_eng[items_fish[fish_location][f][\"name\"]],\r\n                    \"value\": \"None\"\r\n                  });  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional fish data from the fish dictionary.\r\n        for(let i = 0; i < this.fish.length; i++) {\r\n          await this.loadingPauseCheck();\r\n          if(this.fish[i][\"key\"] in data_fish) {\r\n            if(data_fish[this.fish[i][\"key\"]][\"seasons\"] !== undefined) {\r\n              this.fish[i][\"seasons\"] = data_fish[this.fish[i][\"key\"]][\"seasons\"].join(\", \");\r\n            }\r\n            else {\r\n              this.fish[i][\"seasons\"] = \"spring, summer, fall, winter\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"water_type\"] !== undefined) {\r\n              if(Array.isArray(data_fish[this.fish[i][\"key\"]][\"water_type\"])) {\r\n                this.fish[i][\"locations\"] = data_fish[this.fish[i][\"key\"]][\"water_type\"].join(\", \");\r\n              }\r\n              else {\r\n                this.fish[i][\"locations\"] = data_fish[this.fish[i][\"key\"]][\"water_type\"];\r\n              }\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"size\"] !== undefined) {\r\n              this.fish[i][\"size\"] = data_fish[this.fish[i][\"key\"]][\"size\"];\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"rarity\"] !== undefined) {\r\n              this.fish[i][\"rarity\"] = data_fish[this.fish[i][\"key\"]][\"rarity\"];\r\n            }\r\n            else {\r\n              this.fish[i][\"rarity\"] = \"common\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"weather\"] !== undefined) {\r\n              if(Array.isArray(data_fish[this.fish[i][\"key\"]][\"weather\"])) {\r\n                this.fish[i][\"weather\"] = data_fish[this.fish[i][\"key\"]][\"weather\"].join(\", \");\r\n              }\r\n              else {\r\n                this.fish[i][\"weather\"] = data_fish[this.fish[i][\"key\"]][\"weather\"];\r\n              }\r\n            }\r\n            else {\r\n              this.fish[i][\"weather\"] = \"calm, special, inclement, heavy_inclement\";\r\n            }\r\n\r\n            if(data_fish[this.fish[i][\"key\"]][\"retrieval\"] !== undefined) {\r\n              if(data_fish[this.fish[i][\"key\"]][\"retrieval\"].includes(\"divespot\")) {\r\n                this.fish[i][\"diving\"] = \"yes\";\r\n              }\r\n              else {\r\n                this.fish[i][\"diving\"] = \"no\";\r\n              }\r\n            }\r\n            else {\r\n              this.fish[i][\"diving\"] = \"no\";\r\n            }\r\n\r\n          }\r\n          // It's a from a dive spot or other forage.\r\n          else {\r\n            console.log(\"This should not execute!\");\r\n          }\r\n        }\r\n\r\n        // PARSE ARTIFACTS\r\n        this.artifacts = [];\r\n        this.artifacts_dict = {}\r\n\r\n        // Create artifact location lookup.\r\n        var artifact_location_lookup_dict = {\r\n          // aldrian is in the /artifacts/location dictionary\r\n          // caldosian is in the /artifacts/location dictionary\r\n          // alda is in the /artifacts/location dictionary\r\n          // ancient is in the /artifacts/location dictionary\r\n          // prehistoric is in the /artifacts/location dictionary\r\n          \"oopart\": \"dig_spot (Well Placed Perk)\",\r\n          \"aquatic\": \"fishing (Aquatic Antiquities Perk)\",\r\n          \"sunken\": \"diving (Sunken Secrets Perk)\",\r\n          //\"dungeon\": \"mines (Any Biome)\", // Confirm this is correct\r\n          \"upper_mines_artifacts\": \"upper_mines\",\r\n          \"tide_caverns\": \"tide_caverns\",\r\n          \"deep_earth\": \"deep_earth\"\r\n        };\r\n        for(let location in data_artifacts[\"locations\"]) {\r\n          artifact_location_lookup_dict[data_artifacts[\"locations\"][location]] = location;\r\n        }\r\n        artifact_location_lookup_dict[\"mine\"] = \"mines (Any Biome)\";\r\n\r\n        // Extract all artifacts from the items/mines dictionary.\r\n        for(let mines_location in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let m in items_mines[mines_location]) {\r\n            if(items_mines[mines_location][m][\"tags\"] !== undefined) {\r\n              if(items_mines[mines_location][m][\"tags\"].includes(\"archaeology\")) {\r\n                this.artifacts_dict[m] = {\r\n                  \"key\": m,\r\n                  \"name\": this.localizations_eng[items_mines[mines_location][m][\"name\"]],\r\n                  \"location\": mines_location,\r\n                  \"value\": items_mines[mines_location][m][\"value\"][\"bin\"],\r\n                  \"renown\": items_mines[mines_location][m][\"value\"][\"renown\"]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract all artifacts from the items/other/artifacts dictionary.\r\n        for(let artifact in items_other_artifacts) {\r\n          await this.loadingPauseCheck();\r\n          if(items_other_artifacts[artifact][\"tags\"] !== undefined) {\r\n            if(items_other_artifacts[artifact][\"tags\"].includes(\"archaeology\")) {\r\n              this.artifacts_dict[artifact] = {\r\n                \"key\": artifact,\r\n                \"name\": this.localizations_eng[items_other_artifacts[artifact][\"name\"]],\r\n                \"value\": items_other_artifacts[artifact][\"value\"][\"bin\"],\r\n                \"renown\": items_other_artifacts[artifact][\"value\"][\"renown\"]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the object_prototypes/rock dictionary.\r\n        for(let node in object_prototypes[\"rock\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"rock\"][node][\"drops\"] !== undefined) {\r\n            for(let drop in object_prototypes[\"rock\"][node][\"drops\"]) {\r\n              if(this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]] !== undefined) {\r\n                if(this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"] !== undefined) {\r\n                  this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"].push(node);\r\n                }\r\n                else {\r\n                  this.artifacts_dict[object_prototypes[\"rock\"][node][\"drops\"][drop][\"item\"]][\"sources\"] = [node];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the artifacts/loot dictionary.\r\n        for(let artifact in data_artifacts[\"loot\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[artifact] !== undefined) {\r\n            this.artifacts_dict[artifact][\"rarity\"] = data_artifacts[\"loot\"][artifact];\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the museum_wings/archaeology dictionary.\r\n        for(let set in data_museum_wings[\"archaeology\"][\"sets\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let item in data_museum_wings[\"archaeology\"][\"sets\"][set][\"items\"]) {\r\n            let item_name = data_museum_wings[\"archaeology\"][\"sets\"][set][\"items\"][item];\r\n            if(this.artifacts_dict[item_name] !== undefined) {\r\n              this.artifacts_dict[item_name][\"location\"] = artifact_location_lookup_dict[set];\r\n              if(this.artifacts_dict[item_name][\"sources\"] !== undefined) {\r\n                this.artifacts_dict[item_name][\"sources\"].push(\"dig_spot\");\r\n              }\r\n              else {\r\n                this.artifacts_dict[item_name][\"sources\"] = [\"dig_spot\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract additional data from the dungeons/dungeond/biomes dictionary.\r\n        var object_to_biome_dict = {};\r\n        for(let biome in data_dungeons[\"dungeons\"][\"biomes\"]) {\r\n          await this.loadingPauseCheck();\r\n          let biome_name = data_dungeons[\"dungeons\"][\"biomes\"][biome][\"artifact_set\"];\r\n          if(biome_name === \"upper_mines_artifacts\") {\r\n            biome_name = \"upper_mines\";\r\n          }\r\n\r\n          for(let i in data_dungeons[\"dungeons\"][\"biomes\"][biome][\"votes\"][\"ore_rock\"]) {\r\n            let ore = data_dungeons[\"dungeons\"][\"biomes\"][biome][\"votes\"][\"ore_rock\"][i][\"object\"];\r\n            object_to_biome_dict[ore] = biome_name;\r\n          }          \r\n        }\r\n\r\n        // Note: Anything mapping to \"mine\" isn't obtaineable yet. Make that clear!\r\n        for(let o in object_to_biome_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(object_to_biome_dict[o] === \"mine\") {\r\n            object_to_biome_dict[o] = \"unobtainable\";\r\n          }\r\n        }\r\n\r\n        // Set location based on sources (for nodes and rocks).\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          for(let s in this.artifacts_dict[a][\"sources\"]) {\r\n            let source = this.artifacts_dict[a][\"sources\"][s];\r\n            if(object_to_biome_dict[source] !== undefined) {\r\n              this.artifacts_dict[a][\"location\"] = object_to_biome_dict[source];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Anything still without a source is unobtainable.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[a][\"sources\"] === undefined) {\r\n            this.artifacts_dict[a][\"sources\"] = ['none'];\r\n          }\r\n        }\r\n\r\n        // Anything still without a location is unobtainable.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.artifacts_dict[a][\"location\"] === undefined) {\r\n            this.artifacts_dict[a][\"location\"] = \"unobtainable\";\r\n          }\r\n        }\r\n\r\n        // Convert the artifacts dict to an array for the table.\r\n        for(let a in this.artifacts_dict) {\r\n          await this.loadingPauseCheck();\r\n          this.artifacts_dict[a][\"sources\"] = this.artifacts_dict[a][\"sources\"].join(\", \");\r\n          this.artifacts.push(this.artifacts_dict[a]);\r\n        }\r\n\r\n\r\n        // PARSE BUGS\r\n        this.bugs = [];\r\n        this.bugs_dict = {};\r\n\r\n        // Extract data from bugs dictionary\r\n        for(let b in data_bugs) {\r\n          await this.loadingPauseCheck();\r\n          if(b !== \"default\") {\r\n            this.bugs_dict[b] = {\r\n              \"key\": b, // string\r\n              \"type\": data_bugs[b][\"type\"], // string\r\n              \"seasons\": data_bugs[b][\"seasons\"], // array[string]\r\n              \"hours\": data_bugs[b][\"hours\"], // array[int]\r\n              \"weather\": data_bugs[b][\"weather\"], // array[string]\r\n              \"liked_object_categories\": data_bugs[b][\"liked_object_categories\"], // array[string]\r\n              \"rarity\": data_bugs[b][\"rarity\"], // string\r\n              \"spawn\": data_bugs[b][\"spawn\"], // array[string]\r\n              \"locations\": data_bugs[b][\"locations\"], // array[string]\r\n              \"attraction\": data_bugs[b][\"attraction\"], // string\r\n              \"has_light\": data_bugs[b][\"has_light\"], // boolean\r\n              \"dungeon_biome\": data_bugs[b][\"dungeon_biome\"], // string\r\n            };\r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/bugs dictionary.\r\n        for(let b in items_other_bugs) {\r\n          await this.loadingPauseCheck();\r\n          if(this.bugs_dict[b] === undefined) {\r\n            this.bugs_dict[b] = {\r\n              \"name\": this.localizations_eng[items_other_bugs[b][\"name\"]],\r\n              \"tags\": items_other_bugs[b][\"tags\"],\r\n              \"value\": items_other_bugs[b][\"value\"][\"bin\"]\r\n            }\r\n            // Cross-reference fish dictionary for more data\r\n            if(data_fish[b] !== undefined) {\r\n              this.bugs_dict[b][\"seasons\"] = data_fish[b][\"seasons\"];\r\n              this.bugs_dict[b][\"rarity\"] = data_fish[b][\"rarity\"];\r\n              this.bugs_dict[b][\"liked_object_categories\"] = data_fish[b][\"retrieval\"];\r\n            }\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"name\"] = this.localizations_eng[items_other_bugs[b][\"name\"]];\r\n            this.bugs_dict[b][\"tags\"] = items_other_bugs[b][\"tags\"];\r\n            this.bugs_dict[b][\"value\"] = items_other_bugs[b][\"value\"][\"bin\"];\r\n          }\r\n        }\r\n\r\n        // Extract data from items/mines\r\n        for(let l in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let x in items_mines[l]) {\r\n            if(this.bugs_dict[x] !== undefined) {\r\n              this.bugs_dict[x][\"name\"] = this.localizations_eng[items_mines[l][x][\"name\"]];\r\n              this.bugs_dict[x][\"value\"] = items_mines[l][x][\"value\"][\"bin\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Convert the bugs dict to an array for the table.\r\n        for(let b in this.bugs_dict) {\r\n          await this.loadingPauseCheck();\r\n          if(this.bugs_dict[b][\"locations\"] === undefined) {\r\n            this.bugs_dict[b][\"locations\"] = \"overworld\";\r\n          }\r\n          if(this.bugs_dict[b][\"seasons\"] !== undefined && Array.isArray(this.bugs_dict[b][\"seasons\"])) {\r\n            this.bugs_dict[b][\"seasons\"] = this.bugs_dict[b][\"seasons\"].join(\", \");\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"seasons\"] = \"spring, summer, fall, winter\";\r\n          }\r\n          if(this.bugs_dict[b][\"hours\"] !== undefined && Array.isArray(this.bugs_dict[b][\"hours\"])) {\r\n            this.bugs_dict[b][\"hours\"] = this.parse_hours_range(this.bugs_dict[b][\"hours\"]);\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"hours\"] = \"6:00AM to 2:00AM\";\r\n          }\r\n          if(this.bugs_dict[b][\"weather\"] !== undefined && Array.isArray(this.bugs_dict[b][\"weather\"])) {\r\n            this.bugs_dict[b][\"weather\"] = this.bugs_dict[b][\"weather\"].join(\", \");\r\n          }\r\n          else {\r\n            this.bugs_dict[b][\"weather\"] = \"calm, special, inclement, heavy_inclement\";\r\n          }\r\n          if(this.bugs_dict[b][\"liked_object_categories\"] !== undefined && Array.isArray(this.bugs_dict[b][\"liked_object_categories\"])) {\r\n            this.bugs_dict[b][\"liked_object_categories\"] = this.bugs_dict[b][\"liked_object_categories\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"spawn\"] !== undefined && Array.isArray(this.bugs_dict[b][\"spawn\"])) {\r\n            this.bugs_dict[b][\"spawn\"] = this.bugs_dict[b][\"spawn\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"locations\"] !== undefined && Array.isArray(this.bugs_dict[b][\"locations\"])) {\r\n            this.bugs_dict[b][\"locations\"] = this.bugs_dict[b][\"locations\"].join(\", \");\r\n          }\r\n          if(this.bugs_dict[b][\"dungeon_biome\"] !== undefined) {\r\n            if(this.bugs_dict[b][\"dungeon_biome\"] == \"upper\") {\r\n              this.bugs_dict[b][\"locations\"] = \"upper_mines\";\r\n            }\r\n            else {\r\n              this.bugs_dict[b][\"locations\"] = this.bugs_dict[b][\"dungeon_biome\"];\r\n            }\r\n            \r\n          }\r\n          this.bugs.push(this.bugs_dict[b]);\r\n        }\r\n\r\n        // COOKED DISHES\r\n        this.cooking = [];\r\n        this.cooking_dict = {};\r\n\r\n        // Extract data from the items/other/cooked_dishes dict.\r\n        for(let c in items_other_cooked_dishes) {\r\n          await this.loadingPauseCheck();\r\n          this.cooking_dict[c] = {\r\n            \"key\": c,\r\n            \"name\": this.localizations_eng[items_other_cooked_dishes[c][\"name\"]],\r\n            \"stars\": items_other_cooked_dishes[c][\"stars\"],\r\n            \"crafting_level_requirement\": items_other_cooked_dishes[c][\"crafting_level_requirement\"],\r\n            \"kitchen_tier_requirement\": items_other_cooked_dishes[c][\"kitchen_tier_requirement\"],\r\n            \"recipe\": items_other_cooked_dishes[c][\"recipe\"]\r\n            // NOTE: The value data here is the price of the actual item, NOT the recipe.\r\n          }\r\n\r\n          if(items_other_cooked_dishes[c][\"recipe_is_default\"] !== undefined && items_other_cooked_dishes[c][\"recipe_is_default\"] === true) { // You start with this recipe.\r\n            this.cooking_dict[c][\"obtained_by\"] = \"default\";\r\n            this.cooking_dict[c][\"obtained_from\"] = \"game start\";\r\n          }\r\n          else {\r\n            // Extract recipe prices from misc/cooking_recipe_star_prices\r\n            if(this.cooking_dict[c][\"stars\"] !== undefined) { // If the cooking dish has no stars it can't be purchased.\r\n              this.cooking_dict[c][\"recipe_price\"] = data_misc[\"cooking_recipe_star_prices\"][this.cooking_dict[c][\"stars\"]-1];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe purchase location from stores dict.\r\n        for(let s in data_stores) {\r\n          await this.loadingPauseCheck();\r\n          let store_name = this.localizations_eng[data_stores[s][\"name\"]];\r\n          for(let c in data_stores[s][\"categories\"]) {\r\n            // Constant Stock (so far only Terithia's shop sells constant recipes)\r\n            if(data_stores[s][\"categories\"][c][\"constant_stock\"] !== undefined) {\r\n              for(let i in data_stores[s][\"categories\"][c][\"constant_stock\"]) {\r\n                let stock_item = data_stores[s][\"categories\"][c][\"constant_stock\"][i];\r\n                if(typeof stock_item === 'object' && stock_item[\"recipe_scroll\"] !== undefined) {\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"constant_stock\"][i][\"recipe_scroll\"]\r\n                  if(this.cooking_dict[recipe_name] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            // Random Stock (inn and darcey)\r\n            if(data_stores[s][\"categories\"][c][\"random_stock\"] !== undefined) {\r\n              for(let i in data_stores[s][\"categories\"][c][\"random_stock\"]) {\r\n                let stock_item = data_stores[s][\"categories\"][c][\"random_stock\"][i];\r\n                if(typeof stock_item === 'object' && stock_item[\"item\"] !== undefined && stock_item[\"include_recipe\"] === true) { // darcy's shop\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"random_stock\"][i][\"item\"];\r\n                  if(this.cooking_dict[recipe_name] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                }\r\n                else if(typeof stock_item === 'object' && stock_item[\"recipe_scroll\"] !== undefined) { // inn\r\n                  let recipe_name = data_stores[s][\"categories\"][c][\"random_stock\"][i][\"recipe_scroll\"];\r\n                  if(stock_item[\"building_fixed\"] !== undefined) {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name;\r\n                  }\r\n                  else {\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"purchase\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = store_name + \" (upgraded)\";\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from fishing/chest_tables dict.\r\n        for(let c in data_fishing[\"chest_tables\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_fishing[\"chest_tables\"][c][\"items\"]) {\r\n            if(data_fishing[\"chest_tables\"][c][\"items\"][i][\"kind\"] === \"recipe\") {\r\n              let recipe_name = data_fishing[\"chest_tables\"][c][\"items\"][i][\"value\"];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"fishing\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = c + \" treasure box\";\r\n                delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Extract recipe locations from wishing_well dict.\r\n        for(let rarity in data_wishing_well) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_wishing_well[rarity][\"small_roll\"]) {\r\n            if(data_wishing_well[rarity][\"small_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_wishing_well[rarity][\"small_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"wishing_well\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n          for(let i in data_wishing_well[rarity][\"large_roll\"]) {\r\n            if(data_wishing_well[rarity][\"large_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_wishing_well[rarity][\"large_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"wishing_well\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from chicken_statue dict.\r\n        // TODO: Refactor this and wishing_well common code to a method\r\n        for(let rarity in data_chicken_statue) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_chicken_statue[rarity][\"small_roll\"]) {\r\n            if(data_chicken_statue[rarity][\"small_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_chicken_statue[rarity][\"small_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"chicken_statue\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n          for(let i in data_chicken_statue[rarity][\"large_roll\"]) {\r\n            if(data_chicken_statue[rarity][\"large_roll\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_chicken_statue[rarity][\"large_roll\"][i][\"recipe_scroll\"];\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"gacha (random)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = \"chicken_statue\";\r\n              delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from letters. \r\n        for(let l in data_letters) {\r\n          await this.loadingPauseCheck();\r\n          if(data_letters[l][\"items\"] !== undefined) {\r\n            for(let i in data_letters[l][\"items\"]) {\r\n              if(data_letters[l][\"items\"][i][\"recipe_scroll\"] !== undefined) {\r\n                let recipe_name = data_letters[l][\"items\"][i][\"recipe_scroll\"];\r\n                if(data_letters[l][\"ari_has_sold\"] !== undefined) {\r\n                  let localization_string = \"items/other/crops_and_forage/\" + data_letters[l][\"ari_has_sold\"] + \"/name\";\r\n                  let item_name = this.localizations_eng[localization_string];\r\n                  this.cooking_dict[recipe_name][\"obtained_by\"] = \"shipping (\" + item_name + \")\";\r\n                  this.cooking_dict[recipe_name][\"obtained_from\"] = \"letter/mail\";\r\n                  delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n                }\r\n                if(data_letters[l][\"ari_has_donated\"] !== undefined) {\r\n                  let localization_string_regex = \"^[a-z_/]+(\" + data_letters[l][\"ari_has_donated\"] + \")[/](name)$\";\r\n                  let item_name = this.find_localization_string(localization_string_regex)\r\n                  if(item_name !== false) {\r\n                    item_name = this.localizations_eng[item_name];\r\n                    this.cooking_dict[recipe_name][\"obtained_by\"] = \"museum_donation (\" + item_name + \")\";\r\n                    this.cooking_dict[recipe_name][\"obtained_from\"] = \"letter/mail\";\r\n                    delete this.cooking_dict[recipe_name][\"recipe_price\"];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from quests/story_quests dictionary.\r\n        for(let q in data_quests[\"story_quests\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_quests[\"story_quests\"][q][\"rewards\"]) {\r\n            if(data_quests[\"story_quests\"][q][\"rewards\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_quests[\"story_quests\"][q][\"rewards\"][i][\"recipe_scroll\"];\r\n              let quest_name = this.localizations_eng[data_quests[\"story_quests\"][q][\"name\"]];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"quest\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = quest_name;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from quests/fetch_quests dictionary.\r\n        for(let q in data_quests[\"fetch_quests\"]) {\r\n          await this.loadingPauseCheck();\r\n          for(let i in data_quests[\"fetch_quests\"][q][\"rewards\"]) {\r\n            if(data_quests[\"fetch_quests\"][q][\"rewards\"][i][\"recipe_scroll\"] !== undefined) {\r\n              let recipe_name = data_quests[\"fetch_quests\"][q][\"rewards\"][i][\"recipe_scroll\"];\r\n              let quest_name = this.localizations_eng[data_quests[\"fetch_quests\"][q][\"name\"]];\r\n              if(this.cooking_dict[recipe_name] !== undefined) {\r\n                this.cooking_dict[recipe_name][\"obtained_by\"] = \"quest\";\r\n                this.cooking_dict[recipe_name][\"obtained_from\"] = quest_name;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract recipe locations from mines treasure chests\r\n        for(let b in data_dungeons[\"dungeons\"][\"biomes\"]) {\r\n          await this.loadingPauseCheck();\r\n          let biome_name = data_dungeons[\"dungeons\"][\"biomes\"][b][\"artifact_set\"];\r\n          if(biome_name === \"upper_mines_artifacts\") {\r\n            biome_name = \"upper_mines\";\r\n          }\r\n          for(let i in data_dungeons[\"dungeons\"][\"biomes\"][b][\"taste_maker\"]) {\r\n            let recipe_name = data_dungeons[\"dungeons\"][\"biomes\"][b][\"taste_maker\"][i];\r\n            if(this.cooking_dict[recipe_name] !== undefined) {\r\n              this.cooking_dict[recipe_name][\"obtained_by\"] = \"mines (treasure chest)\";\r\n              this.cooking_dict[recipe_name][\"obtained_from\"] = biome_name;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Cleanup and build the list.\r\n        for(let x in this.cooking_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Remove the price for any recipe not marked purchaseable.\r\n          if(this.cooking_dict[x][\"obtained_by\"] === undefined || this.cooking_dict[x][\"obtained_by\"] !== \"purchase\") {\r\n            delete this.cooking_dict[x][\"recipe_price\"];\r\n          }\r\n\r\n          // Remove anything without a recipe.\r\n          if(this.cooking_dict[x][\"recipe\"] === undefined) {\r\n            //console.log(\"Missing recipe for: \" + x); // TODO\r\n            delete this.cooking_dict[x];\r\n          }\r\n          else {\r\n            // Mark unobtainable recipes.\r\n            if(this.cooking_dict[x][\"obtained_by\"] === undefined) {\r\n              this.cooking_dict[x][\"obtained_by\"] = \"unobtainable\";\r\n              this.cooking_dict[x][\"obtained_from\"] = \"unobtainable\";\r\n            }\r\n            // Format the recipe string.\r\n            let recipe = \"\";\r\n            for(let i in this.cooking_dict[x][\"recipe\"]) {\r\n              if(this.cooking_dict[x][\"recipe\"][i][\"item\"] !== undefined) {\r\n                let localization_string_regex = \"^(items)[/](?!furniture)[a-z_/]+(\\\\b\" + this.cooking_dict[x][\"recipe\"][i][\"item\"] + \")[/](name)$\";\r\n                let item_name = this.find_localization_string(localization_string_regex)\r\n                if(item_name !== false) {\r\n                  item_name = this.localizations_eng[item_name];\r\n                }\r\n                else {\r\n                  item_name = this.cooking_dict[x][\"recipe\"][i][\"item\"];\r\n                }\r\n                recipe += item_name + \": \" + this.cooking_dict[x][\"recipe\"][i][\"count\"] + \"\\n\";\r\n              }\r\n              // Extract the time.\r\n              if(this.cooking_dict[x][\"recipe\"][i][\"hours\"] !== undefined || this.cooking_dict[x][\"recipe\"][i][\"minutes\"] !== undefined) {\r\n                this.cooking_dict[x][\"time\"] = \"Hours: \" + this.cooking_dict[x][\"recipe\"][i][\"hours\"] + \"\\nMinutes: \" + this.cooking_dict[x][\"recipe\"][i][\"minutes\"];\r\n              }\r\n            }\r\n            this.cooking_dict[x][\"recipe\"] = recipe;\r\n            this.cooking.push(this.cooking_dict[x]);\r\n          }\r\n        }\r\n\r\n        // PARSE HARVEST (GROWABLES)\r\n        this.crops = [];\r\n        this.crops_dict = {};\r\n        items_other_crops_and_forage;\r\n\r\n        // Extract data from object_prototypes/crop dictionary.\r\n        for(let c in object_prototypes[\"crop\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"crop\"][c][\"day_to_stage\"] !== undefined && c !== \"default\") {\r\n            this.crops_dict[c] = {\r\n              \"key\": c,\r\n              \"growth_time\": object_prototypes[\"crop\"][c][\"day_to_stage\"].length - 1\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"seasons\"] !== undefined) {\r\n              this.crops_dict[c][\"seasons\"] = object_prototypes[\"crop\"][c][\"seasons\"];\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"regrow_days\"] !== undefined) {\r\n              this.crops_dict[c][\"regrow_days\"] = object_prototypes[\"crop\"][c][\"regrow_days\"];\r\n            }\r\n            if(object_prototypes[\"crop\"][c][\"currency\"] !== undefined) {\r\n              this.crops_dict[c][\"currency\"] = object_prototypes[\"crop\"][c][\"currency\"];\r\n            }\r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/crops_and_forage dictionary.\r\n        for(let c in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(this.crops_dict[c] !== undefined) {\r\n            let name = items_other_crops_and_forage[c][\"name\"];\r\n            this.crops_dict[c][\"name\"] = this.localizations_eng[name];\r\n            this.crops_dict[c][\"restore\"] = items_other_crops_and_forage[c][\"restore\"];\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"bin\"] !== undefined) {\r\n              this.crops_dict[c][\"sell_price\"] = items_other_crops_and_forage[c][\"value\"][\"bin\"];\r\n            }\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n              this.crops_dict[c][\"purchase_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n            }          \r\n          }\r\n          else if(c === \"rice_stalk\") {\r\n            let name = items_other_crops_and_forage[c][\"name\"];\r\n            this.crops_dict[\"rice\"][\"name\"] = this.localizations_eng[name];\r\n            this.crops_dict[\"rice\"][\"restore\"] = items_other_crops_and_forage[c][\"restore\"];\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"bin\"] !== undefined) {\r\n              this.crops_dict[\"rice\"][\"sell_price\"] = items_other_crops_and_forage[c][\"value\"][\"bin\"];\r\n            }\r\n            if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n              this.crops_dict[\"rice\"][\"purchase_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n            }    \r\n          }\r\n        }\r\n\r\n        // Extract data from items/other/crops_and_forage dictionary (again).\r\n        for(let c in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(items_other_crops_and_forage[c][\"tags\"] !== undefined) {\r\n            if(items_other_crops_and_forage[c][\"tags\"].includes(\"seed\")) {\r\n              let crop_name = items_other_crops_and_forage[c][\"crop_object\"];\r\n              if(this.crops_dict[crop_name] !== undefined) {\r\n                this.crops_dict[crop_name][\"seed\"] = c;\r\n                this.crops_dict[crop_name][\"seed_name\"] = this.localizations_eng[items_other_crops_and_forage[c][\"name\"]];\r\n                if(items_other_crops_and_forage[c][\"value\"] !== undefined && items_other_crops_and_forage[c][\"value\"][\"store\"] !== undefined) {\r\n                  this.crops_dict[crop_name][\"seed_price\"] = items_other_crops_and_forage[c][\"value\"][\"store\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Cleanup.\r\n        for(let c in this.crops_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Remove regrow duration from plantable forage\r\n          if(this.crops_dict[c][\"restore\"] !== undefined && typeof this.crops_dict[c][\"restore\"] === \"string\") {\r\n            if(this.crops_dict[c][\"restore\"].includes(\"forage\")) {\r\n              if(this.crops_dict[c][\"regrow_days\"] !== undefined) {\r\n                delete this.crops_dict[c][\"regrow_days\"];\r\n              }\r\n            }\r\n          }\r\n          if(this.crops_dict[c][\"seed_price\"] === undefined) {\r\n            this.crops_dict[c][\"seed_price\"] = \"unpurchasable\";\r\n          }\r\n          // Inedible\r\n          if(this.crops_dict[c][\"restore\"] === undefined) {\r\n            this.crops_dict[c][\"restore\"] = \"inedible\";\r\n          }\r\n          // Restoration lookup/conversion.\r\n          else if(this.crops_dict[c][\"restore\"] !== undefined) {\r\n            let restoration_name = this.crops_dict[c][\"restore\"];\r\n            if(data_restoration[\"vars\"][restoration_name] !== undefined) {\r\n              this.crops_dict[c][\"restore\"] = data_restoration[\"vars\"][restoration_name] + \" HP/STA\";\r\n            }\r\n          }\r\n          this.crops.push(this.crops_dict[c]);\r\n        }\r\n\r\n        // PARSE FORAGE\r\n        this.forage = [];\r\n        this.forage_dict = {};\r\n        // 1. Internal name, season, and rarity are specified in forageables dictionary.\r\n        for(let t in data_forageables[\"tables\"]) { // key (normal, beach)\r\n          await this.loadingPauseCheck();\r\n          let seasons = [\"spring\", \"summer\", \"fall\", \"winter\"];\r\n          for(let s in seasons) {\r\n            for(let r in data_forageables[\"tables\"][t][seasons[s]]) { // key (rarity)\r\n              for(let i in data_forageables[\"tables\"][t][seasons[s]][r]) { // array index\r\n                let name = data_forageables[\"tables\"][t][seasons[s]][r][i];\r\n                this.forage_dict[name] = {\r\n                \"key\": name,\r\n                \"rarity\": r,\r\n                \"seasons\": seasons[s]\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 2. Additional data is specified in object_prototypes/bush dictionary.\r\n        for(let b in object_prototypes[\"bush\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(b !== \"default\" && b !== \"bush\") {\r\n            let name = object_prototypes[\"bush\"][b][\"harvest\"];\r\n            this.forage_dict[name] = {\r\n              \"key\": name,\r\n              \"source\": b,\r\n              \"seasons\": object_prototypes[\"bush\"][b][\"seasons\"],\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. Even more data is specified in object_prototypes/tree dictionary.\r\n        for(let t in object_prototypes[\"tree\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(object_prototypes[\"tree\"][t][\"fruit_data\"] !== undefined) {\r\n            let name = object_prototypes[\"tree\"][t][\"fruit_data\"][\"harvest\"];\r\n            this.forage_dict[name] = {\r\n              \"key\": name,\r\n              \"source\": t,\r\n              \"seasons\": object_prototypes[\"tree\"][t][\"fruit_data\"][\"seasons\"]\r\n            }\r\n          }\r\n        }\r\n\r\n        // 4. Actual name and Value (bin/store) are specified in items/other/crops_and_forage dictionary.\r\n        for(let f in items_other_crops_and_forage) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[f] !== undefined) {\r\n            this.forage_dict[f][\"name\"] = this.localizations_eng[items_other_crops_and_forage[f][\"name\"]];\r\n            if(items_other_crops_and_forage[f][\"restore\"] !== undefined) {\r\n              this.forage_dict[f][\"restore\"] = items_other_crops_and_forage[f][\"restore\"];\r\n            }\r\n            if(items_other_crops_and_forage[f][\"value\"] !== undefined) {\r\n              if(items_other_crops_and_forage[f][\"value\"][\"bin\"] !== undefined) {\r\n                this.forage_dict[f][\"sell_price\"] = items_other_crops_and_forage[f][\"value\"][\"bin\"]\r\n              }\r\n              if(items_other_crops_and_forage[f][\"value\"][\"store\"] !== undefined) {\r\n                this.forage_dict[f][\"purchase_price\"] = items_other_crops_and_forage[f][\"value\"][\"store\"]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 5. Extract data from items/fish/misc dictionary.\r\n        for(let f in items_fish[\"misc\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[f] !== undefined) {\r\n            this.forage_dict[f][\"name\"] = this.localizations_eng[items_fish[\"misc\"][f][\"name\"]];\r\n            if(items_fish[\"misc\"][f][\"value\"] !== undefined) {\r\n              if(items_fish[\"misc\"][f][\"value\"][\"bin\"] !== undefined) {\r\n                this.forage_dict[f][\"sell_price\"] = items_fish[\"misc\"][f][\"value\"][\"bin\"];\r\n              }\r\n              if(items_fish[\"misc\"][f][\"value\"][\"store\"] !== undefined) {\r\n                this.forage_dict[f][\"purchase_price\"] = items_fish[\"misc\"][f][\"value\"][\"store\"];\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 6. Extract data from items/mines dictionary.\r\n        for(let m in items_mines) {\r\n          await this.loadingPauseCheck();\r\n          for(let item in items_mines[m]) {\r\n            if(this.forage_dict[item] !== undefined) {\r\n              this.forage_dict[item][\"name\"] = this.localizations_eng[items_mines[m][item][\"name\"]];\r\n              this.forage_dict[item][\"restore\"] = items_mines[m][item][\"restore\"];\r\n              if(items_mines[m][item][\"value\"] !== undefined) {\r\n                if(items_mines[m][item][\"value\"][\"bin\"] !== undefined) {\r\n                  this.forage_dict[item][\"sell_price\"] = items_mines[m][item][\"value\"][\"bin\"];\r\n                }\r\n                if(items_mines[m][item][\"value\"][\"store\"] !== undefined) {\r\n                  this.forage_dict[item][\"purchase_price\"] = items_mines[m][item][\"value\"][\"store\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // 7. Additional data is specified in object_prototypes/crop dictionary.\r\n        for(let c in object_prototypes[\"crop\"]) {\r\n          await this.loadingPauseCheck();\r\n          if(this.forage_dict[c] !== undefined) {\r\n            this.forage_dict[c][\"seasons\"] = object_prototypes[\"crop\"][c][\"seasons\"]\r\n          }\r\n        }\r\n\r\n        // 8. Cleanup\r\n        for(let f in this.forage_dict) {\r\n          await this.loadingPauseCheck();\r\n          // Seasons\r\n          if(typeof this.forage_dict[f][\"seasons\"] === 'object') {\r\n            this.forage_dict[f][\"seasons\"] = this.forage_dict[f][\"seasons\"].join(\", \");\r\n          }\r\n          // Inedible\r\n          if(this.forage_dict[f][\"restore\"] === undefined) {\r\n            this.forage_dict[f][\"restore\"] = \"inedible\";\r\n          }\r\n          // Restoration lookup/conversion.\r\n          else if(this.forage_dict[f][\"restore\"] !== undefined) {\r\n            let restoration_name = this.forage_dict[f][\"restore\"];\r\n            if(data_restoration[\"vars\"][restoration_name] !== undefined) {\r\n              this.forage_dict[f][\"restore\"] = data_restoration[\"vars\"][restoration_name] + \" HP/STA\";\r\n            }\r\n            else {\r\n              this.forage_dict[f][\"restore\"] = this.forage_dict[f][\"restore\"] + \" HP/STA\";\r\n            }\r\n          }\r\n          this.forage.push(this.forage_dict[f]);\r\n        }\r\n\r\n        // Done loading fiddle.\r\n        this.loading_fiddle = false;\r\n        this.save_to_local_storage(_version);\r\n      },\r\n\r\n      parse_costraint: function(constraint) {\r\n        if(typeof constraint === 'object' && constraint[\"WorldFactCheck\"] !== undefined) {\r\n          let priority_value = constraint[\"WorldFactCheck\"][\"priority_value\"]\r\n          let parameter_one = constraint[\"WorldFactCheck\"][\"name\"][0][\"Resolved\"][\"content\"]\r\n          let parameter_two = constraint[\"WorldFactCheck\"][\"value\"][0][\"Resolved\"][\"content\"]\r\n          let comparator = constraint[\"WorldFactCheck\"][\"comparator\"].toUpperCase();\r\n\r\n          if(parameter_one === \"weather\") {\r\n            if(parameter_two === \"pleasant\") {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"sunny\",\r\n                // \"weather\": \"sunny\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === \"rainy\") {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"rainy\",\r\n                // \"weather\": \"rainy\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === \"snowy\") {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"snowy\",\r\n                // \"weather\": \"snowy\",\r\n                \"priority\": priority_value\r\n              };\r\n            }            \r\n          }\r\n\r\n          if(parameter_one === \"season\") {\r\n            if(parameter_two === 0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"spring\",\r\n                // \"season\": \"spring\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 2419200) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"summer\",\r\n                // \"season\": \"summer\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 4838400) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"fall\",\r\n                // \"season\": \"fall\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 7257600) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"winter\",\r\n                // \"season\": \"winter\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n          }\r\n\r\n          if(parameter_one === \"day_of_the_week\") {\r\n            if(parameter_two === 0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"monday\",\r\n                // \"day_of_the_week\": \"monday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 86400) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"tuesday\",\r\n                // \"day_of_the_week\": \"tuesday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 172800) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"wednesday\",\r\n                // \"day_of_the_week\": \"wednesday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 259200) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"thursday\",\r\n                // \"day_of_the_week\": \"thursday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 345600) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"friday\",\r\n                // \"day_of_the_week\": \"friday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 432000) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"saturday\",\r\n                // \"day_of_the_week\": \"saturday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 518400) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": \"sunday\",\r\n                // \"day_of_the_week\": \"sunday\",\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n          }\r\n\r\n          // Counter Constraints\r\n          if(\"summer_tuesday_progress\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Summer Tuesday\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(\"fnati\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Friday Night At The Inn (Regular)\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(\"drawing_fnati\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Friday Night At The Inn (Drawing)\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(\"dessert_fnati\" === parameter_one) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Friday Night At The Inn (Dessert)\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n          if(parameter_one.indexOf(\"rain_counter\") !== -1) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"counter\": {\r\n                \"parameter_one\": \"Rainy Day\",\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            };\r\n          }\r\n\r\n          // Quest Constraints\r\n          if(parameter_one.indexOf(\"quest\") !== -1) {\r\n            let quest_name = parameter_one.replace(\"quest_\",\"\").replace(\"_complete\",\"\");\r\n            if(parameter_two === 0.0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"quest\": {\r\n                  \"parameter_one\": quest_name,\r\n                  \"parameter_two\": \"incomplete\"\r\n                },\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n            if(parameter_two === 1.0) {\r\n              return {\r\n                \"comparator\": comparator,\r\n                \"quest\": {\r\n                  \"parameter_one\": quest_name,\r\n                  \"parameter_two\": \"complete\"\r\n                },\r\n                \"priority\": priority_value\r\n              };\r\n            }\r\n          }\r\n\r\n          // Festival Constraints\r\n          if(parameter_one.indexOf(\"festival_date\") !== -1) {\r\n            return {\r\n              \"comparator\": comparator,\r\n              \"festival_date\": {\r\n                \"parameter_one\": parameter_one,\r\n                \"parameter_two\": parameter_two\r\n              },\r\n              \"priority\": priority_value\r\n            }\r\n          }\r\n        }\r\n\r\n        if(constraint[\"Any\"] !== undefined) {\r\n          let compound_constraint = [];\r\n          for(let i in constraint[\"Any\"][0]) {\r\n            compound_constraint.push(this.parse_costraint(constraint[\"Any\"][0][i]));\r\n          }\r\n          return compound_constraint;\r\n        }\r\n\r\n        return false;\r\n      },\r\n\r\n      parse_itinerary: function(itinerary) {\r\n        let parsed_itinerary = [];\r\n        for(let time in itinerary) {\r\n          let original_clock_time = new Date(time * 1000).toISOString().substring(11, 19);\r\n          let hours = Number(original_clock_time.split(\":\")[0]);\r\n          let minutes = Number(original_clock_time.split(\":\")[1]);\r\n          let seconds = original_clock_time.split(\":\")[2];\r\n\r\n          if(minutes % 10 >= 5) {\r\n            minutes = (Math.floor(minutes / 10) + 1) * 10;\r\n            if(minutes == 60) {\r\n              minutes = 0;\r\n              hours++;\r\n            }\r\n          }\r\n          else {\r\n            minutes -= minutes % 10;\r\n          }\r\n\r\n          // Make 0AM - 6AM read as 24:00 - 30:00 in 24h time, indicating \"next day\"\r\n          if(hours <= 2) {\r\n            hours += 24;\r\n          }\r\n\r\n          hours = this.pad(hours, 2);\r\n          let modified_clock_time = this.pad(hours, 2) + \":\" + this.pad(minutes, 2) + \":\" + seconds;\r\n\r\n          parsed_itinerary.push({\r\n            \"time\": modified_clock_time,\r\n            \"destination_location\": itinerary[time][\"destination\"][\"location_id\"],\r\n            \"destination_point\": itinerary[time][\"destination\"][\"point_name\"]\r\n          })\r\n        }\r\n        return parsed_itinerary;\r\n      },\r\n\r\n      parse_t2_output: async function(json) {\r\n        var data_schedules = json[\"schedules\"];\r\n\r\n        // SCHEDULES\r\n        this.schedules = [];\r\n        this.schedules_dict = {};\r\n\r\n        var characters = [\r\n          \"adeline\",\r\n          \"balor\",\r\n          \"caldarus\",\r\n          \"celine\",\r\n          \"darcy\",\r\n          \"dell\",\r\n          \"dozy\",\r\n          \"eiland\",\r\n          \"elsie\",\r\n          \"errol\",\r\n          \"hayden\",\r\n          \"hemlock\",\r\n          \"henrietta\",\r\n          \"holt\",\r\n          \"juniper\",\r\n          \"josephine\",\r\n          \"landen\",\r\n          \"louis\",\r\n          \"luc\",\r\n          \"maple\",\r\n          \"march\",\r\n          \"merri\",\r\n          \"nora\",\r\n          \"olric\",\r\n          \"reina\",\r\n          \"ryis\",\r\n          \"seridia\",\r\n          \"stillwell\",\r\n          \"taliferro\",\r\n          \"terithia\",\r\n          \"valen\",\r\n          \"vera\",\r\n          \"wheedle\",\r\n          \"zorel\"\r\n        ]\r\n\r\n        for(let c in characters) {\r\n          await this.loadingPauseCheck();\r\n          this.schedules_dict[characters[c]] = {};\r\n          for(let s in data_schedules[characters[c]]) {\r\n            let parsed_constraints = {\r\n              \"and\": []\r\n            }\r\n            for(let i in data_schedules[characters[c]][s][\"requires\"]) {\r\n              let parsed_constraint = this.parse_costraint(data_schedules[characters[c]][s][\"requires\"][i]);\r\n              if(parsed_constraint !== false) {\r\n                if(Array.isArray(parsed_constraint)) {\r\n                  parsed_constraints[\"or\"] = parsed_constraint;\r\n                }\r\n                else {\r\n                  parsed_constraints[\"and\"].push(parsed_constraint);\r\n                }\r\n              }\r\n            }\r\n            \r\n            let season = null;\r\n            let weather = null;\r\n            let days_of_the_week = [];\r\n            let extra_conditions = [];\r\n            let extra_conditions_string = \"\";\r\n\r\n            if(parsed_constraints[\"and\"] !== undefined) {\r\n              for(let i in parsed_constraints[\"and\"]) {\r\n                // Day, Season, Weather\r\n                if(parsed_constraints[\"and\"][i][\"parameter_one\"] !== undefined) {\r\n                  if(parsed_constraints[\"and\"][i][\"parameter_one\"] === \"day_of_the_week\") {\r\n                    days_of_the_week.push(parsed_constraints[\"and\"][i][\"parameter_two\"]);\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"parameter_one\"] === \"weather\") {\r\n                    weather = parsed_constraints[\"and\"][i][\"parameter_two\"];\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"parameter_one\"] === \"season\") {\r\n                    season = parsed_constraints[\"and\"][i][\"parameter_two\"];\r\n                  }\r\n                }\r\n                // Counters, Quests, Festivals\r\n                else {\r\n                  if(parsed_constraints[\"and\"][i][\"counter\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"and\"][i];\r\n                    let condition_string = \"counter(\" + condition[\"counter\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"counter\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"quest\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"and\"][i];\r\n                    let condition_string = \"quest(\" + condition[\"quest\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"quest\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"and\"][i][\"festival_date\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"and\"][i];\r\n                    let condition_string = \"festival(\" + condition[\"festival_date\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"festival_date\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if(parsed_constraints[\"or\"] !== undefined) {\r\n              for(let i in parsed_constraints[\"or\"]) {\r\n                if(parsed_constraints[\"or\"][i][\"parameter_one\"] === \"day_of_the_week\") {\r\n                  days_of_the_week.push(parsed_constraints[\"or\"][i][\"parameter_two\"]);\r\n                }\r\n                else {\r\n                  // Add to extra conditions.\r\n                  if(parsed_constraints[\"or\"][i][\"counter\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"or\"][i];\r\n                    let condition_string = \"counter(\" + condition[\"counter\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"counter\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"or\"][i][\"quest\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"or\"][i];\r\n                    let condition_string = \"quest(\" + condition[\"quest\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"quest\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                  if(parsed_constraints[\"or\"][i][\"festival_date\"] !== undefined) {\r\n                    let condition = parsed_constraints[\"or\"][i];\r\n                    let condition_string = \"festival(\" + condition[\"festival_date\"][\"parameter_one\"] + \") \" + condition[\"comparator\"] + \" \" + condition[\"festival_date\"][\"parameter_two\"];\r\n                    extra_conditions.push(condition_string);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if(weather === \"snowy\") {\r\n                extra_conditions.push(\"season EQUAL winter\");\r\n            }\r\n\r\n            // Format the extra conditions.\r\n            for(let i in extra_conditions) {\r\n              if(i < extra_conditions.length - 1) {\r\n                extra_conditions_string += extra_conditions[i] + \".\\n\"\r\n              }\r\n              else {\r\n                extra_conditions_string += extra_conditions[i] + \".\";\r\n              }\r\n            }\r\n\r\n            if(season === null || season === undefined) {\r\n              if(weather !== \"rainy\") {\r\n                season = \"spring\";\r\n              }\r\n              else {\r\n                season = \"rainy\";\r\n              }\r\n            }\r\n            if(this.schedules_dict[characters[c]][season] === undefined) {\r\n              if(season !== \"rainy\") {\r\n                this.schedules_dict[characters[c]][season] = {}; // keys are days of week that map to lists of objects (itinerary+extra_conditions)\r\n              }\r\n              else {\r\n                this.schedules_dict[characters[c]][season] = []; // lists of objects (itinerary+extra_conditions)\r\n              }\r\n            }\r\n            \r\n            if(weather !== \"rainy\" && weather !== \"snowy\") {\r\n              for(let i in days_of_the_week) {\r\n                if(this.schedules_dict[characters[c]][season][days_of_the_week[i]] === undefined) {\r\n                  this.schedules_dict[characters[c]][season][days_of_the_week[i]] = [];\r\n                }\r\n\r\n                this.schedules_dict[characters[c]][season][days_of_the_week[i]].push({\r\n                  \"itinerary\": this.parse_itinerary(data_schedules[characters[c]][s][\"itinerary\"]), // Put the parsed itinerary here.\r\n                  \"extra_conditions\": extra_conditions_string\r\n                });\r\n              }\r\n            }\r\n            else {\r\n              this.schedules_dict[characters[c]][\"rainy\"].push({\r\n                \"itinerary\": this.parse_itinerary(data_schedules[characters[c]][s][\"itinerary\"]), // Put the parsed itinerary here.\r\n                \"extra_conditions\": extra_conditions_string\r\n              })\r\n            }\r\n          }\r\n        }\r\n\r\n        // Duplicate everyone's (except market day vendors and unimplemented characters) Friday schedule.\r\n        let ignore_these_characters = [\"caldarus\", \"darcy\", \"dozy\", \"henrietta\", \"louis\", \"merri\", \"seridia\", \"stillwell\", \"taliferro\", \"vera\", \"wheedle\", \"zorel\"];\r\n        for(let character_name in this.schedules_dict) {\r\n          if(!ignore_these_characters.includes(character_name)) {\r\n            for(let i in this.seasons) {\r\n              let season = this.seasons[i].toLowerCase();\r\n              if(season !== \"rainy\" && season !== \"spring\") {\r\n                if(this.schedules_dict[character_name][season][\"friday\"] === undefined) {\r\n                  this.schedules_dict[character_name][season][\"friday\"] = this.schedules_dict[character_name][\"spring\"][\"friday\"];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Done loading t2_output.\r\n        this.schedules = this.schedules_dict;\r\n        this.loading_t2_output = false;\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.load_manifest();\r\n      let local_storage_loaded = this.load_from_local_storage(this.version_loaded);\r\n      if(!local_storage_loaded) {\r\n        this.load_data(this.version_loaded);\r\n      }\r\n      else {\r\n        this.loading_fiddle = false;\r\n        this.loading_t2_output = false;\r\n      }\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4a1a17a3\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport Vuetify from 'vuetify/lib/framework';\r\n\r\nVue.use(Vuetify);\r\n\r\nexport default new Vuetify({\r\n    theme: { dark: true },\r\n});\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  vuetify,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblah\"] = self[\"webpackChunkblah\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(7679); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["fn","on","attrs","_c","key","version","assets_base_url","staticStyle","_e","value","selected_tab","callback","expression","_vm","model","artifact_search","bug_search","cooking_search","cooking","fish_search","forage_search","crops_search","crops","$$v","character_panel","characters","character_name","season_panel","_l","season","x","staticClass","_s","day_panel","day","y","schedule_search","render","staticRenderFns","name","data","cache_id","lastLoadingPause","Date","now","loading_fiddle","loading_t2_output","versions","version_loaded","cache","tabs","artifact_headers","text","artifacts","bug_headers","bugs","cooking_headers","crops_headers","fish_headers","fish","forage_headers","forage","seasons","days","schedules","schedule_headers","methods","load_manifest","console","log","manifest","load_file","load_from_local_storage","localStorage","getItem","undefined","local_cache_id","version_cache","JSON","parse","removeItem","save_to_local_storage","setItem","stringify","isLoading","pauseLoading","Promise","r","setTimeout","loadingPauseCheck","url","request","XMLHttpRequest","open","send","responseText","clear_data","artifacts_dict","bugs_dict","cooking_dict","crops_dict","forage_dict","schedules_dict","load_data","local_storage_loaded","parse_localization","parse_fiddle","parse_t2_output","convert_time","time","toString","match","length","slice","join","pad","num","size","parse_hours_range","hours_array","start_time","end_time","json","localizations_eng","find_localization_string","pattern","l","_version","data_artifacts","data_bugs","data_dungeons","data_fish","data_fishing","items_other_artifacts","items_other_bugs","items_other_crops_and_forage","items_fish","items_mines","items_other_cooked_dishes","data_letters","data_misc","data_museum_wings","object_prototypes","data_quests","data_stores","data_wishing_well","data_chicken_statue","data_restoration","data_forageables","mines_location","m","includes","push","fish_location","f","i","Array","isArray","artifact_location_lookup_dict","location","artifact","node","drop","set","item","item_name","object_to_biome_dict","biome","biome_name","ore","o","a","s","source","b","c","store_name","stock_item","recipe_name","rarity","localization_string","localization_string_regex","q","quest_name","recipe","crop_name","restoration_name","t","parse_costraint","constraint","priority_value","parameter_one","parameter_two","comparator","toUpperCase","indexOf","replace","compound_constraint","parse_itinerary","itinerary","parsed_itinerary","original_clock_time","toISOString","substring","hours","Number","split","minutes","seconds","Math","floor","modified_clock_time","data_schedules","parsed_constraints","parsed_constraint","weather","days_of_the_week","extra_conditions","extra_conditions_string","condition","condition_string","ignore_these_characters","toLowerCase","mounted","component","Vue","use","Vuetify","theme","dark","config","productionTip","vuetify","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}